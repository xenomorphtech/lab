diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/AbstractGameAction$ActionType.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/AbstractGameAction$ActionType.class
new file mode 100644
index 0000000..e4406e6
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/AbstractGameAction$ActionType.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/AbstractGameAction$AttackEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/AbstractGameAction$AttackEffect.class
new file mode 100644
index 0000000..fe1be82
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/AbstractGameAction$AttackEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/AbstractGameAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/AbstractGameAction.class
new file mode 100644
index 0000000..e45e6a8
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/AbstractGameAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/AbstractGameAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/AbstractGameAction.java
index e3f4521..24b004c 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/AbstractGameAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/AbstractGameAction.java
@@ -20,6 +20,7 @@ public abstract class AbstractGameAction {
     public int amount;
     public AbstractCreature target;
     public AbstractCreature source;
+    public int step = 0;
 
     protected void setValues(AbstractCreature target, DamageInfo info) {
         this.target = target;
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/ActionLogEntry.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/ActionLogEntry.class
new file mode 100644
index 0000000..7a91808
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/ActionLogEntry.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/ClearCardQueueAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/ClearCardQueueAction.class
new file mode 100644
index 0000000..64c8196
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/ClearCardQueueAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/GameActionManager$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/GameActionManager$1.class
new file mode 100644
index 0000000..4c34c9f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/GameActionManager$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/GameActionManager$Phase.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/GameActionManager$Phase.class
new file mode 100644
index 0000000..b0d96c3
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/GameActionManager$Phase.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/GameActionManager.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/GameActionManager.class
new file mode 100644
index 0000000..3dfedea
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/GameActionManager.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/GameActionManager.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/GameActionManager.java
index 41e7007..3bfa123 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/GameActionManager.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/GameActionManager.java
@@ -138,6 +138,60 @@ public class GameActionManager {
     }
 
     public void update() {
+        if (this.phase == Phase.WAITING_ON_USER) {
+            this.getNextAction();
+        }
+
+        if (this.currentAction != null) {
+            String className = this.currentAction.getClass().getSimpleName();
+            if (className == null) {className = "unknonw";}
+            logger.info("action ".concat(className));
+        }
+
+        if (this.phase == Phase.EXECUTING_ACTIONS) {
+            if (this.currentAction != null && !this.currentAction.isDone) {
+                this.currentAction.update();
+                if (!this.currentAction.isDone)
+                    return;
+            }
+
+            if (this.currentAction != null) {
+                String className = this.currentAction.getClass().getSimpleName();
+                String isDone = this.currentAction.isDone ? "done" : "";
+                if (className == null) {className = "unknonw";}
+                logger.info(("action ".concat(className)).concat(isDone));
+            }
+
+            this.previousAction = this.currentAction;
+            this.currentAction = null;
+            this.getNextAction();
+            if (this.currentAction == null && AbstractDungeon.getCurrRoom().phase == AbstractRoom.RoomPhase.COMBAT && !this.usingCard) {
+                this.phase = Phase.WAITING_ON_USER;
+                AbstractDungeon.player.hand.refreshHandLayout();
+                this.hasControl = false;
+                this.usingCard = false;
+            } else if (this.currentAction != null) {
+                this.usingCard = false;
+                this.currentAction.update();
+                this.update();
+            }
+            this.usingCard = false;
+
+            if (this.phase == Phase.WAITING_ON_USER) {
+                if (this.currentAction == null) {
+                    this.getNextAction();
+                    if (this.currentAction != null) {
+                        this.currentAction.update();
+                        this.update();
+                    }
+                } else if (this.currentAction != null && this.currentAction.isDone) {
+                    this.previousAction = this.currentAction;
+                    this.currentAction = null;
+                    this.getNextAction();
+                }
+            }
+        }
+        /*
         switch (this.phase) {
             case WAITING_ON_USER: {
                 this.getNextAction();
@@ -146,8 +200,16 @@ public class GameActionManager {
             case EXECUTING_ACTIONS: {
                 if (this.currentAction != null && !this.currentAction.isDone) {
                     this.currentAction.update();
-                    break;
+                    if (!this.currentAction.isDone)
+                        break;
+                }
+
+                if (this.currentAction != null) {
+                    String className = this.currentAction.getClass().getSimpleName();
+                    if (className == null) {className = "unknonw";}
+                    logger.info("action ".concat(className));
                 }
+
                 this.previousAction = this.currentAction;
                 this.currentAction = null;
                 this.getNextAction();
@@ -162,7 +224,7 @@ public class GameActionManager {
             default: {
                 logger.info("This should never be called");
             }
-        }
+        }*/
     }
 
     public void endTurn() {
@@ -295,6 +357,7 @@ public class GameActionManager {
                 AbstractDungeon.getCurrRoom().monsters.queueMonsters();
             }
         } else if (!this.monsterQueue.isEmpty()) {
+            logger.info("dequeu mob action");
             AbstractMonster m = this.monsterQueue.get((int)0).monster;
             if (!m.isDeadOrEscaped() || m.halfDead) {
                 if (m.intent != AbstractMonster.Intent.NONE) {
@@ -313,9 +376,10 @@ public class GameActionManager {
             }
             this.monsterQueue.remove(0);
             if (this.monsterQueue.isEmpty()) {
-                this.addToBottom(new WaitAction(1.5f));
+                //this.addToBottom(new WaitAction(1.5f));
             }
         } else if (this.turnHasEnded && !AbstractDungeon.getMonsters().areMonstersBasicallyDead()) {
+            logger.info("turn ended");
             if (!AbstractDungeon.getCurrRoom().skipMonsterTurn) {
                 AbstractDungeon.getCurrRoom().monsters.applyEndOfTurnPowers();
             }
@@ -381,7 +445,7 @@ public class GameActionManager {
     }
 
     public void cleanCardQueue() {
-        Iterator<Object> i = this.cardQueue.iterator();
+        Iterator<CardQueueItem> i = this.cardQueue.iterator();
         while (i.hasNext()) {
             CardQueueItem cardQueueItem = i.next();
             if (!AbstractDungeon.player.hand.contains(cardQueueItem.card)) continue;
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/IntentFlashAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/IntentFlashAction.class
new file mode 100644
index 0000000..74edd8f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/IntentFlashAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/IntentFlashAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/IntentFlashAction.java
index 3e9b667..4d4a67d 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/IntentFlashAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/IntentFlashAction.java
@@ -22,6 +22,7 @@ extends AbstractGameAction {
     public void update() {
         if (this.duration == this.startDuration) {
             this.m.flashIntent();
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateFastAttackAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateFastAttackAction.class
new file mode 100644
index 0000000..5657f94
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateFastAttackAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/AnimateFastAttackAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateFastAttackAction.java
index 0996639..612bb2f 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/AnimateFastAttackAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateFastAttackAction.java
@@ -23,7 +23,7 @@ extends AbstractGameAction {
             this.source.useFastAttackAnimation();
             this.called = true;
         }
-        this.tickDuration();
+        this.isDone = true;
     }
 }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateHopAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateHopAction.class
new file mode 100644
index 0000000..364e310
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateHopAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/AnimateHopAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateHopAction.java
index 800377c..a63631b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/AnimateHopAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateHopAction.java
@@ -23,7 +23,7 @@ extends AbstractGameAction {
             this.source.useHopAnimation();
             this.called = true;
         }
-        this.tickDuration();
+        this.isDone = true;
     }
 }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateJumpAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateJumpAction.class
new file mode 100644
index 0000000..a210e28
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateJumpAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/AnimateJumpAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateJumpAction.java
index 50bfffd..263f52e 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/AnimateJumpAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateJumpAction.java
@@ -23,7 +23,7 @@ extends AbstractGameAction {
             this.source.useJumpAnimation();
             this.called = true;
         }
-        this.tickDuration();
+        this.isDone = true;
     }
 }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateShakeAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateShakeAction.class
new file mode 100644
index 0000000..626687e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateShakeAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/AnimateShakeAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateShakeAction.java
index 383da9a..5936de5 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/AnimateShakeAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateShakeAction.java
@@ -24,7 +24,7 @@ extends AbstractGameAction {
             this.source.useShakeAnimation(this.shakeDur);
             this.called = true;
         }
-        this.tickDuration();
+        this.isDone = true;
     }
 }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateSlowAttackAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateSlowAttackAction.class
new file mode 100644
index 0000000..55115f1
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateSlowAttackAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/AnimateSlowAttackAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateSlowAttackAction.java
index f96a2df..9993d15 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/AnimateSlowAttackAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/AnimateSlowAttackAction.java
@@ -28,7 +28,7 @@ extends AbstractGameAction {
             }
             this.called = true;
         }
-        this.tickDuration();
+        this.isDone = true;
     }
 }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/FastShakeAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/FastShakeAction.class
new file mode 100644
index 0000000..6c28305
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/FastShakeAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/FastShakeAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/FastShakeAction.java
index 5bc6169..2c4715b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/FastShakeAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/FastShakeAction.java
@@ -24,7 +24,7 @@ extends AbstractGameAction {
             this.source.useShakeAnimation(this.shakeDur);
             this.called = true;
         }
-        this.tickDuration();
+        this.isDone = true;
     }
 }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/SetAnimationAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/SetAnimationAction.class
new file mode 100644
index 0000000..6195160
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/SetAnimationAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/SetAnimationAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/SetAnimationAction.java
index b0e6937..6544d4e 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/SetAnimationAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/SetAnimationAction.java
@@ -26,7 +26,7 @@ extends AbstractGameAction {
             this.called = true;
             this.source.state.addAnimation(0, "idle", true, 0.0f);
         }
-        this.tickDuration();
+        this.isDone = true;
     }
 }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/ShoutAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/ShoutAction.class
new file mode 100644
index 0000000..b42ccb5
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/ShoutAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/ShoutAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/ShoutAction.java
index 7bd547f..ef9c0e4 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/ShoutAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/ShoutAction.java
@@ -34,7 +34,7 @@ extends AbstractGameAction {
             AbstractDungeon.effectList.add(new MegaSpeechBubble(this.source.hb.cX + this.source.dialogX, this.source.hb.cY + this.source.dialogY, this.bubbleDuration, this.msg, this.source.isPlayer));
             this.used = true;
         }
-        this.tickDuration();
+        this.isDone = true;
     }
 }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/TalkAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/TalkAction.class
new file mode 100644
index 0000000..29184a2
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/TalkAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/TalkAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/TalkAction.java
index ee416bd..7b26f0e 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/TalkAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/TalkAction.java
@@ -44,7 +44,7 @@ extends AbstractGameAction {
             }
             this.used = true;
         }
-        this.tickDuration();
+        this.isDone = true;
     }
 }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/VFXAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/VFXAction.class
new file mode 100644
index 0000000..40b9b75
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/VFXAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/VFXAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/VFXAction.java
index a797710..8ab61df 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/animations/VFXAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/animations/VFXAction.java
@@ -48,7 +48,7 @@ extends AbstractGameAction {
                 AbstractDungeon.effectList.add(this.effect);
             }
         }
-        this.tickDuration();
+        this.isDone = true;
     }
 }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ApplyPowerAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ApplyPowerAction.class
new file mode 100644
index 0000000..8758a89
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ApplyPowerAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/ApplyPowerAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ApplyPowerAction.java
index cff8fbe..bbf405b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/ApplyPowerAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ApplyPowerAction.java
@@ -130,7 +130,7 @@ extends AbstractGameAction {
                 this.target.getPower("Artifact").onSpecificTrigger();
                 return;
             }
-            AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, this.attackEffect));
+            //AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, this.attackEffect));
             boolean hasBuffAlready = false;
             for (AbstractPower p : this.target.powers) {
                 if (!p.ID.equals(this.powerToApply.ID) || p.ID.equals("Night Terror")) continue;
@@ -169,19 +169,9 @@ extends AbstractGameAction {
                     AbstractDungeon.effectList.add(new PowerDebuffEffect(this.target.hb.cX - this.target.animX, this.target.hb.cY + this.target.hb.height / 2.0f, this.powerToApply.name));
                 }
                 AbstractDungeon.onModifyPower();
-                if (this.target.isPlayer) {
-                    void var2_6;
-                    boolean bl = false;
-                    for (AbstractPower p : this.target.powers) {
-                        if (p.type != AbstractPower.PowerType.BUFF) continue;
-                        ++var2_6;
-                    }
-                    if (var2_6 >= 10) {
-                        UnlockTracker.unlockAchievement("POWERFUL");
-                    }
-                }
             }
         }
+        this.isDone = true;
         this.tickDuration();
     }
 }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/AttackDamageRandomEnemyAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/AttackDamageRandomEnemyAction.class
new file mode 100644
index 0000000..bfd6698
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/AttackDamageRandomEnemyAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/AttackDamageRandomEnemyAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/AttackDamageRandomEnemyAction.java
index f6ed246..dba2ec3 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/AttackDamageRandomEnemyAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/AttackDamageRandomEnemyAction.java
@@ -34,8 +34,8 @@ extends AbstractGameAction {
             this.card.calculateCardDamage((AbstractMonster)this.target);
             if (AbstractGameAction.AttackEffect.LIGHTNING == this.effect) {
                 this.addToTop(new DamageAction(this.target, new DamageInfo(AbstractDungeon.player, this.card.damage, this.card.damageTypeForTurn), AbstractGameAction.AttackEffect.NONE));
-                this.addToTop(new SFXAction("ORB_LIGHTNING_EVOKE", 0.1f));
-                this.addToTop(new VFXAction(new LightningEffect(this.target.hb.cX, this.target.hb.cY)));
+                //this.addToTop(new SFXAction("ORB_LIGHTNING_EVOKE", 0.1f));
+                //this.addToTop(new VFXAction(new LightningEffect(this.target.hb.cX, this.target.hb.cY)));
             } else {
                 this.addToTop(new DamageAction(this.target, new DamageInfo(AbstractDungeon.player, this.card.damage, this.card.damageTypeForTurn), this.effect));
             }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DamageAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DamageAction.class
new file mode 100644
index 0000000..eccef5d
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DamageAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/DamageAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DamageAction.java
index 9354288..49b6ab0 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/DamageAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DamageAction.java
@@ -66,12 +66,13 @@ extends AbstractGameAction {
                 this.isDone = true;
                 return;
             }
-            AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, this.attackEffect, this.muteSfx));
+            //AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, this.attackEffect, this.muteSfx));
             if (this.goldAmount != 0) {
                 this.stealGold();
             }
         }
         this.tickDuration();
+        this.isDone = true;
         if (this.isDone) {
             if (this.attackEffect == AbstractGameAction.AttackEffect.POISON) {
                 this.target.tint.color.set(Color.CHARTREUSE.cpy());
@@ -85,7 +86,7 @@ extends AbstractGameAction {
                 AbstractDungeon.actionManager.clearPostCombatActions();
             }
             if (!this.skipWait && !Settings.FAST_MODE) {
-                this.addToTop(new WaitAction(0.1f));
+                //this.addToTop(new WaitAction(0.1f));
             }
         }
     }
@@ -101,10 +102,10 @@ extends AbstractGameAction {
         this.target.gold -= this.goldAmount;
         for (int i = 0; i < this.goldAmount; ++i) {
             if (this.source.isPlayer) {
-                AbstractDungeon.effectList.add(new GainPennyEffect(this.target.hb.cX, this.target.hb.cY));
+                //AbstractDungeon.effectList.add(new GainPennyEffect(this.target.hb.cX, this.target.hb.cY));
                 continue;
             }
-            AbstractDungeon.effectList.add(new GainPennyEffect(this.source, this.target.hb.cX, this.target.hb.cY, this.source.hb.cX, this.source.hb.cY, false));
+            //AbstractDungeon.effectList.add(new GainPennyEffect(this.source, this.target.hb.cX, this.target.hb.cY, this.source.hb.cX, this.source.hb.cY, false));
         }
     }
 }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DamageAllEnemiesAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DamageAllEnemiesAction.class
new file mode 100644
index 0000000..30b768c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DamageAllEnemiesAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/DamageAllEnemiesAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DamageAllEnemiesAction.java
index 3a5c957..8c57cb6 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/DamageAllEnemiesAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DamageAllEnemiesAction.java
@@ -51,15 +51,16 @@ extends AbstractGameAction {
             for (int i = 0; i < temp; ++i) {
                 if (AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).isDying || AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).currentHealth <= 0 || AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).isEscaping) continue;
                 if (playedMusic) {
-                    AbstractDungeon.effectList.add(new FlashAtkImgEffect(AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cX, AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cY, this.attackEffect, true));
+                    //AbstractDungeon.effectList.add(new FlashAtkImgEffect(AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cX, AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cY, this.attackEffect, true));
                     continue;
                 }
                 playedMusic = true;
-                AbstractDungeon.effectList.add(new FlashAtkImgEffect(AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cX, AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cY, this.attackEffect));
+                //AbstractDungeon.effectList.add(new FlashAtkImgEffect(AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cX, AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cY, this.attackEffect));
             }
             this.firstFrame = false;
         }
         this.tickDuration();
+        this.isDone = true;
         if (this.isDone) {
             for (AbstractPower p : AbstractDungeon.player.powers) {
                 p.onDamageAllEnemies(this.damage);
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DiscardAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DiscardAction.class
new file mode 100644
index 0000000..36802c3
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DiscardAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/DiscardAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DiscardAction.java
index 2f99962..54bb2ac 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/DiscardAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DiscardAction.java
@@ -38,7 +38,8 @@ extends AbstractGameAction {
 
     @Override
     public void update() {
-        if (this.duration == DURATION) {
+        if (this.step == 0) {
+            this.step = 1;
             if (AbstractDungeon.getMonsters().areMonstersBasicallyDead()) {
                 this.isDone = true;
                 return;
@@ -55,7 +56,6 @@ extends AbstractGameAction {
                     GameActionManager.incrementDiscard(this.endTurn);
                 }
                 AbstractDungeon.player.hand.applyPowers();
-                this.tickDuration();
                 return;
             }
             if (this.isRandom) {
@@ -69,7 +69,6 @@ extends AbstractGameAction {
                 if (this.amount < 0) {
                     AbstractDungeon.handCardSelectScreen.open(TEXT[0], 99, true, true);
                     AbstractDungeon.player.hand.applyPowers();
-                    this.tickDuration();
                     return;
                 }
                 numDiscarded = this.amount;
@@ -77,19 +76,20 @@ extends AbstractGameAction {
                     AbstractDungeon.handCardSelectScreen.open(TEXT[0], this.amount, false);
                 }
                 AbstractDungeon.player.hand.applyPowers();
-                this.tickDuration();
                 return;
             }
         }
-        if (!AbstractDungeon.handCardSelectScreen.wereCardsRetrieved) {
-            for (AbstractCard c : AbstractDungeon.handCardSelectScreen.selectedCards.group) {
-                this.p.hand.moveToDiscardPile(c);
-                c.triggerOnManualDiscard();
-                GameActionManager.incrementDiscard(this.endTurn);
+        if (this.step == 1) {
+            if (!AbstractDungeon.handCardSelectScreen.wereCardsRetrieved) {
+                for (AbstractCard c : AbstractDungeon.handCardSelectScreen.selectedCards.group) {
+                    this.p.hand.moveToDiscardPile(c);
+                    c.triggerOnManualDiscard();
+                    GameActionManager.incrementDiscard(this.endTurn);
+                }
+                AbstractDungeon.handCardSelectScreen.wereCardsRetrieved = true;
             }
-            AbstractDungeon.handCardSelectScreen.wereCardsRetrieved = true;
+            this.isDone = true;
         }
-        this.tickDuration();
     }
 
     static {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DiscardAtEndOfTurnAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DiscardAtEndOfTurnAction.class
new file mode 100644
index 0000000..f34002e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DiscardAtEndOfTurnAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/DiscardAtEndOfTurnAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DiscardAtEndOfTurnAction.java
index 8b8b39b..8b5a24d 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/DiscardAtEndOfTurnAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DiscardAtEndOfTurnAction.java
@@ -23,7 +23,7 @@ extends AbstractGameAction {
 
     @Override
     public void update() {
-        if (this.duration == DURATION) {
+        if (!this.isDone) {
             Iterator<AbstractCard> c = AbstractDungeon.player.hand.group.iterator();
             while (c.hasNext()) {
                 AbstractCard e = c.next();
@@ -38,7 +38,7 @@ extends AbstractGameAction {
                     this.addToTop(new DiscardAction(AbstractDungeon.player, null, AbstractDungeon.player.hand.size(), true, true));
                 }
             }
-            ArrayList cards = (ArrayList)AbstractDungeon.player.hand.group.clone();
+            ArrayList<AbstractCard> cards = (ArrayList<AbstractCard>)AbstractDungeon.player.hand.group.clone();
             Collections.shuffle(cards);
             for (AbstractCard c2 : cards) {
                 c2.triggerOnEndOfPlayerTurn();
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DiscardSpecificCardAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DiscardSpecificCardAction.class
new file mode 100644
index 0000000..5016b3f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DiscardSpecificCardAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/DiscardSpecificCardAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DiscardSpecificCardAction.java
index 75e7d8c..5a014fa 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/DiscardSpecificCardAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DiscardSpecificCardAction.java
@@ -30,7 +30,7 @@ extends AbstractGameAction {
 
     @Override
     public void update() {
-        if (this.duration == Settings.ACTION_DUR_FAST) {
+        if (!this.isDone) {
             if (this.group == null) {
                 this.group = AbstractDungeon.player.hand;
             }
@@ -39,8 +39,8 @@ extends AbstractGameAction {
                 GameActionManager.incrementDiscard(false);
                 this.targetCard.triggerOnManualDiscard();
             }
+            this.isDone = true;
         }
-        this.tickDuration();
     }
 }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DrawCardAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DrawCardAction.class
new file mode 100644
index 0000000..e359b98
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DrawCardAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/DrawCardAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DrawCardAction.java
index 47e599f..d3fdd20 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/DrawCardAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/DrawCardAction.java
@@ -66,57 +66,60 @@ extends AbstractGameAction {
             this.endActionWithFollowUp();
             return;
         }
-        if (this.amount <= 0) {
-            this.endActionWithFollowUp();
-            return;
-        }
-        int deckSize = AbstractDungeon.player.drawPile.size();
-        int discardSize = AbstractDungeon.player.discardPile.size();
-        if (SoulGroup.isActive()) {
-            return;
-        }
-        if (deckSize + discardSize == 0) {
-            this.endActionWithFollowUp();
-            return;
-        }
-        if (AbstractDungeon.player.hand.size() == 10) {
-            AbstractDungeon.player.createHandIsFullDialog();
-            this.endActionWithFollowUp();
-            return;
-        }
-        if (!this.shuffleCheck) {
-            if (this.amount + AbstractDungeon.player.hand.size() > 10) {
-                int handSizeAndDraw = 10 - (this.amount + AbstractDungeon.player.hand.size());
-                this.amount += handSizeAndDraw;
-                AbstractDungeon.player.createHandIsFullDialog();
+        while (true) {
+            if (this.amount <= 0) {
+                this.endActionWithFollowUp();
+                return;
             }
-            if (this.amount > deckSize) {
-                int tmp = this.amount - deckSize;
-                this.addToTop(new DrawCardAction(tmp, this.followUpAction, false));
-                this.addToTop(new EmptyDeckShuffleAction());
-                if (deckSize != 0) {
-                    this.addToTop(new DrawCardAction(deckSize, false));
-                }
-                this.amount = 0;
-                this.isDone = true;
+            int deckSize = AbstractDungeon.player.drawPile.size();
+            int discardSize = AbstractDungeon.player.discardPile.size();
+            if (SoulGroup.isActive()) {
+                logger.info("soul active on draw");
                 return;
             }
-            this.shuffleCheck = true;
-        }
-        this.duration -= Gdx.graphics.getDeltaTime();
-        if (this.amount != 0 && this.duration < 0.0f) {
-            this.duration = Settings.FAST_MODE ? Settings.ACTION_DUR_XFAST : Settings.ACTION_DUR_FASTER;
-            --this.amount;
-            if (!AbstractDungeon.player.drawPile.isEmpty()) {
-                drawnCards.add(AbstractDungeon.player.drawPile.getTopCard());
-                AbstractDungeon.player.draw();
-                AbstractDungeon.player.hand.refreshHandLayout();
-            } else {
-                logger.warn("Player attempted to draw from an empty drawpile mid-DrawAction?MASTER DECK: " + AbstractDungeon.player.masterDeck.getCardNames());
+            if (deckSize + discardSize == 0) {
                 this.endActionWithFollowUp();
+                return;
             }
-            if (this.amount == 0) {
+            if (AbstractDungeon.player.hand.size() == 10) {
+                AbstractDungeon.player.createHandIsFullDialog();
                 this.endActionWithFollowUp();
+                return;
+            }
+            if (!this.shuffleCheck) {
+                if (this.amount + AbstractDungeon.player.hand.size() > 10) {
+                    int handSizeAndDraw = 10 - (this.amount + AbstractDungeon.player.hand.size());
+                    this.amount += handSizeAndDraw;
+                    AbstractDungeon.player.createHandIsFullDialog();
+                }
+                if (this.amount > deckSize) {
+                    int tmp = this.amount - deckSize;
+                    this.addToTop(new DrawCardAction(tmp, this.followUpAction, false));
+                    this.addToTop(new EmptyDeckShuffleAction());
+                    if (deckSize != 0) {
+                        this.addToTop(new DrawCardAction(deckSize, false));
+                    }
+                    this.amount = 0;
+                    this.isDone = true;
+                    return;
+                }
+                this.shuffleCheck = true;
+            }
+            if (this.amount != 0) {
+                --this.amount;
+                if (!AbstractDungeon.player.drawPile.isEmpty()) {
+                    drawnCards.add(AbstractDungeon.player.drawPile.getTopCard());
+                    AbstractDungeon.player.draw();
+                    AbstractDungeon.player.hand.refreshHandLayout();
+                } else {
+                    logger.warn("Player attempted to draw from an empty drawpile mid-DrawAction?MASTER DECK: " + AbstractDungeon.player.masterDeck.getCardNames());
+                    this.endActionWithFollowUp();
+                    return;
+                }
+                if (this.amount == 0) {
+                    this.endActionWithFollowUp();
+                    return;
+                }
             }
         }
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/EmptyDeckShuffleAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/EmptyDeckShuffleAction.class
new file mode 100644
index 0000000..f9577c1
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/EmptyDeckShuffleAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/EndTurnAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/EndTurnAction.class
new file mode 100644
index 0000000..4c5032f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/EndTurnAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/EndTurnAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/EndTurnAction.java
index e50d1c5..199e9c8 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/EndTurnAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/EndTurnAction.java
@@ -13,7 +13,7 @@ extends AbstractGameAction {
     public void update() {
         AbstractDungeon.actionManager.endTurn();
         if (!AbstractDungeon.getCurrRoom().skipMonsterTurn) {
-            AbstractDungeon.topLevelEffects.add(new EnemyTurnEffect());
+            //AbstractDungeon.topLevelEffects.add(new EnemyTurnEffect());
         }
         this.isDone = true;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/EscapeAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/EscapeAction.class
new file mode 100644
index 0000000..98bdfed
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/EscapeAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/EscapeAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/EscapeAction.java
index 4df75c9..0b13c53 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/EscapeAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/EscapeAction.java
@@ -20,6 +20,7 @@ extends AbstractGameAction {
         if (this.duration == 0.5f) {
             AbstractMonster m = (AbstractMonster)this.source;
             m.escape();
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ExhaustSpecificCardAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ExhaustSpecificCardAction.class
new file mode 100644
index 0000000..b3909dc
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ExhaustSpecificCardAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/ExhaustSpecificCardAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ExhaustSpecificCardAction.java
index 3c3098e..55b8c6a 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/ExhaustSpecificCardAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ExhaustSpecificCardAction.java
@@ -35,6 +35,7 @@ extends AbstractGameAction {
             CardCrawlGame.dungeon.checkForPactAchievement();
             this.targetCard.exhaustOnUseOnce = false;
             this.targetCard.freeToPlayOnce = false;
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/FastDrawCardAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/FastDrawCardAction.class
new file mode 100644
index 0000000..ef61d50
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/FastDrawCardAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/FastDrawCardAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/FastDrawCardAction.java
index 3664eb5..db367f0 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/FastDrawCardAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/FastDrawCardAction.java
@@ -65,7 +65,7 @@ extends AbstractGameAction {
             }
             this.shuffleCheck = true;
         }
-        this.duration -= Gdx.graphics.getDeltaTime();
+        this.duration = -1f;
         if (this.amount != 0 && this.duration < 0.0f) {
             this.duration = Settings.ACTION_DUR_XFAST;
             --this.amount;
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/GainBlockAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/GainBlockAction.class
new file mode 100644
index 0000000..2a62e3b
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/GainBlockAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/GainBlockAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/GainBlockAction.java
index 8d1c1df..9e99019 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/GainBlockAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/GainBlockAction.java
@@ -46,11 +46,12 @@ extends AbstractGameAction {
     @Override
     public void update() {
         if (!this.target.isDying && !this.target.isDead && this.duration == this.startDuration) {
-            AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, AbstractGameAction.AttackEffect.SHIELD));
+            //AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, AbstractGameAction.AttackEffect.SHIELD));
             this.target.addBlock(this.amount);
             for (AbstractCard c : AbstractDungeon.player.hand.group) {
                 c.applyPowers();
             }
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/GainEnergyAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/GainEnergyAction.class
new file mode 100644
index 0000000..7878a02
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/GainEnergyAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/GainEnergyAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/GainEnergyAction.java
index 38784c7..4c2302f 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/GainEnergyAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/GainEnergyAction.java
@@ -26,6 +26,7 @@ extends AbstractGameAction {
             for (AbstractCard c : AbstractDungeon.player.hand.group) {
                 c.triggerOnGainEnergy(this.energyGain, true);
             }
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/GainEnergyAndEnableControlsAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/GainEnergyAndEnableControlsAction.class
new file mode 100644
index 0000000..11deca8
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/GainEnergyAndEnableControlsAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/GainEnergyAndEnableControlsAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/GainEnergyAndEnableControlsAction.java
index 67469f2..1e7c313 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/GainEnergyAndEnableControlsAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/GainEnergyAndEnableControlsAction.java
@@ -33,7 +33,9 @@ extends AbstractGameAction {
                 p.onEnergyRecharge();
             }
             AbstractDungeon.actionManager.turnHasEnded = false;
+            this.isDone = true;
         }
+        this.isDone = true;
         this.tickDuration();
     }
 }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/HealAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/HealAction.class
new file mode 100644
index 0000000..21be3d0
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/HealAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/HealAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/HealAction.java
index ab47ca4..97e93f9 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/HealAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/HealAction.java
@@ -27,6 +27,7 @@ extends AbstractGameAction {
     public void update() {
         if (this.duration == this.startDuration) {
             this.target.heal(this.amount);
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/LoseHPAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/LoseHPAction.class
new file mode 100644
index 0000000..ae7bb16
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/LoseHPAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/LoseHPAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/LoseHPAction.java
index 660d036..9205ef3 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/LoseHPAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/LoseHPAction.java
@@ -29,16 +29,17 @@ extends AbstractGameAction {
     @Override
     public void update() {
         if (this.duration == 0.33f && this.target.currentHealth > 0) {
-            AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, this.attackEffect));
+            //AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, this.attackEffect));
         }
         this.tickDuration();
+        this.isDone = true;
         if (this.isDone) {
             this.target.damage(new DamageInfo(this.source, this.amount, DamageInfo.DamageType.HP_LOSS));
             if (AbstractDungeon.getCurrRoom().monsters.areMonstersBasicallyDead()) {
                 AbstractDungeon.actionManager.clearPostCombatActions();
             }
             if (!Settings.FAST_MODE) {
-                this.addToTop(new WaitAction(0.1f));
+                //this.addToTop(new WaitAction(0.1f));
             }
         }
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/MillAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/MillAction.class
new file mode 100644
index 0000000..3e37095
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/MillAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/MillAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/MillAction.java
index a79f7e1..208276b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/MillAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/MillAction.java
@@ -26,6 +26,7 @@ extends AbstractGameAction {
                     AbstractDungeon.player.drawPile.moveToDiscardPile(AbstractDungeon.player.drawPile.getTopCard());
                 }
             }
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ObtainPotionAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ObtainPotionAction.class
new file mode 100644
index 0000000..82e837e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ObtainPotionAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/ObtainPotionAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ObtainPotionAction.java
index 7c8f2a1..5c274e6 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/ObtainPotionAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ObtainPotionAction.java
@@ -30,6 +30,7 @@ extends AbstractGameAction {
             } else {
                 AbstractDungeon.player.obtainPotion(this.potion);
             }
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/PlayTopCardAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/PlayTopCardAction.class
new file mode 100644
index 0000000..fcb409c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/PlayTopCardAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/PlayTopCardAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/PlayTopCardAction.java
index 1a20cc9..456866b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/PlayTopCardAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/PlayTopCardAction.java
@@ -55,10 +55,11 @@ extends AbstractGameAction {
                 this.addToTop(new NewQueueCardAction(card, this.target, false, true));
                 this.addToTop(new UnlimboAction(card));
                 if (!Settings.FAST_MODE) {
-                    this.addToTop(new WaitAction(Settings.ACTION_DUR_MED));
+                    //this.addToTop(new WaitAction(Settings.ACTION_DUR_MED));
                 } else {
-                    this.addToTop(new WaitAction(Settings.ACTION_DUR_FASTER));
+                    //this.addToTop(new WaitAction(Settings.ACTION_DUR_FASTER));
                 }
+                this.isDone = true;
             }
             this.isDone = true;
         }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/PummelDamageAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/PummelDamageAction.class
new file mode 100644
index 0000000..9302ac4
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/PummelDamageAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/PummelDamageAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/PummelDamageAction.java
index 8c02b23..08f4420 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/PummelDamageAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/PummelDamageAction.java
@@ -33,9 +33,10 @@ extends AbstractGameAction {
                 this.isDone = true;
                 return;
             }
-            AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX + MathUtils.random(-100.0f * Settings.xScale, 100.0f * Settings.xScale), this.target.hb.cY + MathUtils.random(-100.0f * Settings.scale, 100.0f * Settings.scale), this.attackEffect));
+            //AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX + MathUtils.random(-100.0f * Settings.xScale, 100.0f * Settings.xScale), this.target.hb.cY + MathUtils.random(-100.0f * Settings.scale, 100.0f * Settings.scale), this.attackEffect));
         }
         this.tickDuration();
+        this.isDone = true;
         if (this.isDone && this.target != null && this.target.currentHealth > 0) {
             this.target.damage(this.info);
             if (AbstractDungeon.getCurrRoom().monsters.areMonstersBasicallyDead()) {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ReduceCostForTurnAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ReduceCostForTurnAction.class
new file mode 100644
index 0000000..f05ef67
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ReduceCostForTurnAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/ReduceCostForTurnAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ReduceCostForTurnAction.java
index 49b5fb2..a1b8ca2 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/ReduceCostForTurnAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ReduceCostForTurnAction.java
@@ -23,6 +23,7 @@ extends AbstractGameAction {
             this.targetCard.setCostForTurn(this.targetCard.costForTurn - this.amount);
         }
         this.tickDuration();
+        this.isDone = true;
         if (Settings.FAST_MODE) {
             this.isDone = true;
         }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ReducePowerAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ReducePowerAction.class
new file mode 100644
index 0000000..39ddc40
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ReducePowerAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/ReducePowerAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ReducePowerAction.java
index d8b48fa..31ad8c8 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/ReducePowerAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ReducePowerAction.java
@@ -47,6 +47,7 @@ extends AbstractGameAction {
                     this.addToTop(new RemoveSpecificPowerAction(this.target, this.source, reduceMe));
                 }
             }
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/RelicAboveCreatureAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/RelicAboveCreatureAction.class
new file mode 100644
index 0000000..cff6154
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/RelicAboveCreatureAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/RelicAboveCreatureAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/RelicAboveCreatureAction.java
index 1b4599d..03ea61b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/RelicAboveCreatureAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/RelicAboveCreatureAction.java
@@ -25,8 +25,9 @@ extends AbstractGameAction {
     @Override
     public void update() {
         if (!this.used) {
-            AbstractDungeon.effectList.add(new RelicAboveCreatureEffect(this.source.hb.cX - this.source.animX, this.source.hb.cY + this.source.hb.height / 2.0f - this.source.animY, this.relic));
+            //AbstractDungeon.effectList.add(new RelicAboveCreatureEffect(this.source.hb.cX - this.source.animX, this.source.hb.cY + this.source.hb.height / 2.0f - this.source.animY, this.relic));
             this.used = true;
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/RemoveAllBlockAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/RemoveAllBlockAction.class
new file mode 100644
index 0000000..946d8d9
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/RemoveAllBlockAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/RemoveAllBlockAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/RemoveAllBlockAction.java
index d17fa9d..114eedf 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/RemoveAllBlockAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/RemoveAllBlockAction.java
@@ -20,6 +20,7 @@ extends AbstractGameAction {
     public void update() {
         if (!this.target.isDying && !this.target.isDead && this.duration == 0.25f && this.target.currentBlock > 0) {
             this.target.loseBlock();
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/RemoveSpecificPowerAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/RemoveSpecificPowerAction.class
new file mode 100644
index 0000000..a911a73
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/RemoveSpecificPowerAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/RemoveSpecificPowerAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/RemoveSpecificPowerAction.java
index 4af5eae..13edc92 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/RemoveSpecificPowerAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/RemoveSpecificPowerAction.java
@@ -44,7 +44,7 @@ extends AbstractGameAction {
                 removeMe = this.powerInstance;
             }
             if (removeMe != null) {
-                AbstractDungeon.effectList.add(new PowerExpireTextEffect(this.target.hb.cX - this.target.animX, this.target.hb.cY + this.target.hb.height / 2.0f, removeMe.name, removeMe.region128));
+                //AbstractDungeon.effectList.add(new PowerExpireTextEffect(this.target.hb.cX - this.target.animX, this.target.hb.cY + this.target.hb.height / 2.0f, removeMe.name, removeMe.region128));
                 removeMe.onRemove();
                 this.target.powers.remove(removeMe);
                 AbstractDungeon.onModifyPower();
@@ -54,6 +54,7 @@ extends AbstractGameAction {
             } else {
                 this.duration = 0.0f;
             }
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ShowMoveNameAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ShowMoveNameAction.class
new file mode 100644
index 0000000..4bdae28
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ShowMoveNameAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/ShowMoveNameAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ShowMoveNameAction.java
index cea5a0f..2c467e8 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/ShowMoveNameAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/ShowMoveNameAction.java
@@ -29,7 +29,7 @@ extends AbstractGameAction {
     @Override
     public void update() {
         if (this.source != null && !this.source.isDying) {
-            AbstractDungeon.effectList.add(new MoveNameEffect(this.source.hb.cX - this.source.animX, this.source.hb.cY + this.source.hb.height / 2.0f, this.msg));
+            //AbstractDungeon.effectList.add(new MoveNameEffect(this.source.hb.cX - this.source.animX, this.source.hb.cY + this.source.hb.height / 2.0f, this.msg));
         }
         this.isDone = true;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/SpawnMonsterAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/SpawnMonsterAction.class
new file mode 100644
index 0000000..30a7d0d
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/SpawnMonsterAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/SpawnMonsterAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/SpawnMonsterAction.java
index 153139f..77459e1 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/SpawnMonsterAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/SpawnMonsterAction.java
@@ -65,6 +65,7 @@ extends AbstractGameAction {
                 this.addToTop(new ApplyPowerAction(this.m, this.m, new MinionPower(this.m)));
             }
             this.used = true;
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/TransformCardInHandAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/TransformCardInHandAction.class
new file mode 100644
index 0000000..aa604e9
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/TransformCardInHandAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/TransformCardInHandAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/TransformCardInHandAction.java
index 97575d6..67143b6 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/common/TransformCardInHandAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/common/TransformCardInHandAction.java
@@ -36,6 +36,7 @@ extends AbstractGameAction {
             this.replacement.superFlash(Color.WHITE.cpy());
             AbstractDungeon.player.hand.group.set(this.handIndex, this.replacement);
             AbstractDungeon.player.hand.glowCheck();
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/ApplyStasisAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/ApplyStasisAction.class
new file mode 100644
index 0000000..d72a263
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/ApplyStasisAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/ApplyStasisAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/ApplyStasisAction.java
index b9c4bf3..dd7d04f 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/ApplyStasisAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/ApplyStasisAction.java
@@ -58,7 +58,7 @@ extends AbstractGameAction {
                 AbstractDungeon.player.drawPile.removeCard(this.card);
             }
             AbstractDungeon.player.limbo.addToBottom(this.card);
-            this.card.setAngle(0.0f);
+            /*this.card.setAngle(0.0f);
             this.card.targetDrawScale = 0.75f;
             this.card.target_x = (float)Settings.WIDTH / 2.0f;
             this.card.target_y = (float)Settings.HEIGHT / 2.0f;
@@ -66,9 +66,10 @@ extends AbstractGameAction {
             this.card.unfadeOut();
             this.card.unhover();
             this.card.untip();
-            this.card.stopGlowing();
+            this.card.stopGlowing();*/
         }
         this.tickDuration();
+        this.isDone = true;
         if (this.isDone && this.card != null) {
             this.addToTop(new ApplyPowerAction(this.owner, this.owner, new StasisPower(this.owner, this.card)));
             this.addToTop(new ShowCardAction(this.card));
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/DiscardPileToTopOfDeckAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/DiscardPileToTopOfDeckAction.class
new file mode 100644
index 0000000..52a5bc2
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/DiscardPileToTopOfDeckAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/DiscardPileToTopOfDeckAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/DiscardPileToTopOfDeckAction.java
index 5efdcee..d6493c9 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/DiscardPileToTopOfDeckAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/DiscardPileToTopOfDeckAction.java
@@ -30,7 +30,8 @@ extends AbstractGameAction {
             this.isDone = true;
             return;
         }
-        if (this.duration == Settings.ACTION_DUR_FASTER) {
+        if (this.step == 0) {
+            this.step = 1;
             if (this.p.discardPile.isEmpty()) {
                 this.isDone = true;
                 return;
@@ -46,15 +47,17 @@ extends AbstractGameAction {
                 return;
             }
         }
-        if (!AbstractDungeon.gridSelectScreen.selectedCards.isEmpty()) {
-            for (AbstractCard c : AbstractDungeon.gridSelectScreen.selectedCards) {
-                this.p.discardPile.removeCard(c);
-                this.p.hand.moveToDeck(c, false);
+        if (this.step == 1) {
+            if (!AbstractDungeon.gridSelectScreen.selectedCards.isEmpty()) {
+                for (AbstractCard c : AbstractDungeon.gridSelectScreen.selectedCards) {
+                    this.p.discardPile.removeCard(c);
+                    this.p.hand.moveToDeck(c, false);
+                }
+                AbstractDungeon.gridSelectScreen.selectedCards.clear();
+                AbstractDungeon.player.hand.refreshHandLayout();
             }
-            AbstractDungeon.gridSelectScreen.selectedCards.clear();
-            AbstractDungeon.player.hand.refreshHandLayout();
+            this.isDone = true;
         }
-        this.tickDuration();
     }
 }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/DoubleYourBlockAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/DoubleYourBlockAction.class
new file mode 100644
index 0000000..1b7191a
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/DoubleYourBlockAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/DoubleYourBlockAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/DoubleYourBlockAction.java
index 5e8c528..7b29205 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/DoubleYourBlockAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/DoubleYourBlockAction.java
@@ -19,8 +19,9 @@ extends AbstractGameAction {
     @Override
     public void update() {
         if (this.duration == 0.5f && this.target != null && this.target.currentBlock > 0) {
-            AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, AbstractGameAction.AttackEffect.SHIELD));
+            //AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, AbstractGameAction.AttackEffect.SHIELD));
             this.target.addBlock(this.target.currentBlock);
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/FullHealthAdditionalDamageAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/FullHealthAdditionalDamageAction.class
new file mode 100644
index 0000000..6d86582
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/FullHealthAdditionalDamageAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/FullHealthAdditionalDamageAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/FullHealthAdditionalDamageAction.java
index a4b63dd..3d12d28 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/FullHealthAdditionalDamageAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/FullHealthAdditionalDamageAction.java
@@ -40,6 +40,7 @@ extends AbstractGameAction {
             if (AbstractDungeon.getCurrRoom().monsters.areMonstersBasicallyDead()) {
                 AbstractDungeon.actionManager.clearPostCombatActions();
             }
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/GainBlockRandomMonsterAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/GainBlockRandomMonsterAction.class
new file mode 100644
index 0000000..13adde5
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/GainBlockRandomMonsterAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/GainBlockRandomMonsterAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/GainBlockRandomMonsterAction.java
index 3b6b3b5..7b4c02f 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/GainBlockRandomMonsterAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/GainBlockRandomMonsterAction.java
@@ -29,9 +29,10 @@ extends AbstractGameAction {
             }
             this.target = !validMonsters.isEmpty() ? (AbstractCreature)validMonsters.get(AbstractDungeon.aiRng.random(validMonsters.size() - 1)) : this.source;
             if (this.target != null) {
-                AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, AbstractGameAction.AttackEffect.SHIELD));
+                //AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, AbstractGameAction.AttackEffect.SHIELD));
                 this.target.addBlock(this.amount);
             }
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/GamblingChipAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/GamblingChipAction.class
new file mode 100644
index 0000000..40329bd
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/GamblingChipAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/GamblingChipAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/GamblingChipAction.java
index 34b7e74..bc679b4 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/GamblingChipAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/GamblingChipAction.java
@@ -55,6 +55,7 @@ extends AbstractGameAction {
                 }
             }
             AbstractDungeon.handCardSelectScreen.wereCardsRetrieved = true;
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/GreedAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/GreedAction.class
new file mode 100644
index 0000000..7967618
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/GreedAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/GreedAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/GreedAction.java
index b6bd868..7f5549a 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/GreedAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/GreedAction.java
@@ -28,17 +28,18 @@ extends AbstractGameAction {
     @Override
     public void update() {
         if (this.duration == 0.1f && this.target != null) {
-            AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, AbstractGameAction.AttackEffect.BLUNT_HEAVY));
+            //AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, AbstractGameAction.AttackEffect.BLUNT_HEAVY));
             this.target.damage(this.info);
             if (!(!((AbstractMonster)this.target).isDying && this.target.currentHealth > 0 || this.target.halfDead || this.target.hasPower("Minion"))) {
                 AbstractDungeon.player.gainGold(this.increaseGold);
                 for (int i = 0; i < this.increaseGold; ++i) {
-                    AbstractDungeon.effectList.add(new GainPennyEffect(this.source, this.target.hb.cX, this.target.hb.cY, this.source.hb.cX, this.source.hb.cY, true));
+                    //AbstractDungeon.effectList.add(new GainPennyEffect(this.source, this.target.hb.cX, this.target.hb.cY, this.source.hb.cX, this.source.hb.cY, true));
                 }
             }
             if (AbstractDungeon.getCurrRoom().monsters.areMonstersBasicallyDead()) {
                 AbstractDungeon.actionManager.clearPostCombatActions();
             }
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/IncreaseMaxHpAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/IncreaseMaxHpAction.class
new file mode 100644
index 0000000..cc9b0c6
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/IncreaseMaxHpAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/IncreaseMaxHpAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/IncreaseMaxHpAction.java
index d1eccaa..59407e0 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/IncreaseMaxHpAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/IncreaseMaxHpAction.java
@@ -25,6 +25,7 @@ extends AbstractGameAction {
     public void update() {
         if (this.duration == this.startDuration) {
             this.target.increaseMaxHp(MathUtils.round((float)this.target.maxHealth * this.increasePercent), this.showEffect);
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/LimitBreakAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/LimitBreakAction.class
new file mode 100644
index 0000000..4760448
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/LimitBreakAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/LimitBreakAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/LimitBreakAction.java
index 911654b..16a12be 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/LimitBreakAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/LimitBreakAction.java
@@ -25,6 +25,7 @@ extends AbstractGameAction {
         if (this.duration == Settings.ACTION_DUR_XFAST && this.p.hasPower("Strength")) {
             int strAmt = this.p.getPower((String)"Strength").amount;
             this.addToTop(new ApplyPowerAction(this.p, this.p, new StrengthPower(this.p, strAmt), strAmt));
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/LoseEnergyAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/LoseEnergyAction.class
new file mode 100644
index 0000000..0ca061d
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/LoseEnergyAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/LoseEnergyAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/LoseEnergyAction.java
index 59d59d1..1ae0b93 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/LoseEnergyAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/LoseEnergyAction.java
@@ -21,6 +21,7 @@ extends AbstractGameAction {
     public void update() {
         if (this.duration == Settings.ACTION_DUR_FAST) {
             AbstractDungeon.player.loseEnergy(this.energyLoss);
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/MadnessAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/MadnessAction.class
new file mode 100644
index 0000000..4f0fb09
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/MadnessAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/MadnessAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/MadnessAction.java
index 51ec952..52bb7c6 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/MadnessAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/MadnessAction.java
@@ -36,6 +36,7 @@ extends AbstractGameAction {
             if (betterPossible || possible) {
                 this.findAndModifyCard(betterPossible);
             }
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/MindBlastAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/MindBlastAction.class
new file mode 100644
index 0000000..31a6aee
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/MindBlastAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/MindBlastAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/MindBlastAction.java
index ad2a491..89698d6 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/MindBlastAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/MindBlastAction.java
@@ -24,6 +24,7 @@ extends AbstractGameAction {
             DamageInfo info = new DamageInfo(this.source, AbstractDungeon.player.drawPile.size());
             info.applyPowers(this.source, this.target);
             this.addToTop(new DamageAction(this.target, info, AbstractGameAction.AttackEffect.NONE));
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/PatientMissileAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/PatientMissileAction.class
new file mode 100644
index 0000000..172c8a7
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/PatientMissileAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/PatientMissileAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/PatientMissileAction.java
index 6c85b9c..756f0d2 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/PatientMissileAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/PatientMissileAction.java
@@ -24,6 +24,7 @@ extends AbstractGameAction {
             DamageInfo info = new DamageInfo(this.source, AbstractDungeon.player.discardPile.size());
             info.applyPowers(this.source, this.target);
             this.addToTop(new DamageAction(this.target, info, AbstractGameAction.AttackEffect.BLUNT_HEAVY));
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/PoisonLoseHpAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/PoisonLoseHpAction.class
new file mode 100644
index 0000000..6098f6a
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/PoisonLoseHpAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/PoisonLoseHpAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/PoisonLoseHpAction.java
index 1acbfa2..fee429d 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/PoisonLoseHpAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/PoisonLoseHpAction.java
@@ -33,9 +33,10 @@ extends AbstractGameAction {
             return;
         }
         if (this.duration == 0.33f && this.target.currentHealth > 0) {
-            AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, this.attackEffect));
+            //AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, this.attackEffect));
         }
         this.tickDuration();
+        this.isDone = true;
         if (this.isDone) {
             AbstractPower p;
             if (this.target.currentHealth > 0) {
@@ -57,7 +58,7 @@ extends AbstractGameAction {
             if (AbstractDungeon.getCurrRoom().monsters.areMonstersBasicallyDead()) {
                 AbstractDungeon.actionManager.clearPostCombatActions();
             }
-            this.addToTop(new WaitAction(0.1f));
+            //this.addToTop(new WaitAction(0.1f));
         }
     }
 }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RegenAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RegenAction.class
new file mode 100644
index 0000000..dbbc8b6
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RegenAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/RegenAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RegenAction.java
index ba25f4c..6b8a686 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/RegenAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RegenAction.java
@@ -41,6 +41,7 @@ extends AbstractGameAction {
                     p.updateDescription();
                 }
             }
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RetainCardsAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RetainCardsAction.class
new file mode 100644
index 0000000..daa42d8
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RetainCardsAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/RetainCardsAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RetainCardsAction.java
index 014ac26..b9f381d 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/RetainCardsAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RetainCardsAction.java
@@ -23,20 +23,24 @@ extends AbstractGameAction {
 
     @Override
     public void update() {
-        if (this.duration == 0.5f) {
+        if (this.step == 0) {
+            this.step = 1;
             AbstractDungeon.handCardSelectScreen.open(TEXT[0], this.amount, false, true, false, false, true);
-            this.addToBot(new WaitAction(0.25f));
+            //this.addToBot(new WaitAction(0.25f));
             this.tickDuration();
             return;
         }
-        if (!AbstractDungeon.handCardSelectScreen.wereCardsRetrieved) {
-            for (AbstractCard c : AbstractDungeon.handCardSelectScreen.selectedCards.group) {
-                if (!c.isEthereal) {
-                    c.retain = true;
+        if (this.step == 1) {
+            if (!AbstractDungeon.handCardSelectScreen.wereCardsRetrieved) {
+                for (AbstractCard c : AbstractDungeon.handCardSelectScreen.selectedCards.group) {
+                    if (!c.isEthereal) {
+                        c.retain = true;
+                    }
+                    AbstractDungeon.player.hand.addToTop(c);
                 }
-                AbstractDungeon.player.hand.addToTop(c);
+                AbstractDungeon.handCardSelectScreen.wereCardsRetrieved = true;
             }
-            AbstractDungeon.handCardSelectScreen.wereCardsRetrieved = true;
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RipAndTearAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RipAndTearAction.class
new file mode 100644
index 0000000..36ea9b2
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RipAndTearAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/RipAndTearAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RipAndTearAction.java
index bc1c8fe..e789b9f 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/RipAndTearAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RipAndTearAction.java
@@ -39,10 +39,10 @@ extends AbstractGameAction {
             return;
         }
         if (this.duration == this.startDuration) {
-            AbstractDungeon.effectsQueue.add(new RipAndTearEffect(this.target.hb.cX, this.target.hb.cY, Color.RED, Color.GOLD));
+            //AbstractDungeon.effectsQueue.add(new RipAndTearEffect(this.target.hb.cX, this.target.hb.cY, Color.RED, Color.GOLD));
         }
-        this.duration -= Gdx.graphics.getDeltaTime();
-        if (this.duration < 0.0f) {
+        //this.duration -= Gdx.graphics.getDeltaTime();
+        //if (this.duration < 0.0f) {
             if (this.target.currentHealth > 0) {
                 this.info.applyPowers(this.info.owner, this.target);
                 this.target.damage(this.info);
@@ -51,13 +51,13 @@ extends AbstractGameAction {
                     this.addToTop(new RipAndTearAction(AbstractDungeon.getMonsters().getRandomMonster(null, true, AbstractDungeon.cardRandomRng), this.info, this.numTimes));
                 }
                 if (Settings.FAST_MODE) {
-                    this.addToTop(new WaitAction(0.1f));
+                    //this.addToTop(new WaitAction(0.1f));
                 } else {
-                    this.addToTop(new WaitAction(0.2f));
+                    //this.addToTop(new WaitAction(0.2f));
                 }
             }
             this.isDone = true;
-        }
+        //}
     }
 }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RitualDaggerAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RitualDaggerAction.class
new file mode 100644
index 0000000..01fb9f4
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RitualDaggerAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/RitualDaggerAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RitualDaggerAction.java
index de2b033..bee09d4 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/RitualDaggerAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/RitualDaggerAction.java
@@ -30,7 +30,7 @@ extends AbstractGameAction {
     @Override
     public void update() {
         if (this.duration == 0.1f && this.target != null) {
-            AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, AbstractGameAction.AttackEffect.SLASH_HORIZONTAL));
+            //AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, AbstractGameAction.AttackEffect.SLASH_HORIZONTAL));
             this.target.damage(this.info);
             if (!(!this.target.isDying && this.target.currentHealth > 0 || this.target.halfDead || this.target.hasPower("Minion"))) {
                 for (AbstractCard c : AbstractDungeon.player.masterDeck.group) {
@@ -49,6 +49,7 @@ extends AbstractGameAction {
             if (AbstractDungeon.getCurrRoom().monsters.areMonstersBasicallyDead()) {
                 AbstractDungeon.actionManager.clearPostCombatActions();
             }
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/SpotWeaknessAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/SpotWeaknessAction.class
new file mode 100644
index 0000000..de3bba0
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/SpotWeaknessAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/SpotWeaknessAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/SpotWeaknessAction.java
index 2a8a686..2a22c3a 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/SpotWeaknessAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/SpotWeaknessAction.java
@@ -31,7 +31,7 @@ extends AbstractGameAction {
         if (this.targetMonster != null && this.targetMonster.getIntentBaseDmg() >= 0) {
             this.addToBot(new ApplyPowerAction(AbstractDungeon.player, AbstractDungeon.player, new StrengthPower(AbstractDungeon.player, this.damageIncrease), this.damageIncrease));
         } else {
-            AbstractDungeon.effectList.add(new ThoughtBubble(AbstractDungeon.player.dialogX, AbstractDungeon.player.dialogY, 3.0f, TEXT[0], true));
+            //AbstractDungeon.effectList.add(new ThoughtBubble(AbstractDungeon.player.dialogX, AbstractDungeon.player.dialogY, 3.0f, TEXT[0], true));
         }
         this.isDone = true;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/StepThroughTimeAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/StepThroughTimeAction.class
new file mode 100644
index 0000000..010d23e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/StepThroughTimeAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/StepThroughTimeAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/StepThroughTimeAction.java
index 272c4b6..0ebb99a 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/StepThroughTimeAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/StepThroughTimeAction.java
@@ -26,6 +26,7 @@ extends AbstractGameAction {
             } else if (diff < 0) {
                 this.addToTop(new LoseHPAction(this.source, this.source, diff));
             }
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/SwordBoomerangAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/SwordBoomerangAction.class
new file mode 100644
index 0000000..860b5a4
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/SwordBoomerangAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/SwordBoomerangAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/SwordBoomerangAction.java
index f5ae2af..09a4033 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/SwordBoomerangAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/SwordBoomerangAction.java
@@ -49,7 +49,7 @@ extends AbstractGameAction {
             return;
         }
         if (this.target.currentHealth > 0) {
-            AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, this.attackEffect));
+            //AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, this.attackEffect));
             this.info.applyPowers(this.info.owner, this.target);
             this.target.damage(this.info);
             if (this.numTimes > 1 && !AbstractDungeon.getMonsters().areMonstersBasicallyDead()) {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/TripleYourBlockAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/TripleYourBlockAction.class
new file mode 100644
index 0000000..7083909
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/TripleYourBlockAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/TripleYourBlockAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/TripleYourBlockAction.java
index 69ff540..8ecbff2 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/TripleYourBlockAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/TripleYourBlockAction.java
@@ -19,8 +19,9 @@ extends AbstractGameAction {
     @Override
     public void update() {
         if (this.duration == 0.5f && this.target != null && this.target.currentBlock > 0) {
-            AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, AbstractGameAction.AttackEffect.SHIELD));
+            //AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, AbstractGameAction.AttackEffect.SHIELD));
             this.target.addBlock(this.target.currentBlock * 2);
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/TumbleAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/TumbleAction.class
new file mode 100644
index 0000000..e577648
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/TumbleAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/TumbleAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/TumbleAction.java
index c22eae6..0c73f58 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/TumbleAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/TumbleAction.java
@@ -27,6 +27,7 @@ extends AbstractGameAction {
                 this.addToTop(new GainBlockAction(this.source, this.source, this.amount));
                 this.addToTop(new DiscardSpecificCardAction(c));
             }
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/UndoAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/UndoAction.class
new file mode 100644
index 0000000..2c6b777
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/UndoAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/UndoAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/UndoAction.java
index 0a5e630..8c48536 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/UndoAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/UndoAction.java
@@ -32,6 +32,7 @@ extends AbstractGameAction {
             } else if (this.p.currentHealth > GameActionManager.playerHpLastTurn) {
                 this.addToTop(new DamageAction((AbstractCreature)this.p, new DamageInfo(this.p, this.p.currentHealth - GameActionManager.playerHpLastTurn, DamageInfo.DamageType.HP_LOSS), AbstractGameAction.AttackEffect.FIRE));
             }
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/VampireDamageAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/VampireDamageAction.class
new file mode 100644
index 0000000..fa5e164
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/VampireDamageAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/VampireDamageAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/VampireDamageAction.java
index 361d4ea..ae9bc1b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/VampireDamageAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/VampireDamageAction.java
@@ -25,14 +25,15 @@ extends AbstractGameAction {
     @Override
     public void update() {
         if (this.duration == 0.5f) {
-            AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, this.attackEffect));
+            //AbstractDungeon.effectList.add(new FlashAtkImgEffect(this.target.hb.cX, this.target.hb.cY, this.attackEffect));
         }
         this.tickDuration();
+        this.isDone = true;
         if (this.isDone) {
             this.target.damage(this.info);
             if (this.target.lastDamageTaken > 0) {
                 this.addToTop(new HealAction(this.source, this.source, this.target.lastDamageTaken));
-                this.addToTop(new WaitAction(0.1f));
+                //this.addToTop(new WaitAction(0.1f));
             }
             if (AbstractDungeon.getCurrRoom().monsters.areMonstersBasicallyDead()) {
                 AbstractDungeon.actionManager.clearPostCombatActions();
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/VampireDamageAllEnemiesAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/VampireDamageAllEnemiesAction.class
new file mode 100644
index 0000000..8683247
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/VampireDamageAllEnemiesAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/VampireDamageAllEnemiesAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/VampireDamageAllEnemiesAction.java
index 3f04f72..2356637 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/VampireDamageAllEnemiesAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/VampireDamageAllEnemiesAction.java
@@ -37,14 +37,15 @@ extends AbstractGameAction {
             for (int i = 0; i < temp; ++i) {
                 if (AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).isDying || AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).currentHealth <= 0 || AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).isEscaping) continue;
                 if (playedMusic) {
-                    AbstractDungeon.effectList.add(new FlashAtkImgEffect(AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cX, AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cY, this.attackEffect, true));
+                    //AbstractDungeon.effectList.add(new FlashAtkImgEffect(AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cX, AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cY, this.attackEffect, true));
                     continue;
                 }
                 playedMusic = true;
-                AbstractDungeon.effectList.add(new FlashAtkImgEffect(AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cX, AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cY, this.attackEffect));
+                //AbstractDungeon.effectList.add(new FlashAtkImgEffect(AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cX, AbstractDungeon.getCurrRoom().monsters.monsters.get((int)i).hb.cY, this.attackEffect));
             }
         }
         this.tickDuration();
+        this.isDone = true;
         if (this.isDone) {
             for (AbstractPower p : AbstractDungeon.player.powers) {
                 p.onDamageAllEnemies(this.damage);
@@ -57,19 +58,19 @@ extends AbstractGameAction {
                 if (target.lastDamageTaken <= 0) continue;
                 healAmount += target.lastDamageTaken;
                 for (int j = 0; j < target.lastDamageTaken / 2 && j < 10; ++j) {
-                    this.addToBot(new VFXAction(new FlyingOrbEffect(target.hb.cX, target.hb.cY)));
+                    //this.addToBot(new VFXAction(new FlyingOrbEffect(target.hb.cX, target.hb.cY)));
                 }
             }
             if (healAmount > 0) {
                 if (!Settings.FAST_MODE) {
-                    this.addToBot(new WaitAction(0.3f));
+                    //this.addToBot(new WaitAction(0.3f));
                 }
                 this.addToBot(new HealAction(this.source, this.source, healAmount));
             }
             if (AbstractDungeon.getCurrRoom().monsters.areMonstersBasicallyDead()) {
                 AbstractDungeon.actionManager.clearPostCombatActions();
             }
-            this.addToTop(new WaitAction(0.1f));
+            //this.addToTop(new WaitAction(0.1f));
         }
     }
 }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/WhirlwindAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/WhirlwindAction.class
new file mode 100644
index 0000000..b065e51
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/WhirlwindAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/WhirlwindAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/WhirlwindAction.java
index 5b566e2..b7b9e92 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/unique/WhirlwindAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/unique/WhirlwindAction.java
@@ -45,11 +45,11 @@ extends AbstractGameAction {
         if (effect > 0) {
             for (int i = 0; i < effect; ++i) {
                 if (i == 0) {
-                    this.addToBot(new SFXAction("ATTACK_WHIRLWIND"));
-                    this.addToBot(new VFXAction(new WhirlwindEffect(), 0.0f));
+                    //this.addToBot(new SFXAction("ATTACK_WHIRLWIND"));
+                    //this.addToBot(new VFXAction(new WhirlwindEffect(), 0.0f));
                 }
-                this.addToBot(new SFXAction("ATTACK_HEAVY"));
-                this.addToBot(new VFXAction(this.p, new CleaveEffect(), 0.0f));
+                //this.addToBot(new SFXAction("ATTACK_HEAVY"));
+                //this.addToBot(new VFXAction(this.p, new CleaveEffect(), 0.0f));
                 this.addToBot(new DamageAllEnemiesAction(this.p, this.multiDamage, this.damageType, AbstractGameAction.AttackEffect.NONE, true));
             }
             if (!this.freeToPlayOnce) {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/DrawPileToHandAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/DrawPileToHandAction.class
new file mode 100644
index 0000000..f2a20d8
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/DrawPileToHandAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/DrawPileToHandAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/DrawPileToHandAction.java
index addfbe8..71425f4 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/DrawPileToHandAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/DrawPileToHandAction.java
@@ -60,7 +60,7 @@ extends AbstractGameAction {
                 AbstractDungeon.player.hand.refreshHandLayout();
                 AbstractDungeon.player.hand.applyPowers();
             }
-            this.isDone = true;
+            //this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/LoseBlockAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/LoseBlockAction.class
new file mode 100644
index 0000000..8861839
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/LoseBlockAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/LoseBlockAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/LoseBlockAction.java
index e37bdac..650a2f1 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/LoseBlockAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/LoseBlockAction.java
@@ -21,6 +21,7 @@ extends AbstractGameAction {
                 return;
             }
             this.target.loseBlock(this.amount);
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/ShakeScreenAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/ShakeScreenAction.class
new file mode 100644
index 0000000..64cb7d3
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/ShakeScreenAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/ShakeScreenAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/ShakeScreenAction.java
index 6714289..321f3ad 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/ShakeScreenAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/ShakeScreenAction.java
@@ -25,6 +25,7 @@ extends AbstractGameAction {
     public void update() {
         if (this.duration == this.startDur) {
             CardCrawlGame.screenShake.shake(this.intensity, this.shakeDur, false);
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/ShowCardAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/ShowCardAction.class
new file mode 100644
index 0000000..eb4abd9
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/ShowCardAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/ShowCardAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/ShowCardAction.java
index e3965ea..f3c9f77 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/ShowCardAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/ShowCardAction.java
@@ -26,6 +26,7 @@ extends AbstractGameAction {
                 AbstractDungeon.player.limbo.removeCard(this.card);
             }
             AbstractDungeon.player.cardInUse = null;
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/ShowCardAndPoofAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/ShowCardAndPoofAction.class
new file mode 100644
index 0000000..b80bc36
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/ShowCardAndPoofAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/ShowCardAndPoofAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/ShowCardAndPoofAction.java
index c7f3c03..1d599cb 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/ShowCardAndPoofAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/ShowCardAndPoofAction.java
@@ -28,6 +28,7 @@ extends AbstractGameAction {
                 AbstractDungeon.player.limbo.removeCard(this.card);
             }
             AbstractDungeon.player.cardInUse = null;
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/TextAboveCreatureAction$TextType.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/TextAboveCreatureAction$TextType.class
new file mode 100644
index 0000000..18caa2b
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/TextAboveCreatureAction$TextType.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/TextAboveCreatureAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/TextAboveCreatureAction.class
new file mode 100644
index 0000000..7e873eb
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/TextAboveCreatureAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/TextAboveCreatureAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/TextAboveCreatureAction.java
index 4a7810c..8324b12 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/TextAboveCreatureAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/TextAboveCreatureAction.java
@@ -41,8 +41,9 @@ extends AbstractGameAction {
     @Override
     public void update() {
         if (!this.used) {
-            AbstractDungeon.effectList.add(new TextAboveCreatureEffect(this.source.hb.cX - this.source.animX, this.source.hb.cY + this.target.hb.height / 2.0f, this.msg, Color.WHITE.cpy()));
+            //AbstractDungeon.effectList.add(new TextAboveCreatureEffect(this.source.hb.cX - this.source.animX, this.source.hb.cY + this.target.hb.height / 2.0f, this.msg, Color.WHITE.cpy()));
             this.used = true;
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/TextCenteredAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/TextCenteredAction.class
new file mode 100644
index 0000000..56b7450
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/TextCenteredAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/TextCenteredAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/TextCenteredAction.java
index 4a6df88..95802ba 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/TextCenteredAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/TextCenteredAction.java
@@ -24,8 +24,9 @@ extends AbstractGameAction {
     @Override
     public void update() {
         if (!this.used) {
-            AbstractDungeon.effectList.add(new TextCenteredEffect(this.msg));
+            //AbstractDungeon.effectList.add(new TextCenteredEffect(this.msg));
             this.used = true;
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/UpdateCardDescriptionAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/UpdateCardDescriptionAction.class
new file mode 100644
index 0000000..b88c0e6
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/UpdateCardDescriptionAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/UpdateCardDescriptionAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/UpdateCardDescriptionAction.java
index 6e6f4aa..11b5ad1 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/UpdateCardDescriptionAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/UpdateCardDescriptionAction.java
@@ -20,6 +20,7 @@ extends AbstractGameAction {
     public void update() {
         if (this.duration == 0.5f) {
             this.targetCard.initializeDescription();
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/UseCardAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/UseCardAction.class
new file mode 100644
index 0000000..3f2b550
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/UseCardAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/UseCardAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/UseCardAction.java
index 50f2340..e22b537 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/UseCardAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/UseCardAction.java
@@ -91,9 +91,9 @@ extends AbstractGameAction {
             if (this.targetCard.type == AbstractCard.CardType.POWER) {
                 this.addToTop(new ShowCardAction(this.targetCard));
                 if (Settings.FAST_MODE) {
-                    this.addToTop(new WaitAction(0.1f));
+                    //this.addToTop(new WaitAction(0.1f));
                 } else {
-                    this.addToTop(new WaitAction(0.7f));
+                    //this.addToTop(new WaitAction(0.7f));
                 }
                 AbstractDungeon.player.hand.empower(this.targetCard);
                 this.isDone = true;
@@ -128,6 +128,7 @@ extends AbstractGameAction {
             this.targetCard.exhaustOnUseOnce = false;
             this.targetCard.dontTriggerOnUseCard = false;
             this.addToBot(new HandCheckAction());
+            this.isDone = true;
         }
         this.tickDuration();
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/WaitAction.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/WaitAction.class
new file mode 100644
index 0000000..33df196
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/WaitAction.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/WaitAction.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/WaitAction.java
index 5f402ee..27f0d0d 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/actions/utility/WaitAction.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/actions/utility/WaitAction.java
@@ -16,7 +16,7 @@ extends AbstractGameAction {
 
     @Override
     public void update() {
-        this.tickDuration();
+        this.isDone = true;
     }
 }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/audio/Sfx.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/audio/Sfx.class
new file mode 100644
index 0000000..c306a4d
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/audio/Sfx.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/audio/Sfx.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/audio/Sfx.java
index 85bf736..4981f46 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/audio/Sfx.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/audio/Sfx.java
@@ -75,7 +75,6 @@ public class Sfx {
                 if (Gdx.audio != null) {
                     return Gdx.audio.newSound(file);
                 }
-                logger.info("WARNING: Gdx.audio is null");
                 return null;
             }
             logger.info("File: " + this.url + " was not found.");
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/cards/Soul$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/cards/Soul$1.class
new file mode 100644
index 0000000..bf7ac8b
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/cards/Soul$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/cards/Soul$2.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/cards/Soul$2.class
new file mode 100644
index 0000000..f8fac4f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/cards/Soul$2.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/cards/Soul.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/cards/Soul.class
new file mode 100644
index 0000000..9b78b75
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/cards/Soul.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/cards/Soul.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/cards/Soul.java
index 8f16b54..81ab3da 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/cards/Soul.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/cards/Soul.java
@@ -182,18 +182,20 @@ public class Soul {
             this.card.current_y = this.pos.y;
             this.card.target_x = this.card.current_x;
             this.card.target_y = this.card.current_y;
-            if (this.spawnStutterTimer > 0.0f) {
-                this.spawnStutterTimer -= Gdx.graphics.getDeltaTime();
-                return;
-            }
+            //if (this.spawnStutterTimer > 0.0f) {
+            //    this.spawnStutterTimer -= Gdx.graphics.getDeltaTime();
+            //    return;
+            //}
             this.updateMovement();
             this.updateBackUpTimer();
         } else {
             this.isDone = true;
         }
+
+        this.isDone = true;
         if (this.isDone) {
             if (this.group == null) {
-                AbstractDungeon.effectList.add(new EmpowerEffect(AbstractDungeon.player.hb.cX, AbstractDungeon.player.hb.cY));
+                //AbstractDungeon.effectList.add(new EmpowerEffect(AbstractDungeon.player.hb.cX, AbstractDungeon.player.hb.cY));
                 this.isReadyForReuse = true;
                 return;
             }
@@ -311,7 +313,7 @@ public class Soul {
                     Vector2 derp = this.crs.valueAt(this.points[i], (float)i / 19.0f);
                     CardTrailEffect effect = trailEffectPool.obtain();
                     effect.init(derp.x, derp.y);
-                    AbstractDungeon.topLevelEffects.add(effect);
+                    //AbstractDungeon.topLevelEffects.add(effect);
                 }
             }
         }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/characters/AbstractPlayer$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/characters/AbstractPlayer$1.class
new file mode 100644
index 0000000..dd9b01c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/characters/AbstractPlayer$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/characters/AbstractPlayer$PlayerClass.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/characters/AbstractPlayer$PlayerClass.class
new file mode 100644
index 0000000..24942f4
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/characters/AbstractPlayer$PlayerClass.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/characters/AbstractPlayer$RHoverType.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/characters/AbstractPlayer$RHoverType.class
new file mode 100644
index 0000000..c566a5a
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/characters/AbstractPlayer$RHoverType.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/characters/AbstractPlayer.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/characters/AbstractPlayer.class
new file mode 100644
index 0000000..3adfc58
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/characters/AbstractPlayer.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/characters/AbstractPlayer.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/characters/AbstractPlayer.java
index df0123d..176ccf2 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/characters/AbstractPlayer.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/characters/AbstractPlayer.java
@@ -150,7 +150,7 @@ extends AbstractCreature {
     private boolean isUsingClickDragControl = false;
     private float clickDragTimer = 0.0f;
     public boolean inSingleTargetMode = false;
-    private AbstractMonster hoveredMonster = null;
+    public AbstractMonster hoveredMonster = null;
     public float hoverEnemyWaitTimer = 0.0f;
     private static final float HOVER_ENEMY_WAIT_TIME = 1.0f;
     public boolean isInKeyboardMode = false;
@@ -429,6 +429,7 @@ extends AbstractCreature {
      * WARNING - void declaration
      */
     private void updateControllerInput() {
+        /*
         ArrayList<Hitbox> hbs;
         if (!Settings.isControllerMode || AbstractDungeon.topPanel.selectPotionMode || !AbstractDungeon.topPanel.potionUi.isHidden) {
             return;
@@ -574,6 +575,7 @@ extends AbstractCreature {
                 }
             }
         }
+        */
     }
 
     public void updateViewRelicControls() {
@@ -764,19 +766,21 @@ extends AbstractCreature {
                             o.showEvokeValue();
                         }
                     } else {
-                        int n = this.hoveredCard.showEvokeOrbCount;
+                        int tmpShowCount = this.hoveredCard.showEvokeOrbCount;
                         int emptyCount = 0;
                         for (AbstractOrb o : this.orbs) {
-                            if (!(o instanceof EmptyOrbSlot)) continue;
-                            ++emptyCount;
+                            if (o instanceof EmptyOrbSlot) {
+                              ++emptyCount;
+                            }
                         }
-                        int n2 = n - emptyCount;
-                        if (n2 > 0) {
+                        tmpShowCount -= emptyCount;
+                        if (tmpShowCount > 0) {
                             for (AbstractOrb o : this.orbs) {
-                                void var4_9;
                                 o.showEvokeValue();
-                                if (--var4_9 > 0) continue;
-                                break;
+                                tmpShowCount--;
+                                if (tmpShowCount <= 0)
+                                    break;
+
                             }
                         }
                     }
@@ -832,12 +836,12 @@ extends AbstractCreature {
                     return;
                 }
                 if (!this.isInKeyboardMode && this.isHoveringCard && this.hoveredCard != null && !this.hoveredCard.isHoveredInHand(1.0f)) {
-                    void var4_11;
-                    boolean bl = false;
-                    while (++var4_11 < this.hand.group.size()) {
-                        if (this.hand.group.get((int)var4_11) != this.hoveredCard || var4_11 == false || !this.hand.group.get((int)(var4_11 - true)).isHoveredInHand(1.0f)) continue;
-                        this.toHover = this.hand.group.get((int)(var4_11 - true));
-                        break;
+                    for (int i = 0; i < this.hand.group.size(); i++) {
+                        if (this.hand.group.get(i) == this.hoveredCard && i != 0 && (
+                            (AbstractCard)this.hand.group.get(i - 1)).isHoveredInHand(1.0F)) {
+                            this.toHover = this.hand.group.get(i - 1);
+                            break;
+                        }
                     }
                     this.releaseCard();
                 }
@@ -908,7 +912,7 @@ extends AbstractCreature {
             if (this.hoveredCard.canUse(this, this.hoveredMonster)) {
                 this.playCard();
             } else {
-                AbstractDungeon.effectList.add(new ThoughtBubble(this.dialogX, this.dialogY, 3.0f, this.hoveredCard.cantUseMessage, true));
+                //AbstractDungeon.effectList.add(new ThoughtBubble(this.dialogX, this.dialogY, 3.0f, this.hoveredCard.cantUseMessage, true));
                 this.energyTip(this.hoveredCard);
                 this.releaseCard();
             }
@@ -922,7 +926,7 @@ extends AbstractCreature {
             if (this.hoveredCard.canUse(this, this.hoveredMonster)) {
                 this.playCard();
             } else {
-                AbstractDungeon.effectList.add(new ThoughtBubble(this.dialogX, this.dialogY, 3.0f, this.hoveredCard.cantUseMessage, true));
+                //AbstractDungeon.effectList.add(new ThoughtBubble(this.dialogX, this.dialogY, 3.0f, this.hoveredCard.cantUseMessage, true));
                 this.energyTip(this.hoveredCard);
                 this.releaseCard();
             }
@@ -1146,7 +1150,7 @@ extends AbstractCreature {
                 this.hoveredCard.target_y = (float)InputHelper.mY + 270.0f * Settings.scale;
             }
             if (!this.hoveredCard.hasEnoughEnergy() && this.isHoveringDropZone) {
-                AbstractDungeon.effectList.add(new ThoughtBubble(this.dialogX, this.dialogY, 3.0f, this.hoveredCard.cantUseMessage, true));
+                //AbstractDungeon.effectList.add(new ThoughtBubble(this.dialogX, this.dialogY, 3.0f, this.hoveredCard.cantUseMessage, true));
                 this.energyTip(this.hoveredCard);
                 this.releaseCard();
                 CardCrawlGame.sound.play("CARD_REJECT");
@@ -1189,7 +1193,7 @@ extends AbstractCreature {
                     this.playCard();
                     return true;
                 }
-                AbstractDungeon.effectList.add(new ThoughtBubble(this.dialogX, this.dialogY, 3.0f, this.hoveredCard.cantUseMessage, true));
+                //AbstractDungeon.effectList.add(new ThoughtBubble(this.dialogX, this.dialogY, 3.0f, this.hoveredCard.cantUseMessage, true));
                 this.energyTip(this.hoveredCard);
                 this.releaseCard();
                 return true;
@@ -1262,7 +1266,7 @@ extends AbstractCreature {
         }
     }
 
-    private void playCard() {
+    public void playCard() {
         InputHelper.justClickedLeft = false;
         this.hoverEnemyWaitTimer = 1.0f;
         this.hoveredCard.unhover();
@@ -1446,11 +1450,11 @@ extends AbstractCreature {
                 this.updateCardsOnDamage();
                 ++this.damagedThisCombat;
             }
-            AbstractDungeon.effectList.add(new StrikeEffect((AbstractCreature)this, this.hb.cX, this.hb.cY, damageAmount));
+            //AbstractDungeon.effectList.add(new StrikeEffect((AbstractCreature)this, this.hb.cX, this.hb.cY, damageAmount));
             if (this.currentHealth < 0) {
                 this.currentHealth = 0;
             } else if (this.currentHealth < this.maxHealth / 4) {
-                AbstractDungeon.topLevelEffects.add(new BorderFlashEffect(new Color(1.0f, 0.1f, 0.05f, 0.0f)));
+                //AbstractDungeon.topLevelEffects.add(new BorderFlashEffect(new Color(1.0f, 0.1f, 0.05f, 0.0f)));
             }
             this.healthBarUpdatedEvent();
             if ((float)this.currentHealth <= (float)this.maxHealth / 2.0f && !this.isBloodied) {
@@ -1482,16 +1486,16 @@ extends AbstractCreature {
                 this.currentHealth = 0;
                 if (this.currentBlock > 0) {
                     this.loseBlock();
-                    AbstractDungeon.effectList.add(new HbBlockBrokenEffect(this.hb.cX - this.hb.width / 2.0f + BLOCK_ICON_X, this.hb.cY - this.hb.height / 2.0f + BLOCK_ICON_Y));
+                    //AbstractDungeon.effectList.add(new HbBlockBrokenEffect(this.hb.cX - this.hb.width / 2.0f + BLOCK_ICON_X, this.hb.cY - this.hb.height / 2.0f + BLOCK_ICON_Y));
                 }
             }
         } else if (this.currentBlock > 0) {
-            AbstractDungeon.effectList.add(new BlockedWordEffect(this, this.hb.cX, this.hb.cY, AbstractPlayer.uiStrings.TEXT[0]));
+           // AbstractDungeon.effectList.add(new BlockedWordEffect(this, this.hb.cX, this.hb.cY, AbstractPlayer.uiStrings.TEXT[0]));
         } else if (hadBlock) {
-            AbstractDungeon.effectList.add(new BlockedWordEffect(this, this.hb.cX, this.hb.cY, AbstractPlayer.uiStrings.TEXT[0]));
-            AbstractDungeon.effectList.add(new HbBlockBrokenEffect(this.hb.cX - this.hb.width / 2.0f + BLOCK_ICON_X, this.hb.cY - this.hb.height / 2.0f + BLOCK_ICON_Y));
+            //AbstractDungeon.effectList.add(new BlockedWordEffect(this, this.hb.cX, this.hb.cY, AbstractPlayer.uiStrings.TEXT[0]));
+            //AbstractDungeon.effectList.add(new HbBlockBrokenEffect(this.hb.cX - this.hb.width / 2.0f + BLOCK_ICON_X, this.hb.cY - this.hb.height / 2.0f + BLOCK_ICON_Y));
         } else {
-            AbstractDungeon.effectList.add(new StrikeEffect((AbstractCreature)this, this.hb.cX, this.hb.cY, 0));
+            //AbstractDungeon.effectList.add(new StrikeEffect((AbstractCreature)this, this.hb.cX, this.hb.cY, 0));
         }
     }
 
@@ -1827,7 +1831,7 @@ extends AbstractCreature {
     }
 
     public void createHandIsFullDialog() {
-        AbstractDungeon.effectList.add(new ThoughtBubble(this.dialogX, this.dialogY, 3.0f, MSG[2], true));
+        //AbstractDungeon.effectList.add(new ThoughtBubble(this.dialogX, this.dialogY, 3.0f, MSG[2], true));
     }
 
     private void renderHoverReticle(SpriteBatch sb) {
@@ -2172,7 +2176,7 @@ extends AbstractCreature {
 
     public void channelOrb(AbstractOrb orbToSet) {
         if (this.maxOrbs <= 0) {
-            AbstractDungeon.effectList.add(new ThoughtBubble(this.dialogX, this.dialogY, 3.0f, MSG[4], true));
+            //AbstractDungeon.effectList.add(new ThoughtBubble(this.dialogX, this.dialogY, 3.0f, MSG[4], true));
             return;
         }
         if (this.maxOrbs > 0) {
@@ -2216,7 +2220,7 @@ extends AbstractCreature {
     public void increaseMaxOrbSlots(int amount, boolean playSfx) {
         int i;
         if (this.maxOrbs == 10) {
-            AbstractDungeon.effectList.add(new ThoughtBubble(this.dialogX, this.dialogY, 3.0f, MSG[3], true));
+            //AbstractDungeon.effectList.add(new ThoughtBubble(this.dialogX, this.dialogY, 3.0f, MSG[3], true));
             return;
         }
         if (playSfx) {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/core/CardCrawlGame$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/core/CardCrawlGame$1.class
new file mode 100644
index 0000000..36a19e6
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/core/CardCrawlGame$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/core/CardCrawlGame$GameMode.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/core/CardCrawlGame$GameMode.class
new file mode 100644
index 0000000..f067dfe
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/core/CardCrawlGame$GameMode.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/core/CardCrawlGame.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/core/CardCrawlGame.class
new file mode 100644
index 0000000..122858e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/core/CardCrawlGame.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/core/CardCrawlGame.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/core/CardCrawlGame.java
index 3ac8b89..6d801d3 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/core/CardCrawlGame.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/core/CardCrawlGame.java
@@ -108,6 +108,7 @@ import java.util.Map;
 import java.util.Scanner;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import com.megacrit.cardcrawl.desktop.ApiObj;
 
 public class CardCrawlGame
 implements ApplicationListener {
@@ -342,14 +343,14 @@ implements ApplicationListener {
     public void render() {
         try {
             TimeHelper.update();
-            if (Gdx.graphics.getRawDeltaTime() > 0.1f) {
-                return;
-            }
+            //if (Gdx.graphics.getRawDeltaTime() > 1.0f) {
+            //    return;
+            //}
             CInputHelper.initializeIfAble();
             this.update();
             this.sb.setProjectionMatrix(this.camera.combined);
             psb.setProjectionMatrix(this.camera.combined);
-            Gdx.gl.glClear(16384);
+            //Gdx.gl.glClear(16384);
             this.sb.begin();
             this.sb.setColor(Color.WHITE);
             switch (mode) {
@@ -405,6 +406,10 @@ implements ApplicationListener {
                 this.sb.draw(ImageMaster.WHITE_SQUARE_IMG, (float)Settings.WIDTH, 0.0f, (float)Settings.VERT_LETTERBOX_AMT, (float)Settings.HEIGHT);
             }
             this.sb.end();
+
+            if (ApiObj.function_to_call != null) {
+                ApiObj.call_it();
+            }
         }
         catch (Exception e) {
             logger.info("Exception occurred in CardCrawlGame render method!");
@@ -481,7 +486,7 @@ implements ApplicationListener {
                     logger.info("[GC] AFTER: " + String.valueOf(SystemStats.getUsedMemory()));
                     logger.info("New Transition Screen, Tip Tracker Refresh: " + (System.currentTimeMillis() - startTime) + "ms");
                     startTime = System.currentTimeMillis();
-                    CardCrawlGame.fadeIn(2.0f);
+                    CardCrawlGame.fadeIn(0.001f);
                     if (queueCredits) {
                         queueCredits = false;
                         CardCrawlGame.mainMenuScreen.creditsScreen.open(playCreditsBgm);
@@ -508,14 +513,14 @@ implements ApplicationListener {
 
     public static void startOver() {
         startOver = true;
-        CardCrawlGame.fadeToBlack(2.0f);
+        CardCrawlGame.fadeToBlack(0.001f);
     }
 
     public static void startOverButShowCredits() {
         startOver = true;
         queueCredits = true;
         CardCrawlGame.doorUnlockScreenCheck();
-        CardCrawlGame.fadeToBlack(2.0f);
+        CardCrawlGame.fadeToBlack(0.001f);
     }
 
     private static void doorUnlockScreenCheck() {
@@ -945,48 +950,47 @@ implements ApplicationListener {
             }
             ++index;
         }
-        Object var3_11 = null;
+
+
+        AbstractCard abstractCard = null;
         if (CardCrawlGame.saveFile.bottled_flame != null) {
-            void var3_12;
             for (AbstractCard i : AbstractDungeon.player.masterDeck.group) {
                 if (!i.cardID.equals(CardCrawlGame.saveFile.bottled_flame)) continue;
-                AbstractCard abstractCard = i;
+                abstractCard = i;
                 if (i.timesUpgraded != CardCrawlGame.saveFile.bottled_flame_upgrade || i.misc != CardCrawlGame.saveFile.bottled_flame_misc) continue;
                 break;
             }
-            if (var3_12 != null) {
-                var3_12.inBottleFlame = true;
-                ((BottledFlame)AbstractDungeon.player.getRelic((String)"Bottled Flame")).card = var3_12;
+            if (abstractCard != null) {
+                abstractCard.inBottleFlame = true;
+                ((BottledFlame)AbstractDungeon.player.getRelic((String)"Bottled Flame")).card = abstractCard;
                 ((BottledFlame)AbstractDungeon.player.getRelic("Bottled Flame")).setDescriptionAfterLoading();
             }
         }
-        Object var3_14 = null;
+        abstractCard = null;
         if (CardCrawlGame.saveFile.bottled_lightning != null) {
-            void var3_15;
             for (AbstractCard i : AbstractDungeon.player.masterDeck.group) {
                 if (!i.cardID.equals(CardCrawlGame.saveFile.bottled_lightning)) continue;
-                AbstractCard abstractCard = i;
+                abstractCard = i;
                 if (i.timesUpgraded != CardCrawlGame.saveFile.bottled_lightning_upgrade || i.misc != CardCrawlGame.saveFile.bottled_lightning_misc) continue;
                 break;
             }
-            if (var3_15 != null) {
-                var3_15.inBottleLightning = true;
-                ((BottledLightning)AbstractDungeon.player.getRelic((String)"Bottled Lightning")).card = var3_15;
+            if (abstractCard != null) {
+                abstractCard.inBottleLightning = true;
+                ((BottledLightning)AbstractDungeon.player.getRelic((String)"Bottled Lightning")).card = abstractCard;
                 ((BottledLightning)AbstractDungeon.player.getRelic("Bottled Lightning")).setDescriptionAfterLoading();
             }
         }
-        Object var3_17 = null;
+        abstractCard = null;
         if (CardCrawlGame.saveFile.bottled_tornado != null) {
-            void var3_18;
             for (AbstractCard i : AbstractDungeon.player.masterDeck.group) {
                 if (!i.cardID.equals(CardCrawlGame.saveFile.bottled_tornado)) continue;
-                AbstractCard abstractCard = i;
+                abstractCard = i;
                 if (i.timesUpgraded != CardCrawlGame.saveFile.bottled_tornado_upgrade || i.misc != CardCrawlGame.saveFile.bottled_tornado_misc) continue;
                 break;
             }
-            if (var3_18 != null) {
-                var3_18.inBottleTornado = true;
-                ((BottledTornado)AbstractDungeon.player.getRelic((String)"Bottled Tornado")).card = var3_18;
+            if (abstractCard != null) {
+                abstractCard.inBottleTornado = true;
+                ((BottledTornado)AbstractDungeon.player.getRelic((String)"Bottled Tornado")).card = abstractCard;
                 ((BottledTornado)AbstractDungeon.player.getRelic("Bottled Tornado")).setDescriptionAfterLoading();
             }
         }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObj.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObj.class
new file mode 100644
index 0000000..06591b8
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObj.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObj.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObj.java
new file mode 100644
index 0000000..3a5f893
--- /dev/null
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObj.java
@@ -0,0 +1,899 @@
+package com.megacrit.cardcrawl.desktop;
+
+import com.megacrit.cardcrawl.core.CardCrawlGame;
+import com.megacrit.cardcrawl.desktop.DesktopLauncher;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.text.MessageFormat;
+import com.megacrit.cardcrawl.actions.GameActionManager;
+import com.megacrit.cardcrawl.monsters.AbstractMonster;
+import com.megacrit.cardcrawl.monsters.MonsterQueueItem;
+import com.megacrit.cardcrawl.orbs.AbstractOrb;
+import com.megacrit.cardcrawl.powers.AbstractPower;
+import com.megacrit.cardcrawl.relics.AbstractRelic;
+import com.megacrit.cardcrawl.blights.AbstractBlight;
+import com.megacrit.cardcrawl.potions.AbstractPotion;
+import com.megacrit.cardcrawl.stances.AbstractStance;
+import com.megacrit.cardcrawl.cards.CardGroup;
+import com.megacrit.cardcrawl.cards.AbstractCard;
+import com.megacrit.cardcrawl.ui.panels.EnergyPanel;
+import com.megacrit.cardcrawl.dungeons.AbstractDungeon;
+import com.megacrit.cardcrawl.rooms.AbstractRoom;
+import com.megacrit.cardcrawl.monsters.MonsterGroup;
+import com.megacrit.cardcrawl.rooms.CampfireUI;
+import com.megacrit.cardcrawl.rooms.MonsterRoom;
+import com.megacrit.cardcrawl.rooms.MonsterRoomElite;
+import com.megacrit.cardcrawl.rooms.MonsterRoomBoss;
+import com.megacrit.cardcrawl.rooms.RestRoom;
+import com.megacrit.cardcrawl.rooms.ShopRoom;
+import com.megacrit.cardcrawl.rooms.EventRoom;
+import com.megacrit.cardcrawl.rooms.TreasureRoom;
+import com.megacrit.cardcrawl.rooms.TreasureRoomBoss;
+import com.megacrit.cardcrawl.rooms.EmptyRoom;
+import com.megacrit.cardcrawl.characters.AbstractPlayer;
+import com.megacrit.cardcrawl.random.Random;
+import com.megacrit.cardcrawl.core.Settings;
+import com.megacrit.cardcrawl.helpers.TipTracker;
+import com.megacrit.cardcrawl.unlock.UnlockTracker;
+import com.megacrit.cardcrawl.helpers.FontHelper;
+import com.megacrit.cardcrawl.ui.panels.SeedPanel;
+import com.megacrit.cardcrawl.helpers.ModHelper;
+import com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen;
+import com.megacrit.cardcrawl.screens.custom.CustomModeScreen;
+import com.megacrit.cardcrawl.helpers.SaveHelper;
+import com.megacrit.cardcrawl.helpers.SeedHelper;
+import com.megacrit.cardcrawl.shop.ShopScreen;
+import com.megacrit.cardcrawl.helpers.CardHelper;
+import com.megacrit.cardcrawl.screens.DungeonTransitionScreen;
+import com.megacrit.cardcrawl.rewards.RewardItem;
+import com.megacrit.cardcrawl.vfx.FastCardObtainEffect;
+import com.megacrit.cardcrawl.map.MapRoomNode;
+import com.megacrit.cardcrawl.map.MapEdge;
+import java.util.Arrays;
+
+import java.nio.charset.Charset;
+import java.util.Locale;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+
+import com.megacrit.cardcrawl.helpers.CardLibrary;
+import com.megacrit.cardcrawl.helpers.RelicLibrary;
+import com.megacrit.cardcrawl.helpers.PotionHelper;
+
+public class ApiObj {
+    public static final Logger logger;
+
+    public static Object waiter = new Object();
+    public static String result = "";
+    public static String function_to_call = null;
+    public static int function_arg1 = 0;
+    public static int function_arg2 = 0;
+    public static String state = null;
+
+    static {
+        System.setProperty("log4j.configurationFile", "log4j2.xml");
+        logger = LogManager.getLogger(DesktopLauncher.class.getName());
+    }
+
+    public static String cards() {
+        String text = "[";
+        int id = 0;
+        for (String key : CardLibrary.cards.keySet()) {
+            text = text.concat(MessageFormat.format("'{'\"card\": \"{0}\",\"id\": {1}'}',",
+                key, id++));
+        }
+        text = replaceLast(text, ",", "");
+        return text.concat("]");
+    }
+
+    public static String potions() {
+        String text = "[";
+        int id = 0;
+        for (String key : PotionHelper.getPotions(AbstractPlayer.PlayerClass.IRONCLAD, true)) {
+            text = text.concat(MessageFormat.format("'{'\"potion\": \"{0}\",\"id\": {1}'}',",
+                key, id++));
+        }
+        text = replaceLast(text, ",", "");
+        return text.concat("]");
+    }
+
+    public static String relics() {
+        String text = "[";
+        int id = 0;
+        for (String key : RelicLibrary.sharedRelics.keySet()) {
+            text = text.concat(MessageFormat.format("'{'\"relic\": \"{0}\",\"id\": {1}'}',",
+                key, id++));
+        }
+        for (String key : RelicLibrary.redRelics.keySet()) {
+            text = text.concat(MessageFormat.format("'{'\"relic\": \"{0}\",\"id\": {1}'}',",
+                key, id++));
+        }
+        for (String key : RelicLibrary.greenRelics.keySet()) {
+            text = text.concat(MessageFormat.format("'{'\"relic\": \"{0}\",\"id\": {1}'}',",
+                key, id++));
+        }
+        for (String key : RelicLibrary.blueRelics.keySet()) {
+            text = text.concat(MessageFormat.format("'{'\"relic\": \"{0}\",\"id\": {1}'}',",
+                key, id++));
+        }
+        for (String key : RelicLibrary.purpleRelics.keySet()) {
+            text = text.concat(MessageFormat.format("'{'\"relic\": \"{0}\",\"id\": {1}'}',",
+                key, id++));
+        }
+        text = replaceLast(text, ",", "");
+        return text.concat("]");
+    }
+
+    public static String state() {
+        ApiObj.wait_it("state");
+        return ApiObj.result;
+    }
+
+    public static void skipReward(int rewardIndex) {
+        ApiObj.function_arg1 = rewardIndex;
+        ApiObj.wait_it("skipReward");
+    }
+
+    public static void claimReward(int rewardIndex) {
+        ApiObj.function_arg1 = rewardIndex;
+        ApiObj.wait_it("claimReward");
+    }
+
+    public static void claimCardReward(int rewardIndex, int cardIndex) {
+        ApiObj.function_arg1 = rewardIndex;
+        ApiObj.function_arg2 = cardIndex;
+        ApiObj.wait_it("claimCardReward");
+    }
+
+    public static void setCurrMapNode2(int x, int y) {
+        ApiObj.function_arg1 = x;
+        ApiObj.function_arg2 = y;
+        ApiObj.wait_it("setCurrMapNode2");
+    }
+
+    public static void playCard(int cardIndex) {
+        ApiObj.function_arg1 = cardIndex;
+        ApiObj.wait_it("playCard");
+    }
+
+    public static void playCard(int cardIndex, int monsterIndex) {
+        ApiObj.function_arg1 = cardIndex;
+        ApiObj.function_arg2 = monsterIndex;
+        ApiObj.wait_it("playCardTarget");
+    }
+
+    public static void endTurn() {
+        ApiObj.wait_it("endTurn");
+    }
+
+    public static void startDungeon(int seed) {
+        ApiObj.function_arg1 = seed;
+        ApiObj.wait_it("startDungeon");
+    }
+
+    public static void wait_it(String func2c) {
+        synchronized (waiter) {
+            try {
+                function_to_call = func2c;
+                waiter.wait();
+            } catch (InterruptedException e)  {
+                Thread.currentThread().interrupt();
+            }
+        }
+    }
+
+    public static void call_it() {
+        logger.info(MessageFormat.format("calling API {0} {1}", function_to_call, state));
+
+        if (state == null)
+            state = "";
+        synchronized (waiter) {
+            switch (state) {
+                case "wait_dungeon_1":
+                    if (CardCrawlGame.mode == CardCrawlGame.GameMode.CHAR_SELECT) {
+                        state = null;
+                        function_to_call = "startDungeon2";
+                    }
+                    return;
+                case "wait_dungeon_2":
+                    if (CardCrawlGame.dungeon.screen == AbstractDungeon.CurrentScreen.MAP ||  CardCrawlGame.dungeon.screen == AbstractDungeon.CurrentScreen.NONE)
+                        state = "notify";
+                    return;
+                case "wait_skip_reward":
+                    if (function_arg2 != AbstractDungeon.combatRewardScreen.rewards.size()) {
+                        function_to_call = null;
+                        state = null;
+                        waiter.notify();
+                        return;
+                    }
+                    return;
+                case "wait_idle":
+                    if (waitIdleEffects())
+                        return;
+                    function_to_call = null;
+                    state = null;
+                    waiter.notify();
+                    return;
+                case "wait_end_turn":
+                    if (function_arg1 == GameActionManager.turn)
+                        return;
+                    if (CardCrawlGame.dungeon.player.hand.group.size() <= 1 && CardCrawlGame.dungeon.player.isDead == false)
+                        return;
+                    function_to_call = null;
+                    state = null;
+                    waiter.notify();
+                    return;
+                case "wait_move_room":
+                    MapRoomNode node = AbstractDungeon.map.get(function_arg2).get(function_arg1);
+
+                    String nodeRoomType = "";
+                    if (node.room instanceof EmptyRoom) {
+                        nodeRoomType = "EmptyRoom";
+                    } else if (node.room instanceof RestRoom) {
+                        nodeRoomType = "RestRoom";
+                    } else if (node.room instanceof ShopRoom) {
+                        nodeRoomType = "ShopRoom";
+                    } else if (node.room instanceof EventRoom) {
+                        nodeRoomType = "EventRoom";
+                    } else if (node.room instanceof TreasureRoom) {
+                        nodeRoomType = "TreasureRoom";
+                    } else if (node.room instanceof MonsterRoom) {
+                        nodeRoomType = "MonsterRoom";
+                    } else if (node.room instanceof MonsterRoomElite) {
+                        nodeRoomType = "MonsterRoomElite";
+                    } else if (node.room instanceof MonsterRoomBoss) {
+                        nodeRoomType = "MonsterRoomBoss";
+                    } else if (node.room instanceof TreasureRoomBoss) {
+                        nodeRoomType = "TreasureRoomBoss";
+                    }
+
+                    if (nodeRoomType == "MonsterRoom" || nodeRoomType == "MonsterRoomElite"
+                        || nodeRoomType == "MonsterRoomBoss" || nodeRoomType == "TreasureRoomBoss") {
+                        if (EnergyPanel.totalCount == 0) {
+                            return;
+                        }
+                    }
+                    state = "wait_idle";
+                    return;
+                case "notify":
+                    function_to_call = null;
+                    state = null;
+                    waiter.notify();
+                    return;
+                default:
+                    break;
+            }
+
+            switch (function_to_call) {
+                case "state":
+                    function_to_call = null;
+                    result = state_1();
+                    waiter.notify();
+                    break;
+                case "skipReward":
+                    state = "wait_skip_reward";
+                    function_arg2 = AbstractDungeon.combatRewardScreen.rewards.size();
+                    skipReward_1(function_arg1);
+                    break;
+                case "claimReward":
+                    state = "wait_skip_reward";
+                    function_arg2 = AbstractDungeon.combatRewardScreen.rewards.size();
+                    claimReward_1(function_arg1);
+                    break;
+                case "claimCardReward":
+                    state = "wait_skip_reward";
+                    function_arg2 = AbstractDungeon.combatRewardScreen.rewards.size();
+                    claimCardReward_1(function_arg1, function_arg2);
+                    break;
+                case "setCurrMapNode2":
+                    state = "wait_move_room";
+                    setCurrMapNode2_1(function_arg1, function_arg2);
+                    break;
+                case "playCard":
+                    state = "wait_idle";
+                    playCard_1(function_arg1);
+                    break;
+                case "playCardTarget":
+                    state = "wait_idle";
+                    playCard_1(function_arg1, function_arg2);
+                    break;
+                case "endTurn":
+                    state = "wait_end_turn";
+                    function_arg1 = GameActionManager.turn;
+                    endTurn_1();
+                    break;
+                case "startDungeon":
+                    state = "wait_dungeon_1";
+                    restartDungeon_1();
+                    break;
+                case "startDungeon2":
+                    state = "wait_dungeon_2";
+                    startDungeon_1(Long.valueOf(function_arg1));
+                    break;
+                default:
+                    break;
+            }
+        }
+    }
+
+    public static void setSeed(Long seed) {
+        logger.info("Setting seed: " + seed);
+        Settings.seed = seed;
+        Settings.seedSet = true;
+        AbstractDungeon.monsterRng = new Random(seed);
+        AbstractDungeon.eventRng = new Random(seed);
+        AbstractDungeon.merchantRng = new Random(seed);
+        AbstractDungeon.cardRng = new Random(seed);
+        AbstractDungeon.treasureRng = new Random(seed);
+        AbstractDungeon.relicRng = new Random(seed);
+        AbstractDungeon.monsterHpRng = new Random(seed);
+        AbstractDungeon.potionRng = new Random(seed);
+        AbstractDungeon.aiRng = new Random(seed);
+        AbstractDungeon.shuffleRng = new Random(seed);
+        AbstractDungeon.cardRandomRng = new Random(seed);
+        AbstractDungeon.miscRng = new Random(seed);
+    }
+
+    public static void restartDungeon_1() {
+        if (CardCrawlGame.chosenCharacter != null) {
+            AbstractDungeon.firstRoomChosen = false;
+            CardCrawlGame.startOver();
+        }
+    }
+
+    public static void startDungeon_1(Long seed) {
+        if (DesktopLauncher.monstersOnly)
+            ModHelper.setMods(Arrays.asList("Uncertain Future"));
+
+        setSeed(seed);
+        Settings.FAST_MODE = true;
+        //Settings.ACTION_DUR_XFAST = 0.01f;
+        //Settings.ACTION_DUR_FASTER = 0.01f;
+        //Settings.ACTION_DUR_FAST = 0.01f;
+        //Settings.ACTION_DUR_MED = 0.01f;
+
+        TipTracker.showAgain("NEOW_SKIP");
+
+        AbstractDungeon.screen = AbstractDungeon.CurrentScreen.NONE;
+
+        CardCrawlGame.loadingSave = false;
+        CardCrawlGame.chosenCharacter = AbstractPlayer.PlayerClass.IRONCLAD;
+        CardCrawlGame.mode = CardCrawlGame.GameMode.CHAR_SELECT;
+        CardCrawlGame.mainMenuScreen.fadedOut = true;
+    }
+
+    public static void endTurn_1() {
+        AbstractDungeon.currMapNode.room.endTurn();
+    }
+
+    public static void playCard_1(int cardIndex) {
+        AbstractCard card = CardCrawlGame.dungeon.player.hand.group.get(cardIndex);
+
+        CardCrawlGame.dungeon.player.hoveredCard = card;
+        CardCrawlGame.dungeon.player.playCard();
+    }
+
+    public static void playCard_1(int cardIndex, int monsterIndex) {
+        AbstractCard card = CardCrawlGame.dungeon.player.hand.group.get(cardIndex);
+        AbstractMonster monster = CardCrawlGame.dungeon.currMapNode.room.monsters.monsters.get(monsterIndex);
+
+        CardCrawlGame.dungeon.player.hoveredCard = card;
+        CardCrawlGame.dungeon.player.hoveredMonster = monster;
+        CardCrawlGame.dungeon.player.playCard();
+    }
+
+    public static void setCurrMapNode2_1(int x, int y) {
+        MapRoomNode node = AbstractDungeon.map.get(y).get(x);
+
+        if (y == 0) {
+            node.hb.hovered = true;
+            AbstractDungeon.dungeonMapScreen.clicked = true;
+            DesktopLauncher.magic1 = true;
+        } else {
+            AbstractDungeon.getCurrMapNode().taken = true;
+
+            MapEdge connectedEdge = AbstractDungeon.getCurrMapNode().getEdgeConnectedTo(node);
+            if (connectedEdge != null) {
+                connectedEdge.markAsTaken();
+            }
+            node.animWaitTimer = 0.0f;
+            AbstractDungeon.nextRoom = node;
+            AbstractDungeon.pathX.add(node.x);
+            AbstractDungeon.pathY.add(node.y);
+            if (!AbstractDungeon.isDungeonBeaten) {
+                AbstractDungeon.nextRoomTransitionStart();
+            }
+
+            node.hb.hovered = true;
+            AbstractDungeon.screen = AbstractDungeon.CurrentScreen.MAP;
+            AbstractDungeon.dungeonMapScreen.clicked = true;
+        }
+    }
+
+    public static boolean waitIdleEffects() {
+        boolean won = true;
+        if (AbstractDungeon.currMapNode != null && AbstractDungeon.currMapNode.room != null
+            && AbstractDungeon.currMapNode.room.monsters != null
+            && AbstractDungeon.currMapNode.room.monsters.monsters.size() > 0
+            && AbstractDungeon.getCurrRoom().phase.name() == "COMBAT")
+        {
+            ArrayList<AbstractMonster> monsters = CardCrawlGame.dungeon.currMapNode.room.monsters.monsters;
+            for (AbstractMonster monster : monsters)
+            {
+                if (monster.isDeadOrEscaped() == false)
+                    won = false;
+            }
+        } else {
+            won = false;
+        }
+
+        if (AbstractDungeon.topLevelEffects.isEmpty()
+            && AbstractDungeon.topLevelEffectsQueue.isEmpty()
+            && AbstractDungeon.effectList.isEmpty()
+            && AbstractDungeon.effectsQueue.isEmpty()
+            && AbstractDungeon.actionManager.actions.isEmpty()
+            && AbstractDungeon.actionManager.preTurnActions.isEmpty()
+            && AbstractDungeon.actionManager.cardQueue.isEmpty()
+            && AbstractDungeon.actionManager.monsterQueue.isEmpty()
+            && AbstractDungeon.actionManager.currentAction == null
+            && AbstractDungeon.actionManager.monsterAttacksQueued == true
+            && AbstractRoom.waitTimer <= 0.0f
+            && AbstractDungeon.actionManager.turnHasEnded == false
+        ){
+            if (won == true && EnergyPanel.totalCount != 0) {
+                return true;
+            }
+            return false;
+        }
+
+        if (AbstractDungeon.actionManager.actions.isEmpty() == false && CardCrawlGame.dungeon.player.isDead)
+            return false;
+
+        logger.info(MessageFormat.format("waiting effect actions.. {0} {1} {2} | {3} {4} {5} | {6} {7} {8}",
+            AbstractDungeon.topLevelEffects.isEmpty(), AbstractDungeon.topLevelEffectsQueue.isEmpty(), AbstractDungeon.effectList.isEmpty(),
+            AbstractDungeon.effectsQueue.isEmpty(), AbstractDungeon.actionManager.actions.isEmpty(), AbstractDungeon.actionManager.preTurnActions.isEmpty(),
+            AbstractDungeon.actionManager.cardQueue.isEmpty(), AbstractDungeon.actionManager.monsterQueue.isEmpty(), AbstractDungeon.actionManager.currentAction == null));
+        if (AbstractDungeon.topLevelEffects.size() > 0) {
+            logger.info(AbstractDungeon.topLevelEffects.get(0).getClass().getName());
+        }
+        if (AbstractDungeon.effectList.size() > 0) {
+            logger.info(AbstractDungeon.effectList.get(0).getClass().getName());
+        }
+        return true;
+    }
+
+    public static void skipReward_1(int rewardIndex) {
+        EnergyPanel.totalCount = 0;
+
+        String screenType = "";
+        if (CardCrawlGame.dungeon.screen != null) { screenType = CardCrawlGame.dungeon.screen.name(); }
+
+        switch (screenType) {
+            case "COMBAT_REWARD":
+                AbstractDungeon.combatRewardScreen.rewards.remove(rewardIndex);
+                break;
+            default:
+                break;
+        }
+    }
+
+    public static void claimReward_1(int rewardIndex) {
+        EnergyPanel.totalCount = 0;
+
+        String screenType = "";
+        if (CardCrawlGame.dungeon.screen != null) { screenType = CardCrawlGame.dungeon.screen.name(); }
+
+        switch (screenType) {
+            case "COMBAT_REWARD":
+                ArrayList<RewardItem> rewards = AbstractDungeon.combatRewardScreen.rewards;
+                rewards.get(rewardIndex).isDone = true;
+                break;
+            default:
+                break;
+        }
+    }
+
+    public static void claimCardReward_1(int rewardIndex, int cardIndex) {
+        EnergyPanel.totalCount = 0;
+
+        String screenType = "";
+        if (CardCrawlGame.dungeon.screen != null) { screenType = CardCrawlGame.dungeon.screen.name(); }
+
+        switch (screenType) {
+            case "COMBAT_REWARD":
+                ArrayList<RewardItem> rewards = AbstractDungeon.combatRewardScreen.rewards;
+                RewardItem rItem = rewards.get(rewardIndex);
+
+                AbstractCard hoveredCard = rItem.cards.get(cardIndex);
+                AbstractDungeon.effectsQueue.add(new FastCardObtainEffect(hoveredCard, hoveredCard.current_x, hoveredCard.current_y));
+
+                AbstractDungeon.combatRewardScreen.rewards.remove(rItem);
+                AbstractDungeon.combatRewardScreen.positionRewards();
+                if (AbstractDungeon.combatRewardScreen.rewards.isEmpty()) {
+                    AbstractDungeon.combatRewardScreen.hasTakenAll = true;
+                    AbstractDungeon.overlayMenu.proceedButton.show();
+                }
+                break;
+            default:
+                break;
+        }
+    }
+
+    public static String replaceLast(String text, String regex, String replacement) {
+        return text.replaceFirst("(?s)"+regex+"(?!.*?"+regex+")", replacement);
+    }
+
+    public static String buildJsonList(String members) {
+        String text = "[";
+        text = text.concat(replaceLast(members, ",", ""));
+        return text.concat("]");
+    }
+
+    public static String buildCardList(ArrayList<AbstractCard> cards) {
+        String cardText = "[";
+        int idx = 0;
+        for (AbstractCard card : cards)
+        {
+            Integer costNow = card.costForTurn;
+            if (card.cost == -1) {
+                costNow = EnergyPanel.totalCount;
+            }
+            if (card.freeToPlay()) {
+                costNow = 0;
+            }
+
+            cardText = cardText.concat("{");
+            cardText = cardText.concat(MessageFormat.format(
+                "\"id\": \"{0}\",\"type\": \"{1}\", \"target\": \"{2}\",\"cost\": {3}, \"costNow\": {4}, \"hasEnoughEnergy\": {5}, \"upgraded\": {6}, \"timesUpgraded\": {7}, \"canUpgrade\": {8}, \"rarity\": \"{9}\", \"index\": {10}",
+                card.cardID, card.type.name(), card.target.name(), card.cost, costNow, card.hasEnoughEnergy(), card.upgraded, card.timesUpgraded, card.canUpgrade(), card.rarity.name(), idx));
+
+            //cardText = cardText.concat(MessageFormat.format("'{'\"inBottleFlame\": {0},\"inBottleLightning\": {1},\"inBottleTornado\": {2}, \"purgeOnUse\": {3},\"exhaustOnUseOnce\": {4}, \"exhaustOnFire\": {5}, \"freeToPlayOnce\": {6}, \"isInAutoplay\": {7}'}',",
+            //    card.inBottleFlame, card.inBottleLightning, card.inBottleTornado, card.purgeOnUse, card.exhaustOnUseOnce, card.exhaustOnFire, card.freeToPlayOnce, card.isInAutoplay));
+
+            //cardText = cardText.concat(MessageFormat.format("'{'\"price\": {0},\"retain\": {1},\"selfRetain\": {2}, \"dontTriggerOnUseCard\": {3},\"exhaust\": {4}, \"returnToHand\": {5}, \"shuffleBackIntoDrawPile\": {6}, \"isEthereal\": {7}'}',",
+            //    card.price, card.retain, card.selfRetain, card.dontTriggerOnUseCard, card.exhaust, card.returnToHand, card.shuffleBackIntoDrawPile, card.isEthereal));
+
+            //cardText = cardText.concat(MessageFormat.format(
+            //    "\"energyOnUse\": {0},\"ignoreEnergyOnUse\": {1},\"damageType\": \"{2}\",",
+            //    card.energyOnUse, card.ignoreEnergyOnUse, card.damageType.name()));
+
+            //cardText = cardText.concat(MessageFormat.format(
+            //    "'{'\"baseDamage\": {0},\"baseBlock\": {1},\"baseMagicNumber\": {2},\"baseHeal\": {3},\"baseDraw\": {4},\"baseDiscard\": {5},'}',",
+            //    card.baseDamage, card.baseBlock, card.baseMagicNumber, card.baseHeal, card.baseDraw, card.baseDiscard));
+            //cardText = cardText.concat(MessageFormat.format(
+            //    "\"damage\": {0},\"block\": {1},\"magicNumber\": {2},\"heal\": {3},\"draw\": {4},\"discard\": {5}",
+            //    card.damage, card.block, card.magicNumber, card.heal, card.draw, card.discard));
+            cardText = cardText.concat("},");
+            idx++;
+        }
+        cardText = replaceLast(cardText, ",", "");
+        return cardText.concat("]");
+    }
+
+    public static String state_1() {
+        boolean isPopupOpen = CardCrawlGame.isPopupOpen;
+
+        //CardCrawlGame.dungeon.floorNum;
+        //CardCrawlGame.dungeon.actNum;
+
+        //public static MapRoomNode currMapNode;
+        //saveFile.current_room.equals(MonsterRoomBoss.class.getName())
+
+        //public static ArrayList<ArrayList<MapRoomNode>> map;
+        //CardCrawlGame.dungeon.map;
+        String currMapNodeRoomType = "";
+        // oh god hava..
+        if (AbstractDungeon.currMapNode != null && AbstractDungeon.currMapNode.room != null) {
+            if (AbstractDungeon.currMapNode.room instanceof EmptyRoom) {
+                currMapNodeRoomType = "EmptyRoom";
+            } else if (AbstractDungeon.currMapNode.room instanceof RestRoom) {
+                currMapNodeRoomType = "RestRoom";
+            } else if (AbstractDungeon.currMapNode.room instanceof ShopRoom) {
+                currMapNodeRoomType = "ShopRoom";
+            } else if (AbstractDungeon.currMapNode.room instanceof EventRoom) {
+                currMapNodeRoomType = "EventRoom";
+            } else if (AbstractDungeon.currMapNode.room instanceof TreasureRoom) {
+                currMapNodeRoomType = "TreasureRoom";
+            } else if (AbstractDungeon.currMapNode.room instanceof MonsterRoom) {
+                currMapNodeRoomType = "MonsterRoom";
+            } else if (AbstractDungeon.currMapNode.room instanceof MonsterRoomElite) {
+                currMapNodeRoomType = "MonsterRoomElite";
+            } else if (AbstractDungeon.currMapNode.room instanceof MonsterRoomBoss) {
+                currMapNodeRoomType = "MonsterRoomBoss";
+            } else if (AbstractDungeon.currMapNode.room instanceof TreasureRoomBoss) {
+                currMapNodeRoomType = "TreasureRoomBoss";
+            }
+        }
+
+        /*
+            public static CardRewardScreen cardRewardScreen;
+            public static CombatRewardScreen combatRewardScreen;
+            public static BossRelicSelectScreen bossRelicScreen;
+            public static MasterDeckViewScreen deckViewScreen;
+            public static DiscardPileViewScreen discardPileViewScreen;
+            public static DrawPileViewScreen gameDeckViewScreen;
+            public static ExhaustPileViewScreen exhaustPileViewScreen;
+            public static SettingsScreen settingsScreen;
+            public static InputSettingsScreen inputSettingsScreen;
+            public static DungeonMapScreen dungeonMapScreen;
+            public static GridCardSelectScreen gridSelectScreen;
+            public static HandCardSelectScreen handCardSelectScreen;
+            public static ShopScreen shopScreen;
+            public static CreditsScreen creditsScreen;
+            public static FtueTip ftue;
+            public static DeathScreen deathScreen;
+            public static VictoryScreen victoryScreen;
+            public static UnlockCharacterScreen unlockScreen;
+            public static NeowUnlockScreen gUnlockScreen;
+            public static boolean isScreenUp;
+
+            public static boolean isAscensionMode;
+            public static int ascensionLevel;
+        */
+        String screenType = "";
+        if (CardCrawlGame.dungeon.screen != null) { screenType = CardCrawlGame.dungeon.screen.name(); }
+        boolean isScreenUp = CardCrawlGame.dungeon.isScreenUp;
+
+        String json_fight = "{}";
+        try {
+            boolean won = true;
+            String monstersStr = "[]";
+            if (AbstractDungeon.currMapNode != null && AbstractDungeon.currMapNode.room != null && AbstractDungeon.currMapNode.room.monsters != null) {
+                ArrayList<AbstractMonster> monsters = CardCrawlGame.dungeon.currMapNode.room.monsters.monsters;
+
+                monstersStr = "";
+                int mob_index = 0;
+                for (AbstractMonster monster : monsters)
+                {
+                    if (monster.isDeadOrEscaped() == false)
+                        won = false;
+
+                    String mobPowerStr = "";
+                    ArrayList<AbstractPower> mobPowers = monster.powers;
+                    for (AbstractPower power : mobPowers)
+                    {
+                        mobPowerStr = mobPowerStr.concat(MessageFormat.format("'{'\"id\": \"{0}\",\"amount\": {1},\"priority\": {2},\"type\": \"{3}\"'}',",
+                            power.ID, power.amount, power.priority, power.type.name()));
+                    }
+                    mobPowerStr = buildJsonList(mobPowerStr);
+
+                    monstersStr = monstersStr.concat(MessageFormat.format(
+                        "'{'\"id\": \"{0}\",\"type\": \"{1}\",\"intent\": \"{2}\",\"intentDmg\": {3},\"intentBaseDmg\": {4},\"intentMultiAmt\": {5},\"hp\": {6}, \"hpMax\": {7}, \"block\": {8}, \"powers\": {9}, \"isDeadOrEscaped\": {10}, \"index\": {11}'}',",
+                        monster.id, monster.type.name(), monster.intent.name(),
+                        monster.intentDmg, monster.intentBaseDmg, monster.intentMultiAmt,
+                        monster.currentHealth, monster.maxHealth, monster.currentBlock, mobPowerStr, monster.isDeadOrEscaped(), mob_index));
+                    mob_index++;
+                }
+                monstersStr = buildJsonList(monstersStr);
+            }
+
+
+
+            int turn = GameActionManager.turn;
+            int damageReceivedThisTurn = GameActionManager.damageReceivedThisTurn;
+            int damageReceivedThisCombat = GameActionManager.damageReceivedThisCombat;
+            int hpLossThisCombat = GameActionManager.hpLossThisCombat;
+            int playerHpLastTurn = GameActionManager.playerHpLastTurn;
+            int energyGainedThisCombat = GameActionManager.energyGainedThisCombat;
+            boolean hasControl =  CardCrawlGame.dungeon.actionManager.hasControl;
+            json_fight = MessageFormat.format("'{'\"turn\": {0}, \"damageReceivedThisTurn\": {1}, \"damageReceivedThisCombat\": {2}, \"hpLossThisCombat\": {3}, \"hasControl\": {4}, \"monsters\": {5}, \"won\": {6}'}'",
+                turn, damageReceivedThisTurn, damageReceivedThisCombat, hpLossThisCombat, hasControl, monstersStr, won);
+        } catch (Exception e) {
+            json_fight = "{}";
+        }
+
+        String json_player = "{}";
+        try {
+            String charClass = CardCrawlGame.dungeon.player.chosenClass.name();
+            int potionSlots = CardCrawlGame.dungeon.player.potionSlots;
+            int gold = CardCrawlGame.dungeon.player.gold;
+            int displayGold = CardCrawlGame.dungeon.player.displayGold;
+            boolean isDead = CardCrawlGame.dungeon.player.isDead;
+
+            int energy = EnergyPanel.totalCount;
+            int energyMax = CardCrawlGame.dungeon.player.energy.energy;
+
+            int currentHealth = CardCrawlGame.dungeon.player.currentHealth;
+            int maxHealth = CardCrawlGame.dungeon.player.maxHealth;
+            int currentBlock = CardCrawlGame.dungeon.player.currentBlock;
+            int damagedThisCombat = CardCrawlGame.dungeon.player.damagedThisCombat;
+            int cardsPlayedThisTurn = CardCrawlGame.dungeon.player.cardsPlayedThisTurn;
+
+            ArrayList<AbstractOrb> orbs = CardCrawlGame.dungeon.player.orbs;
+            int masterMaxOrbs = CardCrawlGame.dungeon.player.masterMaxOrbs;
+            int maxOrbs = CardCrawlGame.dungeon.player.maxOrbs;
+
+            String stance = CardCrawlGame.dungeon.player.stance.ID;
+
+            int gameHandSize = CardCrawlGame.dungeon.player.gameHandSize;
+            int masterHandSize = CardCrawlGame.dungeon.player.masterHandSize;
+
+            ArrayList<AbstractCard> masterDeck = CardCrawlGame.dungeon.player.masterDeck.group;
+            ArrayList<AbstractCard> hand = CardCrawlGame.dungeon.player.hand.group;
+            ArrayList<AbstractCard> drawPile = CardCrawlGame.dungeon.player.drawPile.group;
+            ArrayList<AbstractCard> discardPile = CardCrawlGame.dungeon.player.discardPile.group;
+            ArrayList<AbstractCard> exhaustPile = CardCrawlGame.dungeon.player.exhaustPile.group;
+            ArrayList<AbstractCard> limbo = CardCrawlGame.dungeon.player.limbo.group;
+
+            String masterDeckStr = buildCardList(masterDeck);
+            String handStr = buildCardList(hand);
+            String drawPileStr = buildCardList(drawPile);
+            String discardPileStr = buildCardList(discardPile);
+            String exhaustPileStr = buildCardList(exhaustPile);
+            String limboStr = buildCardList(limbo);
+
+            String relicStr = "";
+            ArrayList<AbstractRelic> relics = CardCrawlGame.dungeon.player.relics;
+            for (AbstractRelic relic : relics)
+            {
+                relicStr = relicStr.concat(MessageFormat.format("'{'\"id\": \"{0}\",\"counter\": {1}, \"usedUp\": {2}, \"cost\": {3}'}',",
+                    relic.relicId, relic.counter, relic.usedUp, relic.cost));
+            }
+            relicStr = buildJsonList(relicStr);
+
+
+            String blightStr = "";
+            ArrayList<AbstractBlight> blights = CardCrawlGame.dungeon.player.blights;
+            for (AbstractBlight blight : blights)
+            {
+                blightStr = blightStr.concat(MessageFormat.format("'{'\"name\": \"{0}\",\"id\": \"{1}\",\"counter\": {2}'}',",
+                    blight.name, blight.blightID, blight.counter));
+            }
+            blightStr = buildJsonList(blightStr);
+
+
+            String potionStr = "";
+            ArrayList<AbstractPotion> potions = CardCrawlGame.dungeon.player.potions;
+            for (AbstractPotion potion : potions)
+            {
+                if (potion.slot != -1) {
+                    potionStr = potionStr.concat(MessageFormat.format("'{'\"id\": \"{0}\",\"slot\": {1}'}',",
+                        potion.ID, potion.slot));
+                }
+            }
+            potionStr = buildJsonList(potionStr);
+
+
+            String powerStr = "";
+            ArrayList<AbstractPower> powers = CardCrawlGame.dungeon.player.powers;
+            for (AbstractPower power : powers)
+            {
+                powerStr = powerStr.concat(MessageFormat.format("'{'\"id\": \"{0}\",\"amount\": {1},\"priority\": {2},\"type\": \"{3}\"'}',",
+                    power.ID, power.amount, power.priority, power.type.name()));
+            }
+            powerStr = buildJsonList(powerStr);
+
+            json_player = "{";
+            json_player = json_player.concat(MessageFormat.format("\"class\": \"{0}\", \"potionSlots\": {1}, \"gold\": {2}, \"displayGold\": {3}, \"isDead\": {4}",
+                charClass, potionSlots, gold, displayGold, isDead));
+            json_player = json_player.concat(MessageFormat.format(", \"energy\": {0}, \"energyMax\": {1}, \"hp\": {2}, \"hpMax\": {3}, \"block\": {4}",
+                energy, energyMax, currentHealth, maxHealth, currentBlock));
+            json_player = json_player.concat(MessageFormat.format(", \"timesDamagedThisCombat\": {0}, \"cardsPlayedThisTurn\": {1}, \"masterMaxOrbs\": {2}, \"maxOrbs\": {3}, \"stance\": \"{4}\"",
+                damagedThisCombat, cardsPlayedThisTurn, masterMaxOrbs, maxOrbs, stance));
+            json_player = json_player.concat(MessageFormat.format(", \"relics\": {0}, \"blights\": {1}, \"potions\": {2}, \"powers\": {3}",
+                relicStr, blightStr, potionStr, powerStr));
+            json_player = json_player.concat(MessageFormat.format(", \"gameHandSize\": {0}, \"masterHandSize\": {1}, \"masterDeck\": {2},\"drawPile\": {3},\"discardPile\": {4},\"exhaustPile\": {5},\"limbo\": {6},\"hand\": {7}",
+                gameHandSize, masterHandSize, masterDeckStr, drawPileStr, discardPileStr, exhaustPileStr, limboStr, handStr));
+            json_player = json_player.concat("}");
+        } catch (Exception e) {
+            json_player = "{}";
+        }
+
+        String cardPopupJson = "null";
+        if (CardCrawlGame.cardPopup.isOpen) {
+        }
+        String relicPopupJson = "null";
+        if (CardCrawlGame.relicPopup.isOpen) {
+        }
+        String menu = MessageFormat.format("'{'\"cardPopup\": {0}, \"relicPopup\": {1}'}'",
+            cardPopupJson, relicPopupJson);
+
+        String screen_reward = "{}";
+        try {
+            switch (screenType) {
+                //AbstractDungeon.cardRewardScreen.open(this.cards, this, TEXT[4]);
+                //AbstractDungeon.previousScreen = AbstractDungeon.CurrentScreen.COMBAT_REWARD;
+                case "CARD_REWARD":
+                    break;
+                case "COMBAT_REWARD":
+                    String rewardStr = "";
+                    ArrayList<RewardItem> rewards = AbstractDungeon.combatRewardScreen.rewards;
+                    int rindex = 0;
+                    for (RewardItem reward : rewards)
+                    {
+                        String reward_type = reward.type.name();
+                        /*public static enum RewardType {
+                            CARD,
+                            GOLD,
+                            STOLEN_GOLD,
+                            RELIC,
+                            POTION,
+                            EMERALD_KEY,
+                            SAPPHIRE_KEY;
+                        }*/
+                        switch (reward_type) {
+                            case "CARD":
+                                String rcards = buildCardList(reward.cards);
+                                rewardStr = rewardStr.concat(MessageFormat.format("'{'\"type\": \"{0}\",\"cards\": {1},\"index\": {2}'}',", reward_type, rcards, rindex));
+                                break;
+                            case "GOLD":
+                            case "STOLEN_GOLD":
+                                rewardStr = rewardStr.concat(MessageFormat.format("'{'\"type\": \"{0}\",\"amount\": {1},\"index\": {2}'}',",
+                                    reward_type, reward.goldAmt + reward.bonusGold, rindex));
+                                break;
+                            case "RELIC":
+                                rewardStr = rewardStr.concat(MessageFormat.format("'{'\"type\": \"{0}\",\"id\": \"{1}\",\"index\": {2}'}',",
+                                    reward_type, reward.relic.relicId, rindex));
+                                break;
+                            case "POTION":
+                                rewardStr = rewardStr.concat(MessageFormat.format("'{'\"type\": \"{0}\",\"id\": \"{1}\",\"index\": {2}'}',",
+                                    reward_type, reward.potion.ID, rindex));
+                                break;
+                            case "EMERALD_KEY":
+                            case "SAPPHIRE_KEY":
+                                rewardStr = rewardStr.concat(MessageFormat.format("'{'\"type\": \"{0}\",\"index\": {1}'}',", reward_type, rindex));
+                                break;
+                            default:
+                                break;
+                        }
+                        rindex++;
+                    }
+                    rewardStr = buildJsonList(rewardStr);
+                    screen_reward = MessageFormat.format("'{'\"screenType\": \"{0}\", \"rewards\": {1}'}'", screenType, rewardStr);
+                    break;
+                default:
+                    break;
+            }
+        } catch (Exception e) {
+        }
+
+        String json_map = "{}";
+        try {
+            String edges = "";
+            ArrayList<ArrayList<MapRoomNode>> mapNodes = AbstractDungeon.map;
+            for (ArrayList<MapRoomNode> roomNodes : mapNodes)
+            {
+                for (MapRoomNode node : roomNodes)
+                {
+                    for (MapEdge nodeedge : node.getEdges())
+                    {
+                        String nodeRoomType = "";
+                        if (node.room instanceof EmptyRoom) {
+                            nodeRoomType = "EmptyRoom";
+                        } else if (node.room instanceof RestRoom) {
+                            nodeRoomType = "RestRoom";
+                        } else if (node.room instanceof ShopRoom) {
+                            nodeRoomType = "ShopRoom";
+                        } else if (node.room instanceof EventRoom) {
+                            nodeRoomType = "EventRoom";
+                        } else if (node.room instanceof TreasureRoom) {
+                            nodeRoomType = "TreasureRoom";
+                        } else if (node.room instanceof MonsterRoom) {
+                            nodeRoomType = "MonsterRoom";
+                        } else if (node.room instanceof MonsterRoomElite) {
+                            nodeRoomType = "MonsterRoomElite";
+                        } else if (node.room instanceof MonsterRoomBoss) {
+                            nodeRoomType = "MonsterRoomBoss";
+                        } else if (node.room instanceof TreasureRoomBoss) {
+                            nodeRoomType = "TreasureRoomBoss";
+                        }
+                        edges = edges.concat(MessageFormat.format("'{'\"dstX\": {0},\"dstY\": {1},\"srcX\": {2},\"srcY\": {3},\"taken\": {4}, \"type\": \"{5}\"'}',",
+                            nodeedge.dstX, nodeedge.dstY, nodeedge.srcX, nodeedge.srcY, node.taken, nodeRoomType));
+                    }
+                }
+            }
+            edges = buildJsonList(edges);
+
+            json_map = MessageFormat.format("'{'\"curX\": {0}, \"curY\": {1}, \"nodes\": {2}'}'",
+            AbstractDungeon.currMapNode.x, AbstractDungeon.currMapNode.y, edges);
+        } catch (Exception e) {
+        }
+
+        String json_game = MessageFormat.format("'{'\"inRun\": {0}, \"screenType\": \"{1}\", \"screen\": {2}, \"map\": {3}, \"roomPhase\": \"{4}\", \"floor\": {5}, \"act\": {6}'}'",
+            CardCrawlGame.isInARun(), screenType, screen_reward, json_map, AbstractDungeon.getCurrRoom().phase.name(), AbstractDungeon.floorNum, AbstractDungeon.actNum);
+
+        String json = MessageFormat.format("'{'\"player\": {0}, \"fight\": {1}, \"game\": {2}, \"screenType\": \"{3}\", \"isScreenUp\": \"{4}\", \"currMapNodeRoomType\": \"{5}\", \"isPopupOpen\": \"{6}\"'}'",
+            json_player, json_fight, json_game, screenType, isScreenUp, currMapNodeRoomType, isPopupOpen);
+        return json;
+    }
+}
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc$1.class
new file mode 100644
index 0000000..2c318d0
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc$2.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc$2.class
new file mode 100644
index 0000000..f4590a8
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc$2.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc$3.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc$3.class
new file mode 100644
index 0000000..940478b
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc$3.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc$4.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc$4.class
new file mode 100644
index 0000000..382e288
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc$4.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc$5.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc$5.class
new file mode 100644
index 0000000..9db6cd3
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc$5.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc.class
new file mode 100644
index 0000000..4d0406e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc.java
new file mode 100644
index 0000000..df7e40d
--- /dev/null
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/ApiObjMisc.java
@@ -0,0 +1,655 @@
+package com.megacrit.cardcrawl.desktop;
+
+import java.nio.charset.Charset;
+import java.util.Locale;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+
+import com.megacrit.cardcrawl.monsters.AbstractMonster;
+
+import java.util.HashMap;
+import java.util.Map;
+
+public class ApiObjMisc {
+    public static final Logger logger;
+
+    static {
+        System.setProperty("log4j.configurationFile", "log4j2.xml");
+        logger = LogManager.getLogger(DesktopLauncher.class.getName());
+    }
+
+    HashMap<AbstractMonster.Intent, Float> monster_intent_to_float  = new HashMap<AbstractMonster.Intent, Float>() {{
+        put(AbstractMonster.Intent.ATTACK, 0.0f);
+        put(AbstractMonster.Intent.ATTACK_BUFF, 1.0f);
+        put(AbstractMonster.Intent.ATTACK_DEBUFF, 2.0f);
+        put(AbstractMonster.Intent.ATTACK_DEFEND, 3.0f);
+        put(AbstractMonster.Intent.BUFF, 4.0f);
+        put(AbstractMonster.Intent.DEBUFF, 5.0f);
+        put(AbstractMonster.Intent.STRONG_DEBUFF, 6.0f);
+        put(AbstractMonster.Intent.DEBUG, 7.0f);
+        put(AbstractMonster.Intent.DEFEND, 8.0f);
+        put(AbstractMonster.Intent.DEFEND_DEBUFF, 9.0f);
+        put(AbstractMonster.Intent.DEFEND_BUFF, 10.0f);
+        put(AbstractMonster.Intent.ESCAPE, 11.0f);
+        put(AbstractMonster.Intent.MAGIC, 12.0f);
+        put(AbstractMonster.Intent.NONE, 13.0f);
+        put(AbstractMonster.Intent.SLEEP, 14.0f);
+        put(AbstractMonster.Intent.STUN, 15.0f);
+        put(AbstractMonster.Intent.UNKNOWN, 16.0f);
+    }};
+
+    HashMap<String, Float> monster_to_float  = new HashMap<String, Float>() {{
+        put("AcidSlime_L", 0.0f);
+        put("AcidSlime_M", 1.0f);
+        put("AcidSlime_S", 2.0f);
+        put("Apology Slime", 3.0f);
+        put("Cultist", 4.0f);
+        put("FungiBeast", 5.0f);
+        put("GremlinFat", 6.0f);
+        put("GremlinNob", 7.0f);
+        put("GremlinThief", 8.0f);
+        put("GremlinTsundere", 9.0f);
+        put("GremlinWarrior", 10.0f);
+        put("GremlinWizard", 11.0f);
+        put("Hexaghost", 12.0f);
+        put("HexaghostBody", 13.0f);
+        put("HexaghostOrb", 14.0f);
+        put("JawWorm", 15.0f);
+        put("Lagavulin", 16.0f);
+        put("Looter", 17.0f);
+        put("FuzzyLouseDefensive", 18.0f);
+        put("FuzzyLouseNormal", 19.0f);
+        put("Sentry", 20.0f);
+        put("SlaverBlue", 21.0f);
+        put("SlaverRed", 22.0f);
+        put("SlimeBoss", 23.0f);
+        put("SpikeSlime_L", 24.0f);
+        put("SpikeSlime_M", 25.0f);
+        put("SpikeSlime_S", 26.0f);
+        put("TheGuardian", 27.0f);
+    }};
+
+    HashMap<String, Float> potion_to_float  = new HashMap<String, Float>() {{
+        put("BloodPotion", 0.0f);
+        put("ElixirPotion", 1.0f);
+        put("HeartOfIron", 2.0f);
+        put("Poison Potion", 3.0f);
+        put("CunningPotion", 4.0f);
+        put("GhostInAJar", 5.0f);
+        put("FocusPotion", 6.0f);
+        put("PotionOfCapacity", 7.0f);
+        put("EssenceOfDarkness", 8.0f);
+        put("BottledMiracle", 9.0f);
+        put("StancePotion", 10.0f);
+        put("Ambrosia", 11.0f);
+        put("Block Potion", 12.0f);
+        put("Dexterity Potion", 13.0f);
+        put("Energy Potion", 14.0f);
+        put("Explosive Potion", 15.0f);
+        put("Fire Potion", 16.0f);
+        put("Strength Potion", 17.0f);
+        put("Swift Potion", 18.0f);
+        put("Weak Potion", 19.0f);
+        put("FearPotion", 20.0f);
+        put("SteroidPotion", 21.0f);
+        put("SpeedPotion", 22.0f);
+        put("BlessingOfTheForge", 23.0f);
+        put("Regen Potion", 24.0f);
+        put("Ancient Potion", 25.0f);
+        put("LiquidBronze", 26.0f);
+        put("EssenceOfSteel", 27.0f);
+        put("DuplicationPotion", 28.0f);
+        put("DistilledChaos", 29.0f);
+        put("CultistPotion", 30.0f);
+        put("Fruit Juice", 31.0f);
+        put("FairyPotion", 32.0f);
+        put("EntropicBrew", 33.0f);
+    }};
+
+    HashMap<String, Float> card_to_float  = new HashMap<String, Float>() {{
+        put("Immolate", 0.0f);
+        put("Grand Finale", 1.0f);
+        put("Regret", 2.0f);
+        put("Crippling Poison", 3.0f);
+        put("Storm", 4.0f);
+        put("DeusExMachina", 5.0f);
+        put("A Thousand Cuts", 6.0f);
+        put("Spot Weakness", 7.0f);
+        put("Genetic Algorithm", 8.0f);
+        put("Go for the Eyes", 9.0f);
+        put("Zap", 10.0f);
+        put("Steam Power", 11.0f);
+        put("Wound", 12.0f);
+        put("Core Surge", 13.0f);
+        put("Fission", 14.0f);
+        put("Writhe", 15.0f);
+        put("Beta", 16.0f);
+        put("Hello World", 17.0f);
+        put("Creative AI", 18.0f);
+        put("Dark Shackles", 19.0f);
+        put("Glass Knife", 20.0f);
+        put("Consecrate", 21.0f);
+        put("Cloak And Dagger", 22.0f);
+        put("BowlingBash", 23.0f);
+        put("Underhanded Strike", 24.0f);
+        put("Anger", 25.0f);
+        put("Storm of Steel", 26.0f);
+        put("WheelKick", 27.0f);
+        put("Cleave", 28.0f);
+        put("Ball Lightning", 29.0f);
+        put("Sunder", 30.0f);
+        put("Glacier", 31.0f);
+        put("Inflame", 32.0f);
+        put("Sadistic Nature", 33.0f);
+        put("J.A.X.", 34.0f);
+        put("Offering", 35.0f);
+        put("Vengeance", 36.0f);
+        put("FlyingSleeves", 37.0f);
+        put("Streamline", 38.0f);
+        put("Wireheading", 39.0f);
+        put("Consume", 40.0f);
+        put("Power Through", 41.0f);
+        put("Dual Wield", 42.0f);
+        put("Deadly Poison", 43.0f);
+        put("Leg Sweep", 44.0f);
+        put("PanicButton", 45.0f);
+        put("Flex", 46.0f);
+        put("Redo", 47.0f);
+        put("AscendersBane", 48.0f);
+        put("Dagger Spray", 49.0f);
+        put("Bullet Time", 50.0f);
+        put("Fusion", 51.0f);
+        put("Catalyst", 52.0f);
+        put("Sanctity", 53.0f);
+        put("Halt", 54.0f);
+        put("Reaper", 55.0f);
+        put("Shiv", 56.0f);
+        put("Bane", 57.0f);
+        put("Tactician", 58.0f);
+        put("JustLucky", 59.0f);
+        put("After Image", 60.0f);
+        put("Unload", 61.0f);
+        put("FlurryOfBlows", 62.0f);
+        put("Blade Dance", 63.0f);
+        put("Deflect", 64.0f);
+        put("Compile Driver", 65.0f);
+        put("TalkToTheHand", 66.0f);
+        put("BattleHymn", 67.0f);
+        put("Protect", 68.0f);
+        put("Trip", 69.0f);
+        put("Indignation", 70.0f);
+        put("Dagger Throw", 71.0f);
+        put("Amplify", 72.0f);
+        put("ThirdEye", 73.0f);
+        put("Brutality", 74.0f);
+        put("Night Terror", 75.0f);
+        put("WindmillStrike", 76.0f);
+        put("Iron Wave", 77.0f);
+        put("Reboot", 78.0f);
+        put("Reckless Charge", 79.0f);
+        put("All For One", 80.0f);
+        put("ForeignInfluence", 81.0f);
+        put("Decay", 82.0f);
+        put("FameAndFortune", 83.0f);
+        put("Tools of the Trade", 84.0f);
+        put("Aggregate", 85.0f);
+        put("Expertise", 86.0f);
+        put("Dramatic Entrance", 87.0f);
+        put("Hemokinesis", 88.0f);
+        put("Blizzard", 89.0f);
+        put("Chaos", 90.0f);
+        put("LiveForever", 91.0f);
+        put("Intimidate", 92.0f);
+        put("Echo Form", 93.0f);
+        put("Necronomicurse", 94.0f);
+        put("Juggernaut", 95.0f);
+        put("Choke", 96.0f);
+        put("Caltrops", 97.0f);
+        put("Impatience", 98.0f);
+        put("DevaForm", 99.0f);
+        put("Poisoned Stab", 100.0f);
+        put("The Bomb", 101.0f);
+        put("Blur", 102.0f);
+        put("LikeWater", 103.0f);
+        put("Body Slam", 104.0f);
+        put("Insight", 105.0f);
+        put("Setup", 106.0f);
+        put("Barrage", 107.0f);
+        put("Crescendo", 108.0f);
+        put("SpiritShield", 109.0f);
+        put("Blood for Blood", 110.0f);
+        put("Impervious", 111.0f);
+        put("ClearTheMind", 112.0f);
+        put("EmptyBody", 113.0f);
+        put("Shrug It Off", 114.0f);
+        put("Meteor Strike", 115.0f);
+        put("Establishment", 116.0f);
+        put("Fasting2", 117.0f);
+        put("Clash", 118.0f);
+        put("Stack", 119.0f);
+        put("Miracle", 120.0f);
+        put("CarveReality", 121.0f);
+        put("Wallop", 122.0f);
+        put("Thunderclap", 123.0f);
+        put("Rebound", 124.0f);
+        put("Flame Barrier", 125.0f);
+        put("Seek", 126.0f);
+        put("Endless Agony", 127.0f);
+        put("WreathOfFlame", 128.0f);
+        put("Collect", 129.0f);
+        put("SashWhip", 130.0f);
+        put("Wraith Form v2", 131.0f);
+        put("Melter", 132.0f);
+        put("Berserk", 133.0f);
+        put("Pummel", 134.0f);
+        put("Riddle With Holes", 135.0f);
+        put("Metallicize", 136.0f);
+        put("Self Repair", 137.0f);
+        put("Pommel Strike", 138.0f);
+        put("Pain", 139.0f);
+        put("Rainbow", 140.0f);
+        put("InnerPeace", 141.0f);
+        put("Burst", 142.0f);
+        put("Acrobatics", 143.0f);
+        put("Adaptation", 144.0f);
+        put("Loop", 145.0f);
+        put("Blind", 146.0f);
+        put("Doppelganger", 147.0f);
+        put("Skewer", 148.0f);
+        put("Omniscience", 149.0f);
+        put("Envenom", 150.0f);
+        put("Chill", 151.0f);
+        put("Adrenaline", 152.0f);
+        put("Quick Slash", 153.0f);
+        put("Twin Strike", 154.0f);
+        put("BootSequence", 155.0f);
+        put("Parasite", 156.0f);
+        put("Bash", 157.0f);
+        put("RitualDagger", 158.0f);
+        put("Gash", 159.0f);
+        put("Wish", 160.0f);
+        put("Clothesline", 161.0f);
+        put("DeceiveReality", 162.0f);
+        put("MentalFortress", 163.0f);
+        put("Shockwave", 164.0f);
+        put("BecomeAlmighty", 165.0f);
+        put("Rampage", 166.0f);
+        put("Coolheaded", 167.0f);
+        put("Static Discharge", 168.0f);
+        put("Alpha", 169.0f);
+        put("Heatsinks", 170.0f);
+        put("Vault", 171.0f);
+        put("Bandage Up", 172.0f);
+        put("Scrawl", 173.0f);
+        put("Sever Soul", 174.0f);
+        put("Eruption", 175.0f);
+        put("Whirlwind", 176.0f);
+        put("Bite", 177.0f);
+        put("LessonLearned", 178.0f);
+        put("Secret Technique", 179.0f);
+        put("Calculated Gamble", 180.0f);
+        put("Tempest", 181.0f);
+        put("Combust", 182.0f);
+        put("Deep Breath", 183.0f);
+        put("Doubt", 184.0f);
+        put("Escape Plan", 185.0f);
+        put("CutThroughFate", 186.0f);
+        put("ReachHeaven", 187.0f);
+        put("Finisher", 188.0f);
+        put("Dark Embrace", 189.0f);
+        put("Die Die Die", 190.0f);
+        put("Well Laid Plans", 191.0f);
+        put("Ragnarok", 192.0f);
+        put("Buffer", 193.0f);
+        put("Electrodynamics", 194.0f);
+        put("FearNoEvil", 195.0f);
+        put("Seeing Red", 196.0f);
+        put("SandsOfTime", 197.0f);
+        put("Smite", 198.0f);
+        put("Violence", 199.0f);
+        put("Disarm", 200.0f);
+        put("Turbo", 201.0f);
+        put("Panache", 202.0f);
+        put("Undo", 203.0f);
+        put("Fiend Fire", 204.0f);
+        put("Terror", 205.0f);
+        put("Force Field", 206.0f);
+        put("Dazed", 207.0f);
+        put("Barricade", 208.0f);
+        put("Havoc", 209.0f);
+        put("Secret Weapon", 210.0f);
+        put("Apotheosis", 211.0f);
+        put("Sweeping Beam", 212.0f);
+        put("Feel No Pain", 213.0f);
+        put("FTL", 214.0f);
+        put("Rip and Tear", 215.0f);
+        put("Darkness", 216.0f);
+        put("Corruption", 217.0f);
+        put("Heel Hook", 218.0f);
+        put("Blasphemy", 219.0f);
+        put("Injury", 220.0f);
+        put("Double Energy", 221.0f);
+        put("Rage", 222.0f);
+        put("Machine Learning", 223.0f);
+        put("Reinforced Body", 224.0f);
+        put("Defend_P", 225.0f);
+        put("Limit Break", 226.0f);
+        put("Entrench", 227.0f);
+        put("Noxious Fumes", 228.0f);
+        put("Infinite Blades", 229.0f);
+        put("Phantasmal Killer", 230.0f);
+        put("WaveOfTheHand", 231.0f);
+        put("Malaise", 232.0f);
+        put("Conserve Battery", 233.0f);
+        put("Defend_R", 234.0f);
+        put("Mayhem", 235.0f);
+        put("Reflex", 236.0f);
+        put("Study", 237.0f);
+        put("Expunger", 238.0f);
+        put("Sentinel", 239.0f);
+        put("Survivor", 240.0f);
+        put("Wild Strike", 241.0f);
+        put("Defend_G", 242.0f);
+        put("HandOfGreed", 243.0f);
+        put("Meditate", 244.0f);
+        put("Eviscerate", 245.0f);
+        put("Flash of Steel", 246.0f);
+        put("Defend_B", 247.0f);
+        put("Battle Trance", 248.0f);
+        put("Forethought", 249.0f);
+        put("Dualcast", 250.0f);
+        put("Auto Shields", 251.0f);
+        put("Perseverance", 252.0f);
+        put("Swivel", 253.0f);
+        put("Heavy Blade", 254.0f);
+        put("Slimed", 255.0f);
+        put("Clumsy", 256.0f);
+        put("Biased Cognition", 257.0f);
+        put("Searing Blow", 258.0f);
+        put("Devotion", 259.0f);
+        put("Reprogram", 260.0f);
+        put("Hologram", 261.0f);
+        put("Corpse Explosion", 262.0f);
+        put("Second Wind", 263.0f);
+        put("Enlightenment", 264.0f);
+        put("Purity", 265.0f);
+        put("Panacea", 266.0f);
+        put("Lockon", 267.0f);
+        put("Dash", 268.0f);
+        put("Worship", 269.0f);
+        put("Conclude", 270.0f);
+        put("ThroughViolence", 271.0f);
+        put("Transmutation", 272.0f);
+        put("Ghostly", 273.0f);
+        put("Backstab", 274.0f);
+        put("Chrysalis", 275.0f);
+        put("FollowUp", 276.0f);
+        put("Void", 277.0f);
+        put("Scrape", 278.0f);
+        put("Feed", 279.0f);
+        put("Vigilance", 280.0f);
+        put("Rupture", 281.0f);
+        put("Venomology", 282.0f);
+        put("Discovery", 283.0f);
+        put("Beam Cell", 284.0f);
+        put("Leap", 285.0f);
+        put("CurseOfTheBell", 286.0f);
+        put("Bouncing Flask", 287.0f);
+        put("PathToVictory", 288.0f);
+        put("Bludgeon", 289.0f);
+        put("Finesse", 290.0f);
+        put("Slice", 291.0f);
+        put("Recycle", 292.0f);
+        put("Backflip", 293.0f);
+        put("Outmaneuver", 294.0f);
+        put("Bloodletting", 295.0f);
+        put("Brilliance", 296.0f);
+        put("Magnetism", 297.0f);
+        put("Concentrate", 298.0f);
+        put("Skim", 299.0f);
+        put("White Noise", 300.0f);
+        put("Capacitor", 301.0f);
+        put("Cold Snap", 302.0f);
+        put("CrushJoints", 303.0f);
+        put("Master of Strategy", 304.0f);
+        put("Flechettes", 305.0f);
+        put("Tantrum", 306.0f);
+        put("Perfected Strike", 307.0f);
+        put("Strike_B", 308.0f);
+        put("Thunder Strike", 309.0f);
+        put("Carnage", 310.0f);
+        put("Masterful Stab", 311.0f);
+        put("Nirvana", 312.0f);
+        put("Evaluate", 313.0f);
+        put("Prepared", 314.0f);
+        put("Good Instincts", 315.0f);
+        put("Dropkick", 316.0f);
+        put("Swift Strike", 317.0f);
+        put("Normality", 318.0f);
+        put("Strike_G", 319.0f);
+        put("MasterReality", 320.0f);
+        put("Omega", 321.0f);
+        put("Hyperbeam", 322.0f);
+        put("Accuracy", 323.0f);
+        put("Sword Boomerang", 324.0f);
+        put("EmptyMind", 325.0f);
+        put("Pride", 326.0f);
+        put("Defragment", 327.0f);
+        put("Jack Of All Trades", 328.0f);
+        put("Demon Form", 329.0f);
+        put("Fire Breathing", 330.0f);
+        put("Ghostly Armor", 331.0f);
+        put("Weave", 332.0f);
+        put("Safety", 333.0f);
+        put("Metamorphosis", 334.0f);
+        put("Prostrate", 335.0f);
+        put("SignatureMove", 336.0f);
+        put("Uppercut", 337.0f);
+        put("PiercingWail", 338.0f);
+        put("Mind Blast", 339.0f);
+        put("Neutralize", 340.0f);
+        put("Multi-Cast", 341.0f);
+        put("Shame", 342.0f);
+        put("Doom and Gloom", 343.0f);
+        put("Evolve", 344.0f);
+        put("Double Tap", 345.0f);
+        put("Sucker Punch", 346.0f);
+        put("Burn", 347.0f);
+        put("ConjureBlade", 348.0f);
+        put("Strike_R", 349.0f);
+        put("Judgement", 350.0f);
+        put("Footwork", 351.0f);
+        put("Strike_P", 352.0f);
+        put("Steam", 353.0f);
+        put("Distraction", 354.0f);
+        put("Dodge and Roll", 355.0f);
+        put("Thinking Ahead", 356.0f);
+        put("EmptyFist", 357.0f);
+        put("All Out Attack", 358.0f);
+        put("Flying Knee", 359.0f);
+        put("Predator", 360.0f);
+        put("Pray", 361.0f);
+        put("Madness", 362.0f);
+    }};
+
+    HashMap<String, Float> relic_to_float  = new HashMap<String, Float>() {{
+        put("Spirit Poop", 0.0f);
+        put("Ginger", 1.0f);
+        put("Whetstone", 2.0f);
+        put("Bottled Tornado", 3.0f);
+        put("Boot", 4.0f);
+        put("Sling", 5.0f);
+        put("Old Coin", 6.0f);
+        put("Blood Vial", 7.0f);
+        put("Sundial", 8.0f);
+        put("MealTicket", 9.0f);
+        put("Fusion Hammer", 10.0f);
+        put("HandDrill", 11.0f);
+        put("Necronomicon", 12.0f);
+        put("Kunai", 13.0f);
+        put("Pear", 14.0f);
+        put("Blue Candle", 15.0f);
+        put("Velvet Choker", 16.0f);
+        put("Eternal Feather", 17.0f);
+        put("Pen Nib", 18.0f);
+        put("Akabeko", 19.0f);
+        put("Runic Dome", 20.0f);
+        put("SlaversCollar", 21.0f);
+        put("Bird Faced Urn", 22.0f);
+        put("MutagenicStrength", 23.0f);
+        put("Snecko Eye", 24.0f);
+        put("Pandora's Box", 25.0f);
+        put("CultistMask", 26.0f);
+        put("StrikeDummy", 27.0f);
+        put("Unceasing Top", 28.0f);
+        put("Lantern", 29.0f);
+        put("Regal Pillow", 30.0f);
+        put("Singing Bowl", 31.0f);
+        put("Torii", 32.0f);
+        put("GremlinMask", 33.0f);
+        put("StoneCalendar", 34.0f);
+        put("Bag of Preparation", 35.0f);
+        put("Ancient Tea Set", 36.0f);
+        put("Cursed Key", 37.0f);
+        put("Smiling Mask", 38.0f);
+        put("Matryoshka", 39.0f);
+        put("Shovel", 40.0f);
+        put("Toolbox", 41.0f);
+        put("WingedGreaves", 42.0f);
+        put("Chemical X", 43.0f);
+        put("InkBottle", 44.0f);
+        put("Potion Belt", 45.0f);
+        put("Lee's Waffle", 46.0f);
+        put("NeowsBlessing", 47.0f);
+        put("Golden Idol", 48.0f);
+        put("Thread and Needle", 49.0f);
+        put("The Courier", 50.0f);
+        put("PreservedInsect", 51.0f);
+        put("Omamori", 52.0f);
+        put("Frozen Egg 2", 53.0f);
+        put("MawBank", 54.0f);
+        put("Busted Crown", 55.0f);
+        put("Ornamental Fan", 56.0f);
+        put("Bloody Idol", 57.0f);
+        put("Orrery", 58.0f);
+        put("Ectoplasm", 59.0f);
+        put("Turnip", 60.0f);
+        put("Art of War", 61.0f);
+        put("Bottled Lightning", 62.0f);
+        put("Toy Ornithopter", 63.0f);
+        put("Ice Cream", 64.0f);
+        put("Mark of the Bloom", 65.0f);
+        put("Calipers", 66.0f);
+        put("Tiny House", 67.0f);
+        put("Gremlin Horn", 68.0f);
+        put("Nilry's Codex", 69.0f);
+        put("CeramicFish", 70.0f);
+        put("Vajra", 71.0f);
+        put("Sozu", 72.0f);
+        put("Centennial Puzzle", 73.0f);
+        put("Lizard Tail", 74.0f);
+        put("HornCleat", 75.0f);
+        put("FaceOfCleric", 76.0f);
+        put("DollysMirror", 77.0f);
+        put("Strawberry", 78.0f);
+        put("Philosopher's Stone", 79.0f);
+        put("Prayer Wheel", 80.0f);
+        put("Toxic Egg 2", 81.0f);
+        put("Girya", 82.0f);
+        put("Happy Flower", 83.0f);
+        put("Astrolabe", 84.0f);
+        put("Dead Branch", 85.0f);
+        put("Oddly Smooth Stone", 86.0f);
+        put("Letter Opener", 87.0f);
+        put("War Paint", 88.0f);
+        put("Question Card", 89.0f);
+        put("WarpedTongs", 90.0f);
+        put("Du-Vu Doll", 91.0f);
+        put("OrangePellets", 92.0f);
+        put("Bottled Flame", 93.0f);
+        put("Shuriken", 94.0f);
+        put("Bronze Scales", 95.0f);
+        put("Molten Egg 2", 96.0f);
+        put("Black Star", 97.0f);
+        put("Nloth's Gift", 98.0f);
+        put("Meat on the Bone", 99.0f);
+        put("NlothsMask", 100.0f);
+        put("Pocketwatch", 101.0f);
+        put("Darkstone Periapt", 102.0f);
+        put("SacredBark", 103.0f);
+        put("Enchiridion", 104.0f);
+        put("Mango", 105.0f);
+        put("Incense Burner", 106.0f);
+        put("Juzu Bracelet", 107.0f);
+        put("Empty Cage", 108.0f);
+        put("PrismaticShard", 109.0f);
+        put("ClockworkSouvenir", 110.0f);
+        put("Frozen Eye", 111.0f);
+        put("SsserpentHead", 112.0f);
+        put("Dream Catcher", 113.0f);
+        put("Nunchaku", 114.0f);
+        put("TheAbacus", 115.0f);
+        put("Mummified Hand", 116.0f);
+        put("Gambling Chip", 117.0f);
+        put("Pantograph", 118.0f);
+        put("Tiny Chest", 119.0f);
+        put("Red Mask", 120.0f);
+        put("Runic Pyramid", 121.0f);
+        put("Odd Mushroom", 122.0f);
+        put("Orichalcum", 123.0f);
+        put("Medical Kit", 124.0f);
+        put("White Beast Statue", 125.0f);
+        put("Mercury Hourglass", 126.0f);
+        put("Calling Bell", 127.0f);
+        put("Peace Pipe", 128.0f);
+        put("Cauldron", 129.0f);
+        put("Strange Spoon", 130.0f);
+        put("Anchor", 131.0f);
+        put("CaptainsWheel", 132.0f);
+        put("Bag of Marbles", 133.0f);
+        put("Coffee Dripper", 134.0f);
+        put("Membership Card", 135.0f);
+        put("FossilizedHelix", 136.0f);
+        put("TungstenRod", 137.0f);
+        put("Brimstone", 138.0f);
+        put("Self Forming Clay", 139.0f);
+        put("Black Blood", 140.0f);
+        put("Magic Flower", 141.0f);
+        put("Charon's Ashes", 142.0f);
+        put("Mark of Pain", 143.0f);
+        put("Champion Belt", 144.0f);
+        put("Burning Blood", 145.0f);
+        put("Red Skull", 146.0f);
+        put("Paper Frog", 147.0f);
+        put("Runic Cube", 148.0f);
+        put("TwistedFunnel", 149.0f);
+        put("Tough Bandages", 150.0f);
+        put("The Specimen", 151.0f);
+        put("WristBlade", 152.0f);
+        put("Ninja Scroll", 153.0f);
+        put("HoveringKite", 154.0f);
+        put("Tingsha", 155.0f);
+        put("Snake Skull", 156.0f);
+        put("Paper Crane", 157.0f);
+        put("Ring of the Serpent", 158.0f);
+        put("Ring of the Snake", 159.0f);
+        put("DataDisk", 160.0f);
+        put("Emotion Chip", 161.0f);
+        put("Inserter", 162.0f);
+        put("Runic Capacitor", 163.0f);
+        put("Cracked Core", 164.0f);
+        put("Symbiotic Virus", 165.0f);
+        put("FrozenCore", 166.0f);
+        put("Cables", 167.0f);
+        put("Nuclear Battery", 168.0f);
+        put("Damaru", 169.0f);
+        put("HolyWater", 170.0f);
+        put("Melange", 171.0f);
+        put("Yang", 172.0f);
+        put("VioletLotus", 173.0f);
+        put("CloakClasp", 174.0f);
+        put("TeardropLocket", 175.0f);
+        put("PureWater", 176.0f);
+        put("GoldenEye", 177.0f);
+    }};
+}
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/DesktopLauncher$ApiObj.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/DesktopLauncher$ApiObj.class
new file mode 100644
index 0000000..021c9b3
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/DesktopLauncher$ApiObj.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/DesktopLauncher.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/DesktopLauncher.class
new file mode 100644
index 0000000..8bb2e12
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/DesktopLauncher.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/desktop/DesktopLauncher.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/DesktopLauncher.java
index 5069aff..e9d1105 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/desktop/DesktopLauncher.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/desktop/DesktopLauncher.java
@@ -20,7 +20,38 @@ import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public class DesktopLauncher {
-    private static final Logger logger;
+    public static final Logger logger;
+    public static boolean monstersOnly = true;
+    public static boolean magic1 = false;
+
+    public static void showMap() {
+        //CardCrawlGame.dungeon.screen = AbstractDungeon.CurrentScreen.MAP;
+    }
+
+    public static void waitScreenChange() {
+        String oldScreen = CardCrawlGame.dungeon.screen.name();
+        while (oldScreen == CardCrawlGame.dungeon.screen.name()) {
+            logger.info("waiting screen change..");
+            try{ Thread.sleep(3);} catch(InterruptedException e){}
+        }
+    }
+
+    public static void main_silent() {
+        LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
+        config.setDisplayModeCallback = new STSDisplayModeCallback();
+        config.addIcon("images/ui/icon.png", Files.FileType.Internal);
+        config.resizable = false;
+        config.title = "Slay the Spire";
+        DesktopLauncher.loadSettings(config);
+        Gdx.audio = null;
+        config.disableAudio = true;
+        new LwjglApplication((ApplicationListener)new CardCrawlGame(config.preferencesDirectory), config);
+    }
+
+    public static void main() {
+        String[] args = {""};
+        DesktopLauncher.main(args);
+    }
 
     public static void main(String[] arg) {
         logger.info("time: " + System.currentTimeMillis());
@@ -38,11 +69,14 @@ public class DesktopLauncher {
         STSSentry.setup();
         try {
             LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
+            Gdx.audio = null;
+            config.disableAudio = true;
             config.setDisplayModeCallback = new STSDisplayModeCallback();
             config.addIcon("images/ui/icon.png", Files.FileType.Internal);
             config.resizable = false;
             config.title = "Slay the Spire";
             DesktopLauncher.loadSettings(config);
+
             logger.info("Launching application...");
             new LwjglApplication((ApplicationListener)new CardCrawlGame(config.preferencesDirectory), config);
         }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/AbstractDungeon$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/AbstractDungeon$1.class
new file mode 100644
index 0000000..3f2feff
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/AbstractDungeon$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/AbstractDungeon$CurrentScreen.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/AbstractDungeon$CurrentScreen.class
new file mode 100644
index 0000000..c61e18e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/AbstractDungeon$CurrentScreen.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/AbstractDungeon$RenderScene.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/AbstractDungeon$RenderScene.class
new file mode 100644
index 0000000..f3baf3e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/AbstractDungeon$RenderScene.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/AbstractDungeon.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/AbstractDungeon.class
new file mode 100644
index 0000000..42566a2
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/AbstractDungeon.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/Exordium.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/Exordium.class
new file mode 100644
index 0000000..992d84f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/Exordium.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/dungeons/Exordium.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/Exordium.java
index f8c44a3..cef454c 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/dungeons/Exordium.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/dungeons/Exordium.java
@@ -22,6 +22,7 @@ import com.megacrit.cardcrawl.scenes.TheBottomScene;
 import com.megacrit.cardcrawl.unlock.UnlockTracker;
 import java.util.ArrayList;
 import java.util.Collections;
+import com.megacrit.cardcrawl.desktop.DesktopLauncher;
 
 public class Exordium
 extends AbstractDungeon {
@@ -54,9 +55,11 @@ extends AbstractDungeon {
         Exordium.generateMap();
         CardCrawlGame.music.changeBGM(id);
         AbstractDungeon.currMapNode = new MapRoomNode(0, -1);
-        if (Settings.isShowBuild || !TipTracker.tips.get("NEOW_SKIP").booleanValue()) {
+        if (Settings.isShowBuild || !TipTracker.tips.get("NEOW_SKIP").booleanValue() || DesktopLauncher.monstersOnly) {
+            logger.info("no neo");
             AbstractDungeon.currMapNode.room = new EmptyRoom();
         } else {
+            logger.info("neo");
             AbstractDungeon.currMapNode.room = new NeowRoom(false);
             if (AbstractDungeon.floorNum > 1) {
                 SaveHelper.saveIfAppropriate(SaveFile.SaveType.ENDLESS_NEOW);
@@ -102,13 +105,32 @@ extends AbstractDungeon {
         rareRelicChance = 17;
         colorlessRareChance = 0.3f;
         cardUpgradedChance = 0.0f;
+        if (DesktopLauncher.monstersOnly == true) {
+            shopRoomChance = 0.00f;
+            restRoomChance = 0.0f;
+            treasureRoomChance = 0.0f;
+            eventRoomChance = 0.0f;
+            eliteRoomChance = 0.0f;
+            smallChestChance = 0;
+            mediumChestChance = 0;
+            largeChestChance = 0;
+            commonRelicChance = 0;
+            uncommonRelicChance =0;
+            rareRelicChance = 0;
+            colorlessRareChance = 0.0f;
+            cardUpgradedChance = 0.0f;
+        }
     }
 
     @Override
     protected void generateMonsters() {
-        this.generateWeakEnemies(3);
-        this.generateStrongEnemies(12);
-        this.generateElites(10);
+        if (DesktopLauncher.monstersOnly == true) {
+            this.generateWeakEnemies(25);
+        } else {
+            this.generateWeakEnemies(3);
+            this.generateStrongEnemies(12);
+            this.generateElites(10);
+        }
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/events/AbstractEvent$EventType.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/events/AbstractEvent$EventType.class
new file mode 100644
index 0000000..ceca0d3
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/events/AbstractEvent$EventType.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/events/AbstractEvent.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/events/AbstractEvent.class
new file mode 100644
index 0000000..d8025c1
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/events/AbstractEvent.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/events/AbstractEvent.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/events/AbstractEvent.java
index e0f72e2..fc243c4 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/events/AbstractEvent.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/events/AbstractEvent.java
@@ -77,7 +77,7 @@ implements Disposable {
         this.roomEventText.clear();
         AbstractDungeon.getCurrRoom().phase = AbstractRoom.RoomPhase.COMBAT;
         AbstractDungeon.getCurrRoom().monsters.init();
-        AbstractRoom.waitTimer = 0.1f;
+        AbstractRoom.waitTimer = 0.01f;
         AbstractDungeon.player.preBattlePrep();
         this.hasFocus = false;
         this.roomEventText.hide();
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/events/AbstractImageEvent.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/events/AbstractImageEvent.class
new file mode 100644
index 0000000..8292a1c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/events/AbstractImageEvent.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/events/AbstractImageEvent.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/events/AbstractImageEvent.java
index 38513c5..b78edbb 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/events/AbstractImageEvent.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/events/AbstractImageEvent.java
@@ -73,7 +73,7 @@ extends AbstractEvent {
         AbstractDungeon.player.isEscaping = false;
         AbstractDungeon.getCurrRoom().phase = AbstractRoom.RoomPhase.COMBAT;
         AbstractDungeon.getCurrRoom().monsters.init();
-        AbstractRoom.waitTimer = 0.1f;
+        AbstractRoom.waitTimer = 0.01f;
         AbstractDungeon.player.preBattlePrep();
         this.hasFocus = false;
         GenericEventDialog.hide();
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/CardLibrary$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/CardLibrary$1.class
new file mode 100644
index 0000000..a0caa35
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/CardLibrary$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/CardLibrary$LibraryType.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/CardLibrary$LibraryType.class
new file mode 100644
index 0000000..7aa9194
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/CardLibrary$LibraryType.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/CardLibrary.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/CardLibrary.class
new file mode 100644
index 0000000..f3348bf
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/CardLibrary.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/helpers/CardLibrary.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/CardLibrary.java
index 1d6299d..fa0e1b7 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/helpers/CardLibrary.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/CardLibrary.java
@@ -450,7 +450,7 @@ public class CardLibrary {
 
     private static void addRedCards() {
         CardLibrary.add(new Anger());
-        CardLibrary.add(new Armaments());
+        //CardLibrary.add(new Armaments());
         CardLibrary.add(new Barricade());
         CardLibrary.add(new Bash());
         CardLibrary.add(new BattleTrance());
@@ -460,7 +460,7 @@ public class CardLibrary {
         CardLibrary.add(new Bludgeon());
         CardLibrary.add(new BodySlam());
         CardLibrary.add(new Brutality());
-        CardLibrary.add(new BurningPact());
+        //CardLibrary.add(new BurningPact());
         CardLibrary.add(new Carnage());
         CardLibrary.add(new Clash());
         CardLibrary.add(new Cleave());
@@ -476,7 +476,7 @@ public class CardLibrary {
         CardLibrary.add(new DualWield());
         CardLibrary.add(new Entrench());
         CardLibrary.add(new Evolve());
-        CardLibrary.add(new Exhume());
+        //CardLibrary.add(new Exhume());
         CardLibrary.add(new Feed());
         CardLibrary.add(new FeelNoPain());
         CardLibrary.add(new FiendFire());
@@ -485,12 +485,12 @@ public class CardLibrary {
         CardLibrary.add(new Flex());
         CardLibrary.add(new GhostlyArmor());
         CardLibrary.add(new Havoc());
-        CardLibrary.add(new Headbutt());
+        //CardLibrary.add(new Headbutt());
         CardLibrary.add(new HeavyBlade());
         CardLibrary.add(new Hemokinesis());
         CardLibrary.add(new Immolate());
         CardLibrary.add(new Impervious());
-        CardLibrary.add(new InfernalBlade());
+        //CardLibrary.add(new InfernalBlade());
         CardLibrary.add(new Inflame());
         CardLibrary.add(new Intimidate());
         CardLibrary.add(new IronWave());
@@ -518,10 +518,10 @@ public class CardLibrary {
         CardLibrary.add(new Strike_Red());
         CardLibrary.add(new SwordBoomerang());
         CardLibrary.add(new ThunderClap());
-        CardLibrary.add(new TrueGrit());
+        //CardLibrary.add(new TrueGrit());
         CardLibrary.add(new TwinStrike());
         CardLibrary.add(new Uppercut());
-        CardLibrary.add(new Warcry());
+        //CardLibrary.add(new Warcry());
         CardLibrary.add(new Whirlwind());
         CardLibrary.add(new WildStrike());
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/PotionHelper$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/PotionHelper$1.class
new file mode 100644
index 0000000..7e45195
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/PotionHelper$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/PotionHelper.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/PotionHelper.class
new file mode 100644
index 0000000..04cf70d
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/PotionHelper.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/helpers/PotionHelper.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/PotionHelper.java
index 41977e2..aea5d7e 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/helpers/PotionHelper.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/PotionHelper.java
@@ -82,7 +82,7 @@ public class PotionHelper {
             switch (c) {
                 case IRONCLAD: {
                     retVal.add("BloodPotion");
-                    retVal.add("ElixirPotion");
+                    //retVal.add("ElixirPotion");
                     retVal.add("HeartOfIron");
                     break;
                 }
@@ -107,7 +107,7 @@ public class PotionHelper {
             }
         } else {
             retVal.add("BloodPotion");
-            retVal.add("ElixirPotion");
+            //retVal.add("ElixirPotion");
             retVal.add("HeartOfIron");
             retVal.add("Poison Potion");
             retVal.add("CunningPotion");
@@ -128,26 +128,26 @@ public class PotionHelper {
         retVal.add("Swift Potion");
         retVal.add("Weak Potion");
         retVal.add("FearPotion");
-        retVal.add("AttackPotion");
-        retVal.add("SkillPotion");
-        retVal.add("PowerPotion");
-        retVal.add("ColorlessPotion");
+        //retVal.add("AttackPotion");
+        //retVal.add("SkillPotion");
+        //retVal.add("PowerPotion");
+        //retVal.add("ColorlessPotion");
         retVal.add("SteroidPotion");
         retVal.add("SpeedPotion");
         retVal.add("BlessingOfTheForge");
         retVal.add("Regen Potion");
         retVal.add("Ancient Potion");
         retVal.add("LiquidBronze");
-        retVal.add("GamblersBrew");
+        //retVal.add("GamblersBrew");
         retVal.add("EssenceOfSteel");
         retVal.add("DuplicationPotion");
         retVal.add("DistilledChaos");
-        retVal.add("LiquidMemories");
+        //retVal.add("LiquidMemories");
         retVal.add("CultistPotion");
         retVal.add("Fruit Juice");
-        retVal.add("SneckoOil");
+        //retVal.add("SneckoOil");
         retVal.add("FairyPotion");
-        retVal.add("SmokeBomb");
+        //retVal.add("SmokeBomb");
         retVal.add("EntropicBrew");
         return retVal;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/RelicLibrary$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/RelicLibrary$1.class
new file mode 100644
index 0000000..25722a6
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/RelicLibrary$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/RelicLibrary.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/RelicLibrary.class
new file mode 100644
index 0000000..15f1aba
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/RelicLibrary.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/helpers/RelicLibrary.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/RelicLibrary.java
index 56ba6ac..c8369b8 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/helpers/RelicLibrary.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/RelicLibrary.java
@@ -200,11 +200,11 @@ public class RelicLibrary {
     private static final Logger logger = LogManager.getLogger(RelicLibrary.class.getName());
     public static int totalRelicCount = 0;
     public static int seenRelics = 0;
-    private static HashMap<String, AbstractRelic> sharedRelics = new HashMap();
-    private static HashMap<String, AbstractRelic> redRelics = new HashMap();
-    private static HashMap<String, AbstractRelic> greenRelics = new HashMap();
-    private static HashMap<String, AbstractRelic> blueRelics = new HashMap();
-    private static HashMap<String, AbstractRelic> purpleRelics = new HashMap();
+    public static HashMap<String, AbstractRelic> sharedRelics = new HashMap();
+    public static HashMap<String, AbstractRelic> redRelics = new HashMap();
+    public static HashMap<String, AbstractRelic> greenRelics = new HashMap();
+    public static HashMap<String, AbstractRelic> blueRelics = new HashMap();
+    public static HashMap<String, AbstractRelic> purpleRelics = new HashMap();
     public static ArrayList<AbstractRelic> starterList = new ArrayList();
     public static ArrayList<AbstractRelic> commonList = new ArrayList();
     public static ArrayList<AbstractRelic> uncommonList = new ArrayList();
@@ -222,51 +222,51 @@ public class RelicLibrary {
         RelicLibrary.add(new Abacus());
         RelicLibrary.add(new Akabeko());
         RelicLibrary.add(new Anchor());
-        RelicLibrary.add(new AncientTeaSet());
+        //RelicLibrary.add(new AncientTeaSet());
         RelicLibrary.add(new ArtOfWar());
-        RelicLibrary.add(new Astrolabe());
+        //RelicLibrary.add(new Astrolabe());
         RelicLibrary.add(new BagOfMarbles());
         RelicLibrary.add(new BagOfPreparation());
         RelicLibrary.add(new BirdFacedUrn());
-        RelicLibrary.add(new BlackStar());
+        //RelicLibrary.add(new BlackStar());
         RelicLibrary.add(new BloodVial());
         RelicLibrary.add(new BloodyIdol());
-        RelicLibrary.add(new BlueCandle());
+        //RelicLibrary.add(new BlueCandle());
         RelicLibrary.add(new Boot());
-        RelicLibrary.add(new BottledFlame());
-        RelicLibrary.add(new BottledLightning());
-        RelicLibrary.add(new BottledTornado());
+        //RelicLibrary.add(new BottledFlame());
+        //RelicLibrary.add(new BottledLightning());
+        //RelicLibrary.add(new BottledTornado());
         RelicLibrary.add(new BronzeScales());
-        RelicLibrary.add(new BustedCrown());
+        //RelicLibrary.add(new BustedCrown());
         RelicLibrary.add(new Calipers());
-        RelicLibrary.add(new CallingBell());
+        //RelicLibrary.add(new CallingBell());
         RelicLibrary.add(new CaptainsWheel());
         RelicLibrary.add(new Cauldron());
         RelicLibrary.add(new CentennialPuzzle());
-        RelicLibrary.add(new CeramicFish());
+        //RelicLibrary.add(new CeramicFish());
         RelicLibrary.add(new ChemicalX());
         RelicLibrary.add(new ClockworkSouvenir());
-        RelicLibrary.add(new CoffeeDripper());
-        RelicLibrary.add(new Courier());
+        //RelicLibrary.add(new CoffeeDripper());
+        //RelicLibrary.add(new Courier());
         RelicLibrary.add(new CultistMask());
-        RelicLibrary.add(new CursedKey());
-        RelicLibrary.add(new DarkstonePeriapt());
-        RelicLibrary.add(new DeadBranch());
-        RelicLibrary.add(new DollysMirror());
-        RelicLibrary.add(new DreamCatcher());
+        //RelicLibrary.add(new CursedKey());
+        //RelicLibrary.add(new DarkstonePeriapt());
+        //RelicLibrary.add(new DeadBranch());
+        //RelicLibrary.add(new DollysMirror());
+        //RelicLibrary.add(new DreamCatcher());
         RelicLibrary.add(new DuVuDoll());
-        RelicLibrary.add(new Ectoplasm());
-        RelicLibrary.add(new EmptyCage());
+        //RelicLibrary.add(new Ectoplasm());
+        //RelicLibrary.add(new EmptyCage());
         RelicLibrary.add(new Enchiridion());
-        RelicLibrary.add(new EternalFeather());
+        //RelicLibrary.add(new EternalFeather());
         RelicLibrary.add(new FaceOfCleric());
         RelicLibrary.add(new FossilizedHelix());
-        RelicLibrary.add(new FrozenEgg2());
-        RelicLibrary.add(new FrozenEye());
-        RelicLibrary.add(new FusionHammer());
-        RelicLibrary.add(new GamblingChip());
+        //RelicLibrary.add(new FrozenEgg2());
+        //RelicLibrary.add(new FrozenEye());
+        //RelicLibrary.add(new FusionHammer());
+        //RelicLibrary.add(new GamblingChip());
         RelicLibrary.add(new Ginger());
-        RelicLibrary.add(new Girya());
+        //RelicLibrary.add(new Girya());
         RelicLibrary.add(new GoldenIdol());
         RelicLibrary.add(new GremlinHorn());
         RelicLibrary.add(new GremlinMask());
@@ -276,87 +276,87 @@ public class RelicLibrary {
         RelicLibrary.add(new IceCream());
         RelicLibrary.add(new IncenseBurner());
         RelicLibrary.add(new InkBottle());
-        RelicLibrary.add(new JuzuBracelet());
+        //RelicLibrary.add(new JuzuBracelet());
         RelicLibrary.add(new Kunai());
         RelicLibrary.add(new Lantern());
         RelicLibrary.add(new LetterOpener());
         RelicLibrary.add(new LizardTail());
         RelicLibrary.add(new Mango());
-        RelicLibrary.add(new MarkOfTheBloom());
-        RelicLibrary.add(new Matryoshka());
-        RelicLibrary.add(new MawBank());
-        RelicLibrary.add(new MealTicket());
+        //RelicLibrary.add(new MarkOfTheBloom());
+        //RelicLibrary.add(new Matryoshka());
+        //RelicLibrary.add(new MawBank());
+        //RelicLibrary.add(new MealTicket());
         RelicLibrary.add(new MeatOnTheBone());
-        RelicLibrary.add(new MedicalKit());
-        RelicLibrary.add(new MembershipCard());
+        //RelicLibrary.add(new MedicalKit());
+        //RelicLibrary.add(new MembershipCard());
         RelicLibrary.add(new MercuryHourglass());
-        RelicLibrary.add(new MoltenEgg2());
+        //RelicLibrary.add(new MoltenEgg2());
         RelicLibrary.add(new MummifiedHand());
         RelicLibrary.add(new MutagenicStrength());
-        RelicLibrary.add(new Necronomicon());
+        //RelicLibrary.add(new Necronomicon());
         RelicLibrary.add(new NeowsLament());
-        RelicLibrary.add(new NilrysCodex());
-        RelicLibrary.add(new NlothsGift());
-        RelicLibrary.add(new NlothsMask());
+        //RelicLibrary.add(new NilrysCodex());
+        //RelicLibrary.add(new NlothsGift());
+        //RelicLibrary.add(new NlothsMask());
         RelicLibrary.add(new Nunchaku());
         RelicLibrary.add(new OddlySmoothStone());
         RelicLibrary.add(new OddMushroom());
         RelicLibrary.add(new OldCoin());
-        RelicLibrary.add(new Omamori());
+        //RelicLibrary.add(new Omamori());
         RelicLibrary.add(new OrangePellets());
         RelicLibrary.add(new Orichalcum());
         RelicLibrary.add(new OrnamentalFan());
-        RelicLibrary.add(new Orrery());
-        RelicLibrary.add(new PandorasBox());
-        RelicLibrary.add(new Pantograph());
-        RelicLibrary.add(new PeacePipe());
+        //RelicLibrary.add(new Orrery());
+        //RelicLibrary.add(new PandorasBox());
+        //RelicLibrary.add(new Pantograph());
+        //RelicLibrary.add(new PeacePipe());
         RelicLibrary.add(new Pear());
         RelicLibrary.add(new PenNib());
         RelicLibrary.add(new PhilosopherStone());
         RelicLibrary.add(new Pocketwatch());
-        RelicLibrary.add(new PotionBelt());
-        RelicLibrary.add(new PrayerWheel());
-        RelicLibrary.add(new PreservedInsect());
-        RelicLibrary.add(new PrismaticShard());
-        RelicLibrary.add(new QuestionCard());
+        //RelicLibrary.add(new PotionBelt());
+        //RelicLibrary.add(new PrayerWheel());
+        //RelicLibrary.add(new PreservedInsect());
+        //RelicLibrary.add(new PrismaticShard());
+        //RelicLibrary.add(new QuestionCard());
         RelicLibrary.add(new RedMask());
-        RelicLibrary.add(new RegalPillow());
-        RelicLibrary.add(new RunicDome());
+        //RelicLibrary.add(new RegalPillow());
+        //RelicLibrary.add(new RunicDome());
         RelicLibrary.add(new RunicPyramid());
         RelicLibrary.add(new SacredBark());
-        RelicLibrary.add(new Shovel());
+        //RelicLibrary.add(new Shovel());
         RelicLibrary.add(new Shuriken());
-        RelicLibrary.add(new SingingBowl());
+        //RelicLibrary.add(new SingingBowl());
         RelicLibrary.add(new SlaversCollar());
         RelicLibrary.add(new Sling());
-        RelicLibrary.add(new SmilingMask());
-        RelicLibrary.add(new SneckoEye());
-        RelicLibrary.add(new Sozu());
+        //RelicLibrary.add(new SmilingMask());
+        //RelicLibrary.add(new SneckoEye());
+        //RelicLibrary.add(new Sozu());
         RelicLibrary.add(new SpiritPoop());
-        RelicLibrary.add(new SsserpentHead());
+        //RelicLibrary.add(new SsserpentHead());
         RelicLibrary.add(new StoneCalendar());
         RelicLibrary.add(new StrangeSpoon());
         RelicLibrary.add(new Strawberry());
         RelicLibrary.add(new StrikeDummy());
         RelicLibrary.add(new Sundial());
         RelicLibrary.add(new ThreadAndNeedle());
-        RelicLibrary.add(new TinyChest());
-        RelicLibrary.add(new TinyHouse());
-        RelicLibrary.add(new Toolbox());
+        //RelicLibrary.add(new TinyChest());
+        //RelicLibrary.add(new TinyHouse());
+        //RelicLibrary.add(new Toolbox());
         RelicLibrary.add(new Torii());
-        RelicLibrary.add(new ToxicEgg2());
+        //RelicLibrary.add(new ToxicEgg2());
         RelicLibrary.add(new ToyOrnithopter());
         RelicLibrary.add(new TungstenRod());
         RelicLibrary.add(new Turnip());
         RelicLibrary.add(new UnceasingTop());
         RelicLibrary.add(new Vajra());
-        RelicLibrary.add(new VelvetChoker());
+        //RelicLibrary.add(new VelvetChoker());
         RelicLibrary.add(new Waffle());
         RelicLibrary.add(new WarPaint());
         RelicLibrary.add(new WarpedTongs());
         RelicLibrary.add(new Whetstone());
-        RelicLibrary.add(new WhiteBeast());
-        RelicLibrary.add(new WingBoots());
+        //RelicLibrary.add(new WhiteBeast());
+        //RelicLibrary.add(new WingBoots());
         RelicLibrary.addGreen(new HoveringKite());
         RelicLibrary.addGreen(new NinjaScroll());
         RelicLibrary.addGreen(new PaperCrane());
@@ -390,9 +390,9 @@ public class RelicLibrary {
         RelicLibrary.addBlue(new SymbioticVirus());
         RelicLibrary.addPurple(new CloakClasp());
         RelicLibrary.addPurple(new Damaru());
-        RelicLibrary.addPurple(new GoldenEye());
+        //RelicLibrary.addPurple(new GoldenEye());
         RelicLibrary.addPurple(new HolyWater());
-        RelicLibrary.addPurple(new Melange());
+        //RelicLibrary.addPurple(new Melange());
         RelicLibrary.addPurple(new PureWater());
         RelicLibrary.addPurple(new VioletLotus());
         RelicLibrary.addPurple(new TeardropLocket());
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/SaveHelper$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/SaveHelper$1.class
new file mode 100644
index 0000000..85d079e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/SaveHelper$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/SaveHelper.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/SaveHelper.class
new file mode 100644
index 0000000..779a32c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/SaveHelper.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/helpers/SaveHelper.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/SaveHelper.java
index 0619178..9be89da 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/helpers/SaveHelper.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/helpers/SaveHelper.java
@@ -214,8 +214,8 @@ public class SaveHelper {
                 retVal.append("STSPlayer");
                 break;
             }
-            case 1: 
-            case 2: 
+            case 1:
+            case 2:
             case 3: {
                 retVal.append(CardCrawlGame.saveSlot).append("_STSPlayer");
                 break;
@@ -228,12 +228,7 @@ public class SaveHelper {
     }
 
     public static void saveIfAppropriate(SaveFile.SaveType saveType) {
-        if (!SaveHelper.shouldSave()) {
-            return;
-        }
-        SaveFile saveFile = new SaveFile(saveType);
-        SaveAndContinue.save(saveFile);
-        AbstractDungeon.effectList.add(new GameSavedEffect());
+        return;
     }
 
     public static boolean shouldSave() {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/map/MapRoomNode.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/map/MapRoomNode.class
new file mode 100644
index 0000000..69ad550
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/map/MapRoomNode.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/map/MapRoomNode.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/map/MapRoomNode.java
index 0d8d460..95abf4f 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/map/MapRoomNode.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/map/MapRoomNode.java
@@ -24,6 +24,7 @@ import com.megacrit.cardcrawl.vfx.FlameAnimationEffect;
 import com.megacrit.cardcrawl.vfx.MapCircleEffect;
 import java.util.ArrayList;
 import java.util.Iterator;
+import com.megacrit.cardcrawl.desktop.DesktopLauncher;
 
 public class MapRoomNode {
     private static final int IMG_WIDTH = (int)(Settings.xScale * 64.0f);
@@ -53,7 +54,7 @@ public class MapRoomNode {
     private ArrayList<MapEdge> edges = new ArrayList();
     public boolean taken = false;
     public boolean highlighted = false;
-    private float animWaitTimer = 0.0f;
+    public float animWaitTimer = 0.0f;
     public boolean hasEmeraldKey = false;
     private static final float ANIM_WAIT_TIME = 0.25f;
 
@@ -168,15 +169,16 @@ public class MapRoomNode {
     public void update() {
         if (this.animWaitTimer != 0.0f) {
             this.animWaitTimer -= Gdx.graphics.getDeltaTime();
+            this.animWaitTimer = -1f;
             if (this.animWaitTimer < 0.0f) {
                 if (!AbstractDungeon.firstRoomChosen) {
                     AbstractDungeon.setCurrMapNode(this);
                 } else {
                     AbstractDungeon.getCurrMapNode().taken = true;
                 }
-                Iterator<MapEdge> connectedEdge = AbstractDungeon.getCurrMapNode().getEdgeConnectedTo(this);
+                MapEdge connectedEdge = AbstractDungeon.getCurrMapNode().getEdgeConnectedTo(this);
                 if (connectedEdge != null) {
-                    ((MapEdge)((Object)connectedEdge)).markAsTaken();
+                    connectedEdge.markAsTaken();
                 }
                 this.animWaitTimer = 0.0f;
                 AbstractDungeon.nextRoom = this;
@@ -247,12 +249,13 @@ public class MapRoomNode {
         } else {
             this.color = NOT_TAKEN_COLOR.cpy();
         }
-        if (!AbstractDungeon.firstRoomChosen && this.y == 0 && AbstractDungeon.getCurrRoom().phase == AbstractRoom.RoomPhase.COMPLETE) {
-            if (this.hb.hovered) {
+        if ((!AbstractDungeon.firstRoomChosen && this.y == 0 && AbstractDungeon.getCurrRoom().phase == AbstractRoom.RoomPhase.COMPLETE) || DesktopLauncher.magic1) {
+            if (this.hb.hovered || DesktopLauncher.magic1) {
                 if (this.hb.justHovered) {
                     this.playNodeHoveredSound();
                 }
-                if (AbstractDungeon.screen == AbstractDungeon.CurrentScreen.MAP && (CInputActionSet.select.isJustPressed() || AbstractDungeon.dungeonMapScreen.clicked)) {
+                if ((AbstractDungeon.screen == AbstractDungeon.CurrentScreen.MAP && (CInputActionSet.select.isJustPressed() || AbstractDungeon.dungeonMapScreen.clicked)) || DesktopLauncher.magic1){
+                    DesktopLauncher.magic1 = false;
                     this.playNodeSelectedSound();
                     AbstractDungeon.dungeonMapScreen.clicked = false;
                     AbstractDungeon.dungeonMapScreen.clickTimer = 0.0f;
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/monsters/AbstractMonster$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/monsters/AbstractMonster$1.class
new file mode 100644
index 0000000..010ff5c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/monsters/AbstractMonster$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/monsters/AbstractMonster$EnemyType.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/monsters/AbstractMonster$EnemyType.class
new file mode 100644
index 0000000..2b15e9e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/monsters/AbstractMonster$EnemyType.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/monsters/AbstractMonster$Intent.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/monsters/AbstractMonster$Intent.class
new file mode 100644
index 0000000..9ed92e5
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/monsters/AbstractMonster$Intent.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/monsters/AbstractMonster.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/monsters/AbstractMonster.class
new file mode 100644
index 0000000..fac2667
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/monsters/AbstractMonster.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/monsters/AbstractMonster.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/monsters/AbstractMonster.java
index 57755e5..fb142ca 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/monsters/AbstractMonster.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/monsters/AbstractMonster.java
@@ -78,15 +78,15 @@ extends AbstractCreature {
     private Color nameBgColor = new Color(0.0f, 0.0f, 0.0f, 0.0f);
     protected Texture img;
     public boolean tintFadeOutCalled = false;
-    protected HashMap<Byte, String> moveSet = new HashMap();
+    public HashMap<Byte, String> moveSet = new HashMap();
     public boolean escaped = false;
     public boolean escapeNext = false;
-    private PowerTip intentTip = new PowerTip();
+    public PowerTip intentTip = new PowerTip();
     public EnemyType type = EnemyType.NORMAL;
     private float hoverTimer = 0.0f;
     public boolean cannotEscape = false;
     public ArrayList<DamageInfo> damage = new ArrayList();
-    private EnemyMoveInfo move;
+    public EnemyMoveInfo move;
     private float intentParticleTimer = 0.0f;
     private float intentAngle = 0.0f;
     public ArrayList<Byte> moveHistory = new ArrayList();
@@ -103,10 +103,10 @@ extends AbstractCreature {
     public float intentOffsetX = 0.0f;
     private Texture intentImg = null;
     private Texture intentBg = null;
-    private int intentDmg = -1;
-    private int intentBaseDmg = -1;
-    private int intentMultiAmt = 0;
-    private boolean isMultiDmg = false;
+    public int intentDmg = -1;
+    public int intentBaseDmg = -1;
+    public int intentMultiAmt = 0;
+    public boolean isMultiDmg = false;
     private Color intentColor = Color.WHITE.cpy();
     public String moveName = null;
     protected List<Disposable> disposables = new ArrayList<Disposable>();
@@ -379,14 +379,14 @@ extends AbstractCreature {
             this.currentHealth = this.maxHealth;
         }
         if (healAmount > 0) {
-            AbstractDungeon.effectList.add(new HealEffect(this.hb.cX - this.animX, this.hb.cY, healAmount));
+            //AbstractDungeon.effectList.add(new HealEffect(this.hb.cX - this.animX, this.hb.cY, healAmount));
             this.healthBarUpdatedEvent();
         }
     }
 
     public void flashIntent() {
         if (this.intentImg != null) {
-            AbstractDungeon.effectList.add(new FlashIntentEffect(this.intentImg, this));
+            //AbstractDungeon.effectList.add(new FlashIntentEffect(this.intentImg, this));
         }
         this.intentAlphaTarget = 0.0f;
     }
@@ -663,7 +663,7 @@ extends AbstractCreature {
             }
             this.currentHealth -= damageAmount;
             if (!probablyInstantKill) {
-                AbstractDungeon.effectList.add(new StrikeEffect((AbstractCreature)this, this.hb.cX, this.hb.cY, damageAmount));
+                //AbstractDungeon.effectList.add(new StrikeEffect((AbstractCreature)this, this.hb.cX, this.hb.cY, damageAmount));
             }
             if (this.currentHealth < 0) {
                 this.currentHealth = 0;
@@ -672,25 +672,25 @@ extends AbstractCreature {
         } else if (!probablyInstantKill) {
             if (weakenedToZero && this.currentBlock == 0) {
                 if (hadBlock) {
-                    AbstractDungeon.effectList.add(new BlockedWordEffect(this, this.hb.cX, this.hb.cY, TEXT[30]));
+                    //AbstractDungeon.effectList.add(new BlockedWordEffect(this, this.hb.cX, this.hb.cY, TEXT[30]));
                 } else {
-                    AbstractDungeon.effectList.add(new StrikeEffect((AbstractCreature)this, this.hb.cX, this.hb.cY, 0));
+                    //AbstractDungeon.effectList.add(new StrikeEffect((AbstractCreature)this, this.hb.cX, this.hb.cY, 0));
                 }
             } else if (Settings.SHOW_DMG_BLOCK) {
-                AbstractDungeon.effectList.add(new BlockedWordEffect(this, this.hb.cX, this.hb.cY, TEXT[30]));
+                //AbstractDungeon.effectList.add(new BlockedWordEffect(this, this.hb.cX, this.hb.cY, TEXT[30]));
             }
         }
         if (this.currentHealth <= 0) {
             this.die();
             if (AbstractDungeon.getMonsters().areMonstersBasicallyDead()) {
                 AbstractDungeon.actionManager.cleanCardQueue();
-                AbstractDungeon.effectList.add(new DeckPoofEffect(64.0f * Settings.scale, 64.0f * Settings.scale, true));
-                AbstractDungeon.effectList.add(new DeckPoofEffect((float)Settings.WIDTH - 64.0f * Settings.scale, 64.0f * Settings.scale, false));
+                //AbstractDungeon.effectList.add(new DeckPoofEffect(64.0f * Settings.scale, 64.0f * Settings.scale, true));
+                //AbstractDungeon.effectList.add(new DeckPoofEffect((float)Settings.WIDTH - 64.0f * Settings.scale, 64.0f * Settings.scale, false));
                 AbstractDungeon.overlayMenu.hideCombatPanels();
             }
             if (this.currentBlock > 0) {
                 this.loseBlock();
-                AbstractDungeon.effectList.add(new HbBlockBrokenEffect(this.hb.cX - this.hb.width / 2.0f + BLOCK_ICON_X, this.hb.cY - this.hb.height / 2.0f + BLOCK_ICON_Y));
+                //AbstractDungeon.effectList.add(new HbBlockBrokenEffect(this.hb.cX - this.hb.width / 2.0f + BLOCK_ICON_X, this.hb.cY - this.hb.height / 2.0f + BLOCK_ICON_Y));
             }
         }
     }
@@ -845,6 +845,7 @@ extends AbstractCreature {
     private void updateDeathAnimation() {
         if (this.isDying) {
             this.deathTimer -= Gdx.graphics.getDeltaTime();
+            this.deathTimer = -1f;
             if (this.deathTimer < 1.8f && !this.tintFadeOutCalled) {
                 this.tintFadeOutCalled = true;
                 this.tint.fadeOut();
@@ -882,6 +883,7 @@ extends AbstractCreature {
             this.flipHorizontal = true;
             this.escapeTimer -= Gdx.graphics.getDeltaTime();
             this.drawX += Gdx.graphics.getDeltaTime() * 400.0f * Settings.scale;
+            this.escapeTimer = -1f;
         }
         if (this.escapeTimer < 0.0f) {
             this.escaped = true;
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion$1.class
new file mode 100644
index 0000000..c592bdc
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion$PotionColor.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion$PotionColor.class
new file mode 100644
index 0000000..f71c73c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion$PotionColor.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion$PotionEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion$PotionEffect.class
new file mode 100644
index 0000000..0e7ec99
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion$PotionEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion$PotionRarity.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion$PotionRarity.class
new file mode 100644
index 0000000..cd2d97f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion$PotionRarity.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion$PotionSize.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion$PotionSize.class
new file mode 100644
index 0000000..c911014
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion$PotionSize.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion.class
new file mode 100644
index 0000000..af4eb1e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/potions/AbstractPotion.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion.java
index 8358d7e..bb74bea 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/potions/AbstractPotion.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/potions/AbstractPotion.java
@@ -403,7 +403,7 @@ public abstract class AbstractPotion {
     public void update() {
         if (this.isObtained) {
             this.hb.update();
-            this.updateFlash();
+            //this.updateFlash();
         }
     }
 
@@ -413,7 +413,7 @@ public abstract class AbstractPotion {
             if (this.flashTimer < 0.0f) {
                 this.flashTimer = 0.33f;
                 --this.flashCount;
-                this.effect.add(new FlashPotionEffect(this));
+                //this.effect.add(new FlashPotionEffect(this));
             }
         }
         Iterator<FlashPotionEffect> i = this.effect.iterator();
@@ -473,7 +473,7 @@ public abstract class AbstractPotion {
     }
 
     public void render(SpriteBatch sb) {
-        this.updateFlash();
+        //this.updateFlash();
         this.updateEffect();
         if (this instanceof PotionSlot) {
             sb.setColor(PLACEHOLDER_COLOR);
@@ -519,8 +519,8 @@ public abstract class AbstractPotion {
     }
 
     public void shopRender(SpriteBatch sb) {
-        this.generateSparkles(0.0f, 0.0f, false);
-        this.updateFlash();
+        //this.generateSparkles(0.0f, 0.0f, false);
+        //this.updateFlash();
         this.updateEffect();
         if (this.hb.hovered) {
             TipHelper.queuePowerTips((float)InputHelper.mX + 50.0f * Settings.scale, (float)InputHelper.mY + 50.0f * Settings.scale, this.tips);
@@ -550,7 +550,7 @@ public abstract class AbstractPotion {
     }
 
     public void labRender(SpriteBatch sb) {
-        this.updateFlash();
+        //this.updateFlash();
         this.updateEffect();
         if (this.hb.hovered) {
             TipHelper.queuePowerTips(150.0f * Settings.scale, 800.0f * Settings.scale, this.tips);
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rewards/RewardItem$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rewards/RewardItem$1.class
new file mode 100644
index 0000000..0be1d9e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rewards/RewardItem$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rewards/RewardItem$RewardType.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rewards/RewardItem$RewardType.class
new file mode 100644
index 0000000..b1ddd5b
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rewards/RewardItem$RewardType.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rewards/RewardItem.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rewards/RewardItem.class
new file mode 100644
index 0000000..4ceefe3
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rewards/RewardItem.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/rewards/RewardItem.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rewards/RewardItem.java
index c96f163..00998a4 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/rewards/RewardItem.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rewards/RewardItem.java
@@ -388,7 +388,7 @@ public class RewardItem {
             case POTION: {
                 this.potion.renderLightOutline(sb);
                 this.potion.render(sb);
-                this.potion.generateSparkles(this.potion.posX, this.potion.posY, true);
+                //this.potion.generateSparkles(this.potion.posX, this.potion.posY, true);
                 break;
             }
         }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom$1.class
new file mode 100644
index 0000000..18339db
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom$2.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom$2.class
new file mode 100644
index 0000000..6c0b5f1
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom$2.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom$RoomPhase.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom$RoomPhase.class
new file mode 100644
index 0000000..dd4863c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom$RoomPhase.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom$RoomType.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom$RoomType.class
new file mode 100644
index 0000000..d7add93
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom$RoomType.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom.class
new file mode 100644
index 0000000..583a04f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/rooms/AbstractRoom.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom.java
index 6627d72..e427541 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/rooms/AbstractRoom.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/AbstractRoom.java
@@ -65,6 +65,7 @@ import java.util.ArrayList;
 import java.util.Iterator;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import com.megacrit.cardcrawl.ui.panels.EnergyPanel;
 
 public abstract class AbstractRoom
 implements Disposable {
@@ -177,19 +178,19 @@ implements Disposable {
 
     public void updateObjects() {
         this.souls.update();
-        Iterator<Object> i = this.potions.iterator();
+        Iterator<AbstractPotion> i = this.potions.iterator();
         while (i.hasNext()) {
             AbstractPotion tmpPotion = i.next();
             tmpPotion.update();
             if (!tmpPotion.isObtained) continue;
             i.remove();
         }
-        i = this.relics.iterator();
-        while (i.hasNext()) {
-            AbstractRelic relic = (AbstractRelic)i.next();
+        Iterator<AbstractRelic> ii = this.relics.iterator();
+        while (ii.hasNext()) {
+            AbstractRelic relic = (AbstractRelic)ii.next();
             relic.update();
             if (!relic.isDone) continue;
-            i.remove();
+            ii.remove();
         }
     }
 
@@ -267,6 +268,7 @@ implements Disposable {
                 if (this.isBattleOver && AbstractDungeon.actionManager.actions.isEmpty()) {
                     this.skipMonsterTurn = false;
                     this.endBattleTimer -= Gdx.graphics.getDeltaTime();
+                    this.endBattleTimer = -1f;
                     if (this.endBattleTimer < 0.0f) {
                         this.phase = RoomPhase.COMPLETE;
                         if (!(AbstractDungeon.getCurrRoom() instanceof MonsterRoomBoss) || !(CardCrawlGame.dungeon instanceof TheBeyond) || Settings.isEndless) {
@@ -360,6 +362,7 @@ implements Disposable {
                     this.rewardPopOutTimer = 1.0f;
                 }
                 this.rewardPopOutTimer -= Gdx.graphics.getDeltaTime();
+                this.rewardPopOutTimer = -1f;
                 if (!(this.rewardPopOutTimer < 0.0f)) break;
                 if (this.event == null) {
                     AbstractDungeon.overlayMenu.proceedButton.show();
@@ -448,6 +451,7 @@ implements Disposable {
         AbstractDungeon.player.hand.refreshHandLayout();
         AbstractDungeon.player.resetControllerValues();
         AbstractDungeon.overlayMenu.hideCombatPanels();
+        EnergyPanel.totalCount = 0;
         if (!AbstractDungeon.player.stance.ID.equals("Neutral") && AbstractDungeon.player.stance != null) {
             AbstractDungeon.player.stance.stopIdleSfx();
         }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/CampfireUI.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/CampfireUI.class
new file mode 100644
index 0000000..391490b
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/CampfireUI.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/rooms/CampfireUI.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/CampfireUI.java
index 9782db2..d826ac9 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/rooms/CampfireUI.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/rooms/CampfireUI.java
@@ -252,7 +252,7 @@ implements ScrollBarListener {
         this.fireTimer -= Gdx.graphics.getDeltaTime();
         if (this.fireTimer < 0.0f) {
             this.fireTimer = 0.05f;
-            if (AbstractDungeon.id.equals("TheEnding")) {
+            /*if (AbstractDungeon.id.equals("TheEnding")) {
                 this.flameEffect.add(new CampfireEndingBurningEffect());
                 this.flameEffect.add(new CampfireEndingBurningEffect());
                 this.flameEffect.add(new CampfireEndingBurningEffect());
@@ -260,7 +260,7 @@ implements ScrollBarListener {
             } else {
                 this.flameEffect.add(new CampfireBurningEffect());
                 this.flameEffect.add(new CampfireBurningEffect());
-            }
+            }*/
         }
         Iterator<AbstractGameEffect> i = this.flameEffect.iterator();
         while (i.hasNext()) {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/DeathScreen.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/DeathScreen.class
new file mode 100644
index 0000000..bb4c21e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/DeathScreen.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/screens/DeathScreen.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/DeathScreen.java
index c5afd3d..dd96b88 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/screens/DeathScreen.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/DeathScreen.java
@@ -104,38 +104,17 @@ extends GameOverScreen {
             AbstractDungeon.dynamicBanner.appear(this.getDeathBannerText());
         }
         if (Settings.isStandardRun()) {
-            if (AbstractDungeon.floorNum >= 16) {
-                logger.info("Neow available");
-                CardCrawlGame.playerPref.putInteger(AbstractDungeon.player.chosenClass.name() + "_SPIRITS", 1);
-            } else {
+            //if (AbstractDungeon.floorNum >= 16) {
+            //    logger.info("Neow available");
+            //    CardCrawlGame.playerPref.putInteger(AbstractDungeon.player.chosenClass.name() + "_SPIRITS", 1);
+            //} else {
                 logger.info("No Neow for you");
                 CardCrawlGame.playerPref.putInteger(AbstractDungeon.player.chosenClass.name() + "_SPIRITS", 0);
                 AbstractDungeon.bossCount = 0;
-            }
+            //}
         }
         CardCrawlGame.music.dispose();
-        CardCrawlGame.sound.play("DEATH_STINGER", true);
-        String bgmKey = null;
-        switch (MathUtils.random(0, 3)) {
-            case 0: {
-                bgmKey = "STS_DeathStinger_1_v3_MUSIC.ogg";
-                break;
-            }
-            case 1: {
-                bgmKey = "STS_DeathStinger_2_v3_MUSIC.ogg";
-                break;
-            }
-            case 2: {
-                bgmKey = "STS_DeathStinger_3_v3_MUSIC.ogg";
-                break;
-            }
-            case 3: {
-                bgmKey = "STS_DeathStinger_4_v3_MUSIC.ogg";
-                break;
-            }
-        }
-        CardCrawlGame.music.playTempBgmInstantly(bgmKey, false);
-        if (isVictory) {
+        /*if (isVictory) {
             UnlockTracker.unlockAchievement(AbstractDungeon.player.getAchievementKey());
             this.submitVictoryMetrics();
             if (this.playtime != 0L) {
@@ -153,28 +132,28 @@ extends GameOverScreen {
             }
             this.submitDefeatMetrics(m);
             StatsScreen.incrementDeath(AbstractDungeon.player.getCharStat());
-        }
-        if (Settings.isStandardRun() && AbstractDungeon.actNum > 3) {
-            StatsScreen.incrementVictoryIfZero(AbstractDungeon.player.getCharStat());
-        }
+        }*/
+        //if (Settings.isStandardRun() && AbstractDungeon.actNum > 3) {
+        //    StatsScreen.incrementVictoryIfZero(AbstractDungeon.player.getCharStat());
+        //}
         this.defeatTextColor.a = 0.0f;
         this.deathTextColor.a = 0.0f;
-        if (this.playtime != 0L) {
-            StatsScreen.incrementPlayTime(this.playtime);
-        }
-        if (Settings.isStandardRun()) {
-            StatsScreen.updateFurthestAscent(AbstractDungeon.floorNum);
-        } else if (Settings.isDailyRun) {
-            StatsScreen.updateHighestDailyScore(AbstractDungeon.floorNum);
-        }
-        if (SaveHelper.shouldDeleteSave()) {
-            SaveAndContinue.deleteSave(AbstractDungeon.player);
-        }
-        this.calculateUnlockProgress();
-        if (!Settings.isEndless) {
-            this.uploadToSteamLeaderboards();
-        }
-        this.createGameOverStats();
+        //if (this.playtime != 0L) {
+        //    StatsScreen.incrementPlayTime(this.playtime);
+        //}
+        //if (Settings.isStandardRun()) {
+        //    StatsScreen.updateFurthestAscent(AbstractDungeon.floorNum);
+        //} else if (Settings.isDailyRun) {
+        //    StatsScreen.updateHighestDailyScore(AbstractDungeon.floorNum);
+        //}
+        //if (SaveHelper.shouldDeleteSave()) {
+        //    SaveAndContinue.deleteSave(AbstractDungeon.player);
+        //}
+        //this.calculateUnlockProgress();
+        //if (!Settings.isEndless) {
+        //    this.uploadToSteamLeaderboards();
+        //}
+        //this.createGameOverStats();
         CardCrawlGame.playerPref.flush();
     }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/DungeonMapScreen.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/DungeonMapScreen.class
new file mode 100644
index 0000000..12e5357
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/DungeonMapScreen.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/screens/DungeonMapScreen.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/DungeonMapScreen.java
index 9d10ec0..d924f98 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/screens/DungeonMapScreen.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/DungeonMapScreen.java
@@ -287,18 +287,18 @@ public class DungeonMapScreen {
         } else {
             CardCrawlGame.sound.play("MAP_OPEN_2", 0.1f);
         }
-        if (doScrollingAnimation) {
+        /*if (doScrollingAnimation) {
             this.mapNodeHb = null;
             AbstractDungeon.topLevelEffects.add(new LevelTransitionTextOverlayEffect(AbstractDungeon.name, AbstractDungeon.levelNum));
             this.scrollWaitTimer = 4.0f;
             offsetY = this.mapScrollUpperLimit;
             this.targetOffsetY = MAP_SCROLL_LOWER;
-        } else {
+        } else {*/
             this.scrollWaitTimer = 0.0f;
             AbstractDungeon.overlayMenu.cancelButton.show(TEXT[1]);
             offsetY = AbstractDungeon.getCurrMapNode() == null ? this.mapScrollUpperLimit : -50.0f * Settings.scale + (float)AbstractDungeon.getCurrMapNode().y * -ICON_SPACING_Y;
             this.targetOffsetY = offsetY;
-        }
+        //}
         AbstractDungeon.dynamicBanner.hide();
         AbstractDungeon.screen = AbstractDungeon.CurrentScreen.MAP;
         AbstractDungeon.isScreenUp = true;
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/DungeonTransitionScreen.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/DungeonTransitionScreen.class
new file mode 100644
index 0000000..e5627ae
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/DungeonTransitionScreen.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/screens/DungeonTransitionScreen.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/DungeonTransitionScreen.java
index 744af84..3df2556 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/screens/DungeonTransitionScreen.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/DungeonTransitionScreen.java
@@ -115,6 +115,7 @@ public class DungeonTransitionScreen {
             InputHelper.justClickedLeft = false;
             this.isComplete = true;
         }
+        this.isComplete = true;
         if (this.isFading) {
             this.timer -= Gdx.graphics.getDeltaTime();
             if (this.timer < 0.0f) {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/splash/SplashScreen$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/splash/SplashScreen$1.class
new file mode 100644
index 0000000..221ef27
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/splash/SplashScreen$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/splash/SplashScreen$Phase.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/splash/SplashScreen$Phase.class
new file mode 100644
index 0000000..709a383
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/splash/SplashScreen$Phase.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/splash/SplashScreen.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/splash/SplashScreen.class
new file mode 100644
index 0000000..271e01e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/splash/SplashScreen.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/screens/splash/SplashScreen.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/splash/SplashScreen.java
index c02d331..8a5c09f 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/screens/splash/SplashScreen.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/screens/splash/SplashScreen.java
@@ -104,6 +104,7 @@ public class SplashScreen {
                 this.isDone = true;
             }
         }
+        this.isDone = true;
     }
 
     public void render(SpriteBatch sb) {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/EnergyPanel.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/EnergyPanel.class
new file mode 100644
index 0000000..04f8d3c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/EnergyPanel.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/ui/panels/EnergyPanel.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/EnergyPanel.java
index 262cff0..2118232 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/ui/panels/EnergyPanel.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/EnergyPanel.java
@@ -48,7 +48,7 @@ extends AbstractPanel {
 
     public static void setEnergy(int energy) {
         totalCount = energy;
-        AbstractDungeon.effectsQueue.add(new RefreshEnergyEffect());
+        //AbstractDungeon.effectsQueue.add(new RefreshEnergyEffect());
         energyVfxTimer = 2.0f;
         fontScale = 2.0f;
     }
@@ -60,7 +60,7 @@ extends AbstractPanel {
         if (totalCount > 999) {
             totalCount = 999;
         }
-        AbstractDungeon.effectsQueue.add(new RefreshEnergyEffect());
+        //AbstractDungeon.effectsQueue.add(new RefreshEnergyEffect());
         fontScale = 2.0f;
         energyVfxTimer = 2.0f;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/TopPanel$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/TopPanel$1.class
new file mode 100644
index 0000000..7059edd
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/TopPanel$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/TopPanel$TopSection.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/TopPanel$TopSection.class
new file mode 100644
index 0000000..b1e3e96
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/TopPanel$TopSection.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/TopPanel.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/TopPanel.class
new file mode 100644
index 0000000..d32f841
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/TopPanel.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/ui/panels/TopPanel.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/TopPanel.java
index 8a38c21..f6f534f 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/ui/panels/TopPanel.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/ui/panels/TopPanel.java
@@ -273,7 +273,7 @@ public class TopPanel {
                 break;
             }
             if (!hasHpEffect) {
-                AbstractDungeon.topLevelEffectsQueue.add(new PingHpEffect(this.hpIconX));
+                //AbstractDungeon.topLevelEffectsQueue.add(new PingHpEffect(this.hpIconX));
             }
         }
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AbstractGameEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AbstractGameEffect.class
new file mode 100644
index 0000000..6819d36
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AbstractGameEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/AbstractGameEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AbstractGameEffect.java
index 6749d0a..da14451 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/AbstractGameEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AbstractGameEffect.java
@@ -28,6 +28,7 @@ implements Disposable {
             this.isDone = true;
             this.color.a = 0.0f;
         }
+        this.isDone = true;
     }
 
     public abstract void render(SpriteBatch var1);
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AscensionLevelUpTextEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AscensionLevelUpTextEffect.class
new file mode 100644
index 0000000..3933759
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AscensionLevelUpTextEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/AscensionLevelUpTextEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AscensionLevelUpTextEffect.java
index 3760614..ca84082 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/AscensionLevelUpTextEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AscensionLevelUpTextEffect.java
@@ -45,6 +45,7 @@ extends AbstractGameEffect {
         } else if (this.duration < 0.5f) {
             this.color.a = Interpolation.pow2In.apply(0.0f, 1.0f, this.duration * 2.0f);
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AscensionUnlockedTextEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AscensionUnlockedTextEffect.class
new file mode 100644
index 0000000..044c1f2
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AscensionUnlockedTextEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/AscensionUnlockedTextEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AscensionUnlockedTextEffect.java
index 97a7c7c..d775c6b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/AscensionUnlockedTextEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AscensionUnlockedTextEffect.java
@@ -44,6 +44,7 @@ extends AbstractGameEffect {
         } else if (this.duration < 0.5f) {
             this.color.a = Interpolation.pow2In.apply(0.0f, 1.0f, this.duration * 2.0f);
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AwakenedEyeParticle.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AwakenedEyeParticle.class
new file mode 100644
index 0000000..81a4176
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AwakenedEyeParticle.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/AwakenedEyeParticle.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AwakenedEyeParticle.java
index 5184ce0..3a7b539 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/AwakenedEyeParticle.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AwakenedEyeParticle.java
@@ -36,6 +36,7 @@ extends AbstractGameEffect {
             this.isDone = true;
         }
         this.color.a = Interpolation.fade.apply(0.0f, 0.5f, this.duration / this.startingDuration);
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AwakenedWingParticle.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AwakenedWingParticle.class
new file mode 100644
index 0000000..8ac73b8
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AwakenedWingParticle.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/AwakenedWingParticle.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AwakenedWingParticle.java
index bbf25f4..c7f910c 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/AwakenedWingParticle.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/AwakenedWingParticle.java
@@ -62,6 +62,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.2f) {
             this.color.a = Interpolation.fade.apply(0.0f, 0.5f, this.duration * 5.0f);
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/BetaCardArtUnlockedTextEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/BetaCardArtUnlockedTextEffect.class
new file mode 100644
index 0000000..e7bd452
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/BetaCardArtUnlockedTextEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/BetaCardArtUnlockedTextEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/BetaCardArtUnlockedTextEffect.java
index 3dd2469..f390445 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/BetaCardArtUnlockedTextEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/BetaCardArtUnlockedTextEffect.java
@@ -68,6 +68,7 @@ extends AbstractGameEffect {
         } else if (this.duration < 0.5f) {
             this.color.a = Interpolation.pow2In.apply(0.0f, 1.0f, this.duration * 2.0f);
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/BorderFlashEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/BorderFlashEffect.class
new file mode 100644
index 0000000..aa918a2
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/BorderFlashEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/BorderFlashEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/BorderFlashEffect.java
index e7f0849..00f50cb 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/BorderFlashEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/BorderFlashEffect.java
@@ -36,6 +36,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/BorderLongFlashEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/BorderLongFlashEffect.class
new file mode 100644
index 0000000..919d9ae
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/BorderLongFlashEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/BorderLongFlashEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/BorderLongFlashEffect.java
index 10d3274..4b63cb1 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/BorderLongFlashEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/BorderLongFlashEffect.java
@@ -36,6 +36,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/CardTrailEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/CardTrailEffect.class
new file mode 100644
index 0000000..d532e9b
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/CardTrailEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/CardTrailEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/CardTrailEffect.java
index 5424dc7..f8c0bec 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/CardTrailEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/CardTrailEffect.java
@@ -48,11 +48,13 @@ implements Pool.Poolable {
         this.duration -= Gdx.graphics.getDeltaTime();
         this.scale = this.duration < 0.25f ? this.duration * SCALE_MULTI : (this.duration - 0.25f) * SCALE_MULTI;
         if (this.duration < 0.0f) {
-            this.isDone = true;
-            Soul.trailEffectPool.free(this);
+            //this.isDone = true;
+            //Soul.trailEffectPool.free(this);
         } else {
             this.color.a = Interpolation.fade.apply(0.0f, 0.18f, this.duration / 0.5f);
         }
+        this.isDone = true;
+        Soul.trailEffectPool.free(this);
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ClangClangClangEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ClangClangClangEffect.class
new file mode 100644
index 0000000..14e56ed
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ClangClangClangEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/ClangClangClangEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ClangClangClangEffect.java
index 8704598..50edbe9 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/ClangClangClangEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ClangClangClangEffect.java
@@ -23,7 +23,7 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         for (int i = 0; i < 30; ++i) {
-            AbstractDungeon.effectsQueue.add(new UpgradeShineParticleEffect(this.x + MathUtils.random(-10.0f, 10.0f) * Settings.scale, this.y + MathUtils.random(-10.0f, 10.0f) * Settings.scale));
+            //AbstractDungeon.effectsQueue.add(new UpgradeShineParticleEffect(this.x + MathUtils.random(-10.0f, 10.0f) * Settings.scale, this.y + MathUtils.random(-10.0f, 10.0f) * Settings.scale));
         }
         this.isDone = true;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/EndTurnGlowEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/EndTurnGlowEffect.class
new file mode 100644
index 0000000..7988ce0
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/EndTurnGlowEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/EndTurnGlowEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/EndTurnGlowEffect.java
index c726bed..f69d6c6 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/EndTurnGlowEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/EndTurnGlowEffect.java
@@ -30,6 +30,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/EndTurnLongPressBarFlashEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/EndTurnLongPressBarFlashEffect.class
new file mode 100644
index 0000000..c10581c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/EndTurnLongPressBarFlashEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/EndTurnLongPressBarFlashEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/EndTurnLongPressBarFlashEffect.java
index 96b6487..07acb30 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/EndTurnLongPressBarFlashEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/EndTurnLongPressBarFlashEffect.java
@@ -27,6 +27,7 @@ extends AbstractGameEffect {
             this.isDone = true;
         }
         this.color.a = Interpolation.exp5Out.apply(0.0f, 1.0f, this.duration);
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/EnemyTurnEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/EnemyTurnEffect.class
new file mode 100644
index 0000000..6180311
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/EnemyTurnEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/EnemyTurnEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/EnemyTurnEffect.java
index a5a74d8..5b36f28 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/EnemyTurnEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/EnemyTurnEffect.java
@@ -58,6 +58,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ExhaustBlurEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ExhaustBlurEffect.class
new file mode 100644
index 0000000..a6270a6
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ExhaustBlurEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/ExhaustBlurEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ExhaustBlurEffect.java
index b944eb5..3e45898 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/ExhaustBlurEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ExhaustBlurEffect.java
@@ -59,6 +59,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.33f) {
             this.color.a = this.duration * 3.0f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ExhaustEmberEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ExhaustEmberEffect.class
new file mode 100644
index 0000000..3ec0f22
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ExhaustEmberEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/ExhaustEmberEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ExhaustEmberEffect.java
index bba8d86..b7c471a 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/ExhaustEmberEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ExhaustEmberEffect.java
@@ -85,6 +85,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.5f) {
             this.color.a = this.duration * 2.0f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ExhaustPileParticle.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ExhaustPileParticle.class
new file mode 100644
index 0000000..b6795b1
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ExhaustPileParticle.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/ExhaustPileParticle.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ExhaustPileParticle.java
index e43c5ef..7f35b24 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/ExhaustPileParticle.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ExhaustPileParticle.java
@@ -47,6 +47,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FadeWipeParticle.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FadeWipeParticle.class
new file mode 100644
index 0000000..7da440e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FadeWipeParticle.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/FadeWipeParticle.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FadeWipeParticle.java
index 068fa72..b3c48de 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/FadeWipeParticle.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FadeWipeParticle.java
@@ -52,6 +52,7 @@ extends AbstractGameEffect {
             this.color.a = Interpolation.pow5In.apply(1.0f, 0.0f, this.duration / 1.0f);
             this.y = Interpolation.pow3In.apply(0.0f - (float)this.img.packedHeight, Settings.HEIGHT + this.img.packedHeight, this.duration / 1.0f);
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FallingDustEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FallingDustEffect.class
new file mode 100644
index 0000000..ea1b22a
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FallingDustEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/FallingDustEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FallingDustEffect.java
index f3019a7..be5f502 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/FallingDustEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FallingDustEffect.java
@@ -78,6 +78,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FastCardObtainEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FastCardObtainEffect.class
new file mode 100644
index 0000000..a7a4e15
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FastCardObtainEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/FastCardObtainEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FastCardObtainEffect.java
index af78706..0f53966 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/FastCardObtainEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FastCardObtainEffect.java
@@ -36,9 +36,8 @@ extends AbstractGameEffect {
         if (this.isDone) {
             return;
         }
-        this.duration -= Gdx.graphics.getDeltaTime();
+        this.duration = -1f;
         this.card.update();
-        if (this.duration < 0.0f) {
             for (AbstractRelic r : AbstractDungeon.player.relics) {
                 r.onObtainCard(this.card);
             }
@@ -48,7 +47,7 @@ extends AbstractGameEffect {
             for (AbstractRelic r : AbstractDungeon.player.relics) {
                 r.onMasterDeckChange();
             }
-        }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FlashPotionEffect$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FlashPotionEffect$1.class
new file mode 100644
index 0000000..1fb1563
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FlashPotionEffect$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FlashPotionEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FlashPotionEffect.class
new file mode 100644
index 0000000..dc6d069
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FlashPotionEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/FlashPotionEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FlashPotionEffect.java
index 1f145e5..6a03733 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/FlashPotionEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/FlashPotionEffect.java
@@ -175,6 +175,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/MapCircleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/MapCircleEffect.class
new file mode 100644
index 0000000..fe8d5f4
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/MapCircleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/MapCircleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/MapCircleEffect.java
index 44c5e47..065442c 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/MapCircleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/MapCircleEffect.java
@@ -36,6 +36,7 @@ extends AbstractGameEffect {
             this.duration -= Gdx.graphics.getDeltaTime();
         }
         this.duration -= Gdx.graphics.getDeltaTime();
+        this.duration = 0.1f;
         if (this.duration < 1.0f) {
             img = ImageMaster.MAP_CIRCLE_5;
         } else if (this.duration < 1.05f) {
@@ -49,6 +50,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/PlayerTurnEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/PlayerTurnEffect.class
new file mode 100644
index 0000000..68713a2
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/PlayerTurnEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/PlayerTurnEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/PlayerTurnEffect.java
index 6e24f30..2769c45 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/PlayerTurnEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/PlayerTurnEffect.java
@@ -76,11 +76,10 @@ extends AbstractGameEffect {
             this.duration -= Gdx.graphics.getDeltaTime();
         }
         this.duration -= Gdx.graphics.getDeltaTime();
-        if (this.duration < 0.0f) {
-            this.isDone = true;
-            for (AbstractPower p : AbstractDungeon.player.powers) {
-                p.atEnergyGain();
-            }
+
+        this.isDone = true;
+        for (AbstractPower p : AbstractDungeon.player.powers) {
+            p.atEnergyGain();
         }
     }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RefreshEnergyEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RefreshEnergyEffect.class
new file mode 100644
index 0000000..20e8c84
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RefreshEnergyEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/RefreshEnergyEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RefreshEnergyEffect.java
index 07db47e..0333926 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/RefreshEnergyEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RefreshEnergyEffect.java
@@ -38,6 +38,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RestartForChangesEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RestartForChangesEffect.class
new file mode 100644
index 0000000..26b561c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RestartForChangesEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/RestartForChangesEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RestartForChangesEffect.java
index 8e6b740..feef0f8 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/RestartForChangesEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RestartForChangesEffect.java
@@ -39,6 +39,7 @@ extends AbstractGameEffect {
             this.isDone = true;
         }
         this.color.a = this.duration < 1.0f ? this.duration : 1.0f;
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RewardGlowEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RewardGlowEffect.class
new file mode 100644
index 0000000..abebd4f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RewardGlowEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/RewardGlowEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RewardGlowEffect.java
index 2a73af1..e5bf45c 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/RewardGlowEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RewardGlowEffect.java
@@ -36,6 +36,7 @@ extends AbstractGameEffect {
         }
         this.scale += Settings.scale * Gdx.graphics.getDeltaTime() / 20.0f;
         this.color.a = Interpolation.fade.apply(this.duration / 1.1f) / 12.0f;
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RoomShineEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RoomShineEffect.class
new file mode 100644
index 0000000..53565f6
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RoomShineEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/RoomShineEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RoomShineEffect.java
index 36078f9..b842e56 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/RoomShineEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/RoomShineEffect.java
@@ -48,6 +48,7 @@ extends AbstractGameEffect {
         } else if (this.duration < this.effectDuration / 2.0f) {
             this.color.a = Interpolation.exp5In.apply(0.0f, this.alpha, this.duration / (this.effectDuration / 2.0f));
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ShieldParticleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ShieldParticleEffect.class
new file mode 100644
index 0000000..670bd12
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ShieldParticleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/ShieldParticleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ShieldParticleEffect.java
index 4195229..883a4f2 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/ShieldParticleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ShieldParticleEffect.java
@@ -34,6 +34,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ShineLinesEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ShineLinesEffect.class
new file mode 100644
index 0000000..cbb9761
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ShineLinesEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/ShineLinesEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ShineLinesEffect.java
index 9af7102..961fef0 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/ShineLinesEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ShineLinesEffect.java
@@ -33,6 +33,7 @@ extends AbstractGameEffect {
     public void update() {
         super.update();
         this.scale += Gdx.graphics.getDeltaTime() * 8.0f;
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/SpeechTextEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/SpeechTextEffect.class
new file mode 100644
index 0000000..fee5f9f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/SpeechTextEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/SpeechTextEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/SpeechTextEffect.java
index 1fac75c..136a953 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/SpeechTextEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/SpeechTextEffect.java
@@ -69,6 +69,7 @@ extends AbstractGameEffect {
                 w.fadeOut();
             }
         }
+        this.isDone = true;
     }
 
     private void addWord() {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/SumDamageEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/SumDamageEffect.class
new file mode 100644
index 0000000..f3187b5
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/SumDamageEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/SumDamageEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/SumDamageEffect.java
index 922b870..39c2e63 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/SumDamageEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/SumDamageEffect.java
@@ -46,6 +46,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/TextAboveCreatureEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/TextAboveCreatureEffect.class
new file mode 100644
index 0000000..fc9a400
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/TextAboveCreatureEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/TextAboveCreatureEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/TextAboveCreatureEffect.java
index 471e125..7a00342 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/TextAboveCreatureEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/TextAboveCreatureEffect.java
@@ -43,6 +43,7 @@ extends AbstractGameEffect {
         this.color.b = Interpolation.exp5In.apply(this.targetColor.b, 1.0f, this.duration / this.startingDuration);
         this.offsetY = MathUtils.lerp(this.offsetY, TARGET_OFFSET_Y, Gdx.graphics.getDeltaTime() * 5.0f);
         this.y += Gdx.graphics.getDeltaTime() * 12.0f * Settings.scale;
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/TextCenteredEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/TextCenteredEffect.class
new file mode 100644
index 0000000..651f64a
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/TextCenteredEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/TextCenteredEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/TextCenteredEffect.java
index d40c367..6895268 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/TextCenteredEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/TextCenteredEffect.java
@@ -34,6 +34,7 @@ extends AbstractGameEffect {
     public void update() {
         super.update();
         this.offsetY = MathUtils.lerp(this.offsetY, TARGET_OFFSET_Y, Gdx.graphics.getDeltaTime() * 5.0f);
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ThoughtBubble.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ThoughtBubble.class
new file mode 100644
index 0000000..f242fca
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ThoughtBubble.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/ThoughtBubble.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ThoughtBubble.java
index ff6a9cc..eed8a44 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/ThoughtBubble.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/ThoughtBubble.java
@@ -62,7 +62,7 @@ extends AbstractGameEffect {
 
     @Override
     public void update() {
-        this.duration -= Gdx.graphics.getDeltaTime();
+        this.duration = -1f;
         if (this.duration < 0.0f) {
             this.isDone = true;
         } else if (this.duration < 0.3f) {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/UpgradeHammerImprintEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/UpgradeHammerImprintEffect.class
new file mode 100644
index 0000000..ec6ce36
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/UpgradeHammerImprintEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/UpgradeHammerImprintEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/UpgradeHammerImprintEffect.java
index f38541c..7925333 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/UpgradeHammerImprintEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/UpgradeHammerImprintEffect.java
@@ -43,6 +43,7 @@ extends AbstractGameEffect {
         this.hammerGlowScale = 1.7f - this.duration;
         this.hammerGlowScale *= this.hammerGlowScale * this.hammerGlowScale;
         this.scale += Gdx.graphics.getDeltaTime() / 20.0f;
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/WallopEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/WallopEffect.class
new file mode 100644
index 0000000..bf936b6
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/WallopEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/WallopEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/WallopEffect.java
index 367f158..a76966d 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/WallopEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/WallopEffect.java
@@ -26,7 +26,7 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         for (int i = 0; i < this.damage; ++i) {
-            AbstractDungeon.effectsQueue.add(new StarBounceEffect(this.x, this.y));
+            //AbstractDungeon.effectsQueue.add(new StarBounceEffect(this.x, this.y));
         }
         this.isDone = true;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireBubbleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireBubbleEffect.class
new file mode 100644
index 0000000..4cb3c7c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireBubbleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireBubbleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireBubbleEffect.java
index 918857a..554760c 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireBubbleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireBubbleEffect.java
@@ -61,6 +61,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireBurningEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireBurningEffect.class
new file mode 100644
index 0000000..62fcf03
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireBurningEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireBurningEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireBurningEffect.java
index 2bc8d1d..2ebaebe 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireBurningEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireBurningEffect.java
@@ -75,6 +75,7 @@ extends AbstractGameEffect {
         } else if (this.duration < 1.0f) {
             this.color.a = Interpolation.fade.apply(0.0f, this.brightness, this.duration / 1.0f);
         }
+        this.isDone = true;
     }
 
     private void setImg() {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireDigEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireDigEffect.class
new file mode 100644
index 0000000..c4a9927
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireDigEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireDigEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireDigEffect.java
index 80ca262..6fd3e8a 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireDigEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireDigEffect.java
@@ -32,7 +32,7 @@ extends AbstractGameEffect {
     public void update() {
         this.duration -= Gdx.graphics.getDeltaTime();
         this.updateBlackScreenColor();
-        if (this.duration < 1.0f && !this.hasDug) {
+
             this.hasDug = true;
             CardCrawlGame.sound.play("SHOVEL");
             AbstractDungeon.getCurrRoom().rewards.clear();
@@ -40,12 +40,11 @@ extends AbstractGameEffect {
             AbstractDungeon.getCurrRoom().phase = AbstractRoom.RoomPhase.COMPLETE;
             AbstractDungeon.combatRewardScreen.open();
             CardCrawlGame.metricData.addCampfireChoiceData("DIG");
-        }
-        if (this.duration < 0.0f) {
+
             this.isDone = true;
             ((RestRoom)AbstractDungeon.getCurrRoom()).fadeIn();
             AbstractDungeon.getCurrRoom().phase = AbstractRoom.RoomPhase.COMPLETE;
-        }
+        this.isDone = true;
     }
 
     private void updateBlackScreenColor() {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireEndingBurningEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireEndingBurningEffect.class
new file mode 100644
index 0000000..3ef9988
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireEndingBurningEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireEndingBurningEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireEndingBurningEffect.java
index 95bb601..11de205 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireEndingBurningEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireEndingBurningEffect.java
@@ -55,6 +55,7 @@ extends AbstractGameEffect {
         } else {
             this.color.a = Interpolation.pow2Out.apply(0.0f, 0.8f, this.duration);
         }
+        this.isDone = true;
     }
 
     private void setImg() {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireLiftEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireLiftEffect.class
new file mode 100644
index 0000000..f628d45
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireLiftEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireLiftEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireLiftEffect.java
index 852242f..f3910bc 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireLiftEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireLiftEffect.java
@@ -33,7 +33,6 @@ extends AbstractGameEffect {
     public void update() {
         this.duration -= Gdx.graphics.getDeltaTime();
         this.updateBlackScreenColor();
-        if (this.duration < 1.0f && !this.hasTrained) {
             this.hasTrained = true;
             if (AbstractDungeon.player.hasRelic("Girya")) {
                 AbstractDungeon.player.getRelic("Girya").flash();
@@ -43,12 +42,10 @@ extends AbstractGameEffect {
                 CardCrawlGame.metricData.addCampfireChoiceData("LIFT", Integer.toString(AbstractDungeon.player.getRelic((String)"Girya").counter));
             }
             AbstractDungeon.topLevelEffects.add(new BorderFlashEffect(new Color(0.8f, 0.6f, 0.1f, 0.0f)));
-        }
-        if (this.duration < 0.0f) {
             this.isDone = true;
             ((RestRoom)AbstractDungeon.getCurrRoom()).fadeIn();
             AbstractDungeon.getCurrRoom().phase = AbstractRoom.RoomPhase.COMPLETE;
-        }
+        this.isDone = true;
     }
 
     private void updateBlackScreenColor() {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireRecallEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireRecallEffect.class
new file mode 100644
index 0000000..8040749
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireRecallEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireRecallEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireRecallEffect.java
index e644c11..4a0d069 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireRecallEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireRecallEffect.java
@@ -32,19 +32,15 @@ extends AbstractGameEffect {
     public void update() {
         this.duration -= Gdx.graphics.getDeltaTime();
         this.updateBlackScreenColor();
-        if (this.duration < 1.0f && !this.hasRecalled) {
             this.hasRecalled = true;
             CardCrawlGame.sound.play("ATTACK_MAGIC_SLOW_2");
             AbstractDungeon.getCurrRoom().rewards.clear();
             AbstractDungeon.topLevelEffects.add(new ObtainKeyEffect(ObtainKeyEffect.KeyColor.RED));
             AbstractDungeon.getCurrRoom().phase = AbstractRoom.RoomPhase.COMPLETE;
             CardCrawlGame.metricData.addCampfireChoiceData("RECALL");
-        }
-        if (this.duration < 0.0f) {
             this.isDone = true;
             ((RestRoom)AbstractDungeon.getCurrRoom()).fadeIn();
             AbstractDungeon.getCurrRoom().phase = AbstractRoom.RoomPhase.COMPLETE;
-        }
     }
 
     private void updateBlackScreenColor() {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireSleepEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireSleepEffect.class
new file mode 100644
index 0000000..7be59fd
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireSleepEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireSleepEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireSleepEffect.java
index fee17af..44becf1 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireSleepEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireSleepEffect.java
@@ -53,7 +53,6 @@ extends AbstractGameEffect {
     public void update() {
         this.duration -= Gdx.graphics.getDeltaTime();
         this.updateBlackScreenColor();
-        if (this.duration < this.startingDuration - 0.5f && !this.hasHealed) {
             this.playSleepJingle();
             this.hasHealed = true;
             if (AbstractDungeon.player.hasRelic("Regal Pillow")) {
@@ -63,8 +62,6 @@ extends AbstractGameEffect {
             for (AbstractRelic r : AbstractDungeon.player.relics) {
                 r.onRest();
             }
-        }
-        if (this.duration < this.startingDuration / 2.0f) {
             if (AbstractDungeon.player.hasRelic("Dream Catcher")) {
                 AbstractDungeon.player.getRelic("Dream Catcher").flash();
                 ArrayList<AbstractCard> rewardCards = AbstractDungeon.getRewardCards();
@@ -76,7 +73,6 @@ extends AbstractGameEffect {
             ((RestRoom)AbstractDungeon.getCurrRoom()).fadeIn();
             AbstractRoom.waitTimer = 0.0f;
             AbstractDungeon.getCurrRoom().phase = AbstractRoom.RoomPhase.COMPLETE;
-        }
     }
 
     private void playSleepJingle() {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireSleepScreenCoverEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireSleepScreenCoverEffect.class
new file mode 100644
index 0000000..4980706
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireSleepScreenCoverEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireSleepScreenCoverEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireSleepScreenCoverEffect.java
index 039c694..7eb02c3 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/campfire/CampfireSleepScreenCoverEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/campfire/CampfireSleepScreenCoverEffect.java
@@ -62,8 +62,10 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
+
     @Override
     public void render(SpriteBatch sb) {
         sb.setColor(this.color);
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardDisappearEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardDisappearEffect.class
new file mode 100644
index 0000000..9649013
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardDisappearEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/CardDisappearEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardDisappearEffect.java
index b2111b5..87e398b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/CardDisappearEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardDisappearEffect.java
@@ -77,6 +77,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardFlashVfx$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardFlashVfx$1.class
new file mode 100644
index 0000000..00ab2fc
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardFlashVfx$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardFlashVfx.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardFlashVfx.class
new file mode 100644
index 0000000..4ffa04c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardFlashVfx.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/CardFlashVfx.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardFlashVfx.java
index 8a504b2..a743b11 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/CardFlashVfx.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardFlashVfx.java
@@ -80,6 +80,7 @@ extends AbstractGameEffect {
         } else {
             this.yScale = Interpolation.bounceIn.apply(1.2f, 1.1f, this.duration * 2.0f);
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardGlowBorder$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardGlowBorder$1.class
new file mode 100644
index 0000000..ef412a7
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardGlowBorder$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardGlowBorder.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardGlowBorder.class
new file mode 100644
index 0000000..a573b44
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardGlowBorder.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/CardGlowBorder.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardGlowBorder.java
index 1c77bd6..8928ed6 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/CardGlowBorder.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/CardGlowBorder.java
@@ -53,6 +53,7 @@ extends AbstractGameEffect {
             this.isDone = true;
             this.duration = 0.0f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ExhaustCardEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ExhaustCardEffect.class
new file mode 100644
index 0000000..284403f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ExhaustCardEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/ExhaustCardEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ExhaustCardEffect.java
index bc748ca..2c46e4f 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/ExhaustCardEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ExhaustCardEffect.java
@@ -28,10 +28,10 @@ extends AbstractGameEffect {
             int i;
             CardCrawlGame.sound.play("CARD_EXHAUST", 0.2f);
             for (i = 0; i < 90; ++i) {
-                AbstractDungeon.effectsQueue.add(new ExhaustBlurEffect(this.c.current_x, this.c.current_y));
+                //AbstractDungeon.effectsQueue.add(new ExhaustBlurEffect(this.c.current_x, this.c.current_y));
             }
             for (i = 0; i < 50; ++i) {
-                AbstractDungeon.effectsQueue.add(new ExhaustEmberEffect(this.c.current_x, this.c.current_y));
+                //AbstractDungeon.effectsQueue.add(new ExhaustEmberEffect(this.c.current_x, this.c.current_y));
             }
         }
         this.duration -= Gdx.graphics.getDeltaTime();
@@ -42,6 +42,7 @@ extends AbstractGameEffect {
             this.isDone = true;
             this.c.resetAttributes();
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/PurgeCardEffect$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/PurgeCardEffect$1.class
new file mode 100644
index 0000000..194f63e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/PurgeCardEffect$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/PurgeCardEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/PurgeCardEffect.class
new file mode 100644
index 0000000..7d50e52
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/PurgeCardEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/PurgeCardEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/PurgeCardEffect.java
index 7c08646..b9b742b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/PurgeCardEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/PurgeCardEffect.java
@@ -128,10 +128,10 @@ extends AbstractGameEffect {
                 if (!Settings.DISABLE_EFFECTS) {
                     int i;
                     for (i = 0; i < 16; ++i) {
-                        AbstractDungeon.topLevelEffectsQueue.add(new DamageImpactCurvyEffect(this.card.current_x, this.card.current_y, this.color, false));
+                        //AbstractDungeon.topLevelEffectsQueue.add(new DamageImpactCurvyEffect(this.card.current_x, this.card.current_y, this.color, false));
                     }
                     for (i = 0; i < 8; ++i) {
-                        AbstractDungeon.effectsQueue.add(new DamageImpactCurvyEffect(this.card.current_x, this.card.current_y, this.rarityColor, false));
+                        //AbstractDungeon.effectsQueue.add(new DamageImpactCurvyEffect(this.card.current_x, this.card.current_y, this.rarityColor, false));
                     }
                 }
             }
@@ -141,6 +141,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     private void updateVfx() {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToDiscardEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToDiscardEffect.class
new file mode 100644
index 0000000..bb371fe
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToDiscardEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToDiscardEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToDiscardEffect.java
index 9344413..41abe00 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToDiscardEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToDiscardEffect.java
@@ -24,7 +24,7 @@ extends AbstractGameEffect {
         this.duration = 1.5f;
         this.card.target_x = x;
         this.card.target_y = y;
-        AbstractDungeon.effectsQueue.add(new CardPoofEffect(this.card.target_x, this.card.target_y));
+        //AbstractDungeon.effectsQueue.add(new CardPoofEffect(this.card.target_x, this.card.target_y));
         this.card.drawScale = 0.75f;
         this.card.targetDrawScale = 0.75f;
         CardCrawlGame.sound.play("CARD_OBTAIN");
@@ -38,7 +38,7 @@ extends AbstractGameEffect {
         this.card = card;
         this.duration = 1.5f;
         this.identifySpawnLocation((float)Settings.WIDTH / 2.0f, (float)Settings.HEIGHT / 2.0f);
-        AbstractDungeon.effectsQueue.add(new CardPoofEffect(card.target_x, card.target_y));
+        //AbstractDungeon.effectsQueue.add(new CardPoofEffect(card.target_x, card.target_y));
         card.drawScale = 0.01f;
         card.targetDrawScale = 1.0f;
         if (card.type != AbstractCard.CardType.CURSE && card.type != AbstractCard.CardType.STATUS && AbstractDungeon.player.hasPower("MasterRealityPower")) {
@@ -86,11 +86,9 @@ extends AbstractGameEffect {
     public void update() {
         this.duration -= Gdx.graphics.getDeltaTime();
         this.card.update();
-        if (this.duration < 0.0f) {
             this.isDone = true;
             this.card.shrink();
             AbstractDungeon.getCurrRoom().souls.discard(this.card, true);
-        }
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToDrawPileEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToDrawPileEffect.class
new file mode 100644
index 0000000..5e4e83c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToDrawPileEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToDrawPileEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToDrawPileEffect.java
index 5724671..c42e89f 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToDrawPileEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToDrawPileEffect.java
@@ -32,7 +32,7 @@ extends AbstractGameEffect {
             this.card.target_x = x;
             this.card.target_y = y;
         }
-        AbstractDungeon.effectsQueue.add(new CardPoofEffect(this.card.target_x, this.card.target_y));
+        //AbstractDungeon.effectsQueue.add(new CardPoofEffect(this.card.target_x, this.card.target_y));
         this.card.drawScale = 0.01f;
         this.card.targetDrawScale = 1.0f;
         if (this.card.type != AbstractCard.CardType.CURSE && this.card.type != AbstractCard.CardType.STATUS && AbstractDungeon.player.hasPower("MasterRealityPower")) {
@@ -62,7 +62,7 @@ extends AbstractGameEffect {
         this.randomSpot = randomSpot;
         this.card.target_x = MathUtils.random((float)Settings.WIDTH * 0.1f, (float)Settings.WIDTH * 0.9f);
         this.card.target_y = MathUtils.random((float)Settings.HEIGHT * 0.8f, (float)Settings.HEIGHT * 0.2f);
-        AbstractDungeon.effectsQueue.add(new CardPoofEffect(this.card.target_x, this.card.target_y));
+        //AbstractDungeon.effectsQueue.add(new CardPoofEffect(this.card.target_x, this.card.target_y));
         this.card.drawScale = 0.01f;
         this.card.targetDrawScale = 1.0f;
         if (toBottom) {
@@ -118,11 +118,9 @@ extends AbstractGameEffect {
     public void update() {
         this.duration -= Gdx.graphics.getDeltaTime();
         this.card.update();
-        if (this.duration < 0.0f) {
             this.isDone = true;
             this.card.shrink();
             AbstractDungeon.getCurrRoom().souls.onToDeck(this.card, this.randomSpot, true);
-        }
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToHandEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToHandEffect.class
new file mode 100644
index 0000000..d525473
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToHandEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToHandEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToHandEffect.java
index fe29162..9e0b306 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToHandEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndAddToHandEffect.java
@@ -115,16 +115,14 @@ extends AbstractGameEffect {
         }
         this.card.current_x = this.card.target_x;
         this.card.current_y = this.card.target_y - 200.0f * Settings.scale;
-        AbstractDungeon.effectsQueue.add(new CardPoofEffect(this.card.target_x, this.card.target_y));
+        //AbstractDungeon.effectsQueue.add(new CardPoofEffect(this.card.target_x, this.card.target_y));
     }
 
     @Override
     public void update() {
         this.duration -= Gdx.graphics.getDeltaTime();
         this.card.update();
-        if (this.duration < 0.0f) {
             this.isDone = true;
-        }
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndObtainEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndObtainEffect.class
new file mode 100644
index 0000000..0a45557
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndObtainEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndObtainEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndObtainEffect.java
index b89fd9f..4adb853 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndObtainEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardAndObtainEffect.java
@@ -36,7 +36,7 @@ extends AbstractGameEffect {
         this.card = card;
         this.duration = Settings.FAST_MODE ? 0.5f : 2.0f;
         this.identifySpawnLocation(x, y);
-        AbstractDungeon.effectsQueue.add(new CardPoofEffect(card.target_x, card.target_y));
+        //AbstractDungeon.effectsQueue.add(new CardPoofEffect(card.target_x, card.target_y));
         card.drawScale = 0.01f;
         card.targetDrawScale = 1.0f;
     }
@@ -92,7 +92,6 @@ extends AbstractGameEffect {
     public void update() {
         this.duration -= Gdx.graphics.getDeltaTime();
         this.card.update();
-        if (this.duration < 0.0f) {
             for (AbstractRelic r : AbstractDungeon.player.relics) {
                 r.onObtainCard(this.card);
             }
@@ -102,7 +101,6 @@ extends AbstractGameEffect {
             for (AbstractRelic r : AbstractDungeon.player.relics) {
                 r.onMasterDeckChange();
             }
-        }
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardBrieflyEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardBrieflyEffect.class
new file mode 100644
index 0000000..dd30998
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardBrieflyEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/ShowCardBrieflyEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardBrieflyEffect.java
index 813f8ca..8ce40bd 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/cardManip/ShowCardBrieflyEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/cardManip/ShowCardBrieflyEffect.java
@@ -82,9 +82,7 @@ extends AbstractGameEffect {
             this.card.fadingOut = true;
         }
         this.card.update();
-        if (this.duration < 0.0f) {
             this.isDone = true;
-        }
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/AdditiveSlashImpactEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/AdditiveSlashImpactEffect.class
new file mode 100644
index 0000000..c873e71
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/AdditiveSlashImpactEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/AdditiveSlashImpactEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/AdditiveSlashImpactEffect.java
index 9f561c9..f8d0edf 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/AdditiveSlashImpactEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/AdditiveSlashImpactEffect.java
@@ -46,6 +46,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/AdrenalineEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/AdrenalineEffect.class
new file mode 100644
index 0000000..2a976b8
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/AdrenalineEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/AdrenalineEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/AdrenalineEffect.java
index 926d50c..aef229b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/AdrenalineEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/AdrenalineEffect.java
@@ -40,7 +40,7 @@ extends AbstractGameEffect {
         if (this.duration == 1.5f) {
             CardCrawlGame.sound.playA("ATTACK_WHIFF_1", -0.6f);
             CardCrawlGame.sound.playA("ORB_LIGHTNING_CHANNEL", 0.6f);
-            AbstractDungeon.effectsQueue.add(new BorderFlashEffect(Color.BLUE.cpy(), true));
+            //AbstractDungeon.effectsQueue.add(new BorderFlashEffect(Color.BLUE.cpy(), true));
         }
         if (this.position.x > (float)Settings.WIDTH * 0.55f && this.position.y > (float)Settings.HEIGHT / 2.0f - (float)this.img.packedHeight / 2.0f) {
             this.velocity.y = 0.0f;
@@ -63,6 +63,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/AnimatedSlashEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/AnimatedSlashEffect.class
new file mode 100644
index 0000000..e76ac15
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/AnimatedSlashEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/AnimatedSlashEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/AnimatedSlashEffect.java
index e01a277..2752aaf 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/AnimatedSlashEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/AnimatedSlashEffect.java
@@ -62,6 +62,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BattleStartEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BattleStartEffect.class
new file mode 100644
index 0000000..0e068d7
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BattleStartEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BattleStartEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BattleStartEffect.java
index 29ad5f0..4aab5b6 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BattleStartEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BattleStartEffect.java
@@ -100,40 +100,15 @@ extends AbstractGameEffect {
             }
             this.showHb = true;
         }
-        if (this.duration > 3.0f) {
-            this.currentHeight = MathUtils.lerp(this.currentHeight, TARGET_HEIGHT, Gdx.graphics.getDeltaTime() * 3.0f);
-        } else if (this.duration < 0.5f) {
-            this.currentHeight = MathUtils.lerp(this.currentHeight, 0.0f, Gdx.graphics.getDeltaTime() * 3.0f);
-        }
-        if (this.duration < 3.0f && this.timer1 != 0.0f) {
-            this.timer1 -= Gdx.graphics.getDeltaTime();
-            if (this.timer1 < 0.0f) {
-                this.timer1 = 0.0f;
-            }
-            this.firstMessageX = Interpolation.pow2In.apply(this.firstMessageX, MSG_VANISH_X, 1.0f - this.timer1);
-        } else if (this.duration < 3.0f && this.timer2 != 0.0f) {
-            if (!this.soundPlayed) {
-                CardCrawlGame.sound.play("TURN_EFFECT");
-                AbstractDungeon.getMonsters().showIntent();
-                this.soundPlayed = true;
-            }
-            this.timer2 -= Gdx.graphics.getDeltaTime();
-            if (this.timer2 < 0.0f) {
-                this.timer2 = 0.0f;
-            }
-            this.secondMessageX = Interpolation.pow2In.apply(this.secondMessageX, WIDTH_DIV_2, 1.0f - this.timer2);
-        }
-        this.color.a = this.duration > 1.0f ? MathUtils.lerp(this.color.a, 1.0f, Gdx.graphics.getDeltaTime() * 5.0f) : MathUtils.lerp(this.color.a, 0.0f, Gdx.graphics.getDeltaTime() * 5.0f);
-        this.bgColor.a = this.color.a * 0.75f;
-        this.turnMessageColor.a = this.color.a;
-        if (Settings.FAST_MODE) {
-            this.duration -= Gdx.graphics.getDeltaTime();
-        }
-        this.duration -= Gdx.graphics.getDeltaTime();
-        if (this.duration < 0.0f) {
-            this.isDone = true;
+
+        if (!this.soundPlayed) {
+            CardCrawlGame.sound.play("TURN_EFFECT");
+            AbstractDungeon.getMonsters().showIntent();
+            this.soundPlayed = true;
         }
         this.updateSwords();
+        this.isDone = true;
+        return;
     }
 
     private void updateSwords() {
@@ -145,13 +120,13 @@ extends AbstractGameEffect {
         if (this.bossFight) {
             if (this.swordTimer < 0.1f && !this.swordSound1) {
                 this.swordSound1 = true;
-                CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.MED, ScreenShake.ShakeDur.SHORT, false);
+                //CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.MED, ScreenShake.ShakeDur.SHORT, false);
                 for (int i = 0; i < 30; ++i) {
                     if (MathUtils.randomBoolean()) {
-                        AbstractDungeon.effectsQueue.add(new UpgradeShineParticleEffect((float)Settings.WIDTH / 2.0f + MathUtils.random(-150.0f, 150.0f) * Settings.scale, (float)Settings.HEIGHT / 2.0f + MathUtils.random(-10.0f, 50.0f) * Settings.scale));
+                        //AbstractDungeon.effectsQueue.add(new UpgradeShineParticleEffect((float)Settings.WIDTH / 2.0f + MathUtils.random(-150.0f, 150.0f) * Settings.scale, (float)Settings.HEIGHT / 2.0f + MathUtils.random(-10.0f, 50.0f) * Settings.scale));
                         continue;
                     }
-                    AbstractDungeon.topLevelEffectsQueue.add(new UpgradeShineParticleEffect((float)Settings.WIDTH / 2.0f + MathUtils.random(-150.0f, 150.0f) * Settings.scale, (float)Settings.HEIGHT / 2.0f + MathUtils.random(-10.0f, 50.0f) * Settings.scale));
+                    //AbstractDungeon.topLevelEffectsQueue.add(new UpgradeShineParticleEffect((float)Settings.WIDTH / 2.0f + MathUtils.random(-150.0f, 150.0f) * Settings.scale, (float)Settings.HEIGHT / 2.0f + MathUtils.random(-10.0f, 50.0f) * Settings.scale));
                 }
             }
             this.swordX = Interpolation.pow3Out.apply(SWORD_DEST_X, SWORD_START_X, this.swordTimer / 0.5f);
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BiteEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BiteEffect.class
new file mode 100644
index 0000000..861ab3e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BiteEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BiteEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BiteEffect.java
index 4ff684b..5c0e680 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BiteEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BiteEffect.java
@@ -69,6 +69,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlizzardEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlizzardEffect.class
new file mode 100644
index 0000000..444242b
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlizzardEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BlizzardEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlizzardEffect.java
index 29e6856..f0dbbb9 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BlizzardEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlizzardEffect.java
@@ -28,10 +28,10 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         CardCrawlGame.sound.playA("ORB_FROST_CHANNEL", -0.25f - (float)this.frostCount / 200.0f);
-        CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.HIGH, ScreenShake.ShakeDur.MED, true);
-        AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(Color.SKY));
+        //CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.HIGH, ScreenShake.ShakeDur.MED, true);
+        //AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(Color.SKY));
         for (int i = 0; i < this.frostCount; ++i) {
-            AbstractDungeon.effectsQueue.add(new FallingIceEffect(this.frostCount, this.flipped));
+            //AbstractDungeon.effectsQueue.add(new FallingIceEffect(this.frostCount, this.flipped));
         }
         this.isDone = true;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlockImpactLineEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlockImpactLineEffect.class
new file mode 100644
index 0000000..dc73aa1
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlockImpactLineEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BlockImpactLineEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlockImpactLineEffect.java
index 2fdc603..a0caf3c 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BlockImpactLineEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlockImpactLineEffect.java
@@ -47,6 +47,7 @@ extends AbstractGameEffect {
         this.y += this.speedVector.y * Gdx.graphics.getDeltaTime() * 60.0f;
         this.scale = Settings.scale * this.duration / 0.5f;
         super.update();
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlockedNumberEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlockedNumberEffect.class
new file mode 100644
index 0000000..b740193
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlockedNumberEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BlockedNumberEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlockedNumberEffect.java
index 3e80acd..73c4ad4 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BlockedNumberEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlockedNumberEffect.java
@@ -37,6 +37,7 @@ extends AbstractGameEffect {
         this.y += GRAVITY_Y * Gdx.graphics.getDeltaTime();
         super.update();
         this.scale = Settings.scale * this.duration / 2.3f * 3.0f;
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlockedWordEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlockedWordEffect.class
new file mode 100644
index 0000000..b6a98e2
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlockedWordEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BlockedWordEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlockedWordEffect.java
index b69dbe9..0596b34 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BlockedWordEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlockedWordEffect.java
@@ -36,6 +36,7 @@ extends AbstractGameEffect {
         this.y += Gdx.graphics.getDeltaTime() * this.duration * 100.0f * Settings.scale;
         super.update();
         this.scale = Settings.scale * this.duration / 2.3f + 1.0f;
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BloodShotEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BloodShotEffect.class
new file mode 100644
index 0000000..a91c561
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BloodShotEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BloodShotEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BloodShotEffect.java
index db6a772..54fa79c 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BloodShotEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BloodShotEffect.java
@@ -33,12 +33,13 @@ extends AbstractGameEffect {
         this.timer -= Gdx.graphics.getDeltaTime();
         if (this.timer < 0.0f) {
             this.timer += MathUtils.random(0.05f, 0.15f);
-            AbstractDungeon.effectsQueue.add(new BloodShotParticleEffect(this.sX, this.sY, this.tX, this.tY));
+            //AbstractDungeon.effectsQueue.add(new BloodShotParticleEffect(this.sX, this.sY, this.tX, this.tY));
             --this.count;
             if (this.count == 0) {
                 this.isDone = true;
             }
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BloodShotParticleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BloodShotParticleEffect.class
new file mode 100644
index 0000000..36a9e59
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BloodShotParticleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BloodShotParticleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BloodShotParticleEffect.java
index 947b207..aa01d3b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BloodShotParticleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BloodShotParticleEffect.java
@@ -63,10 +63,11 @@ extends AbstractGameEffect {
             this.sY = this.y;
         }
         if (this.duration < 0.0f) {
-            AbstractDungeon.effectsQueue.add(new AdditiveSlashImpactEffect(this.tX, this.tY, this.color.cpy()));
-            CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.MED, ScreenShake.ShakeDur.SHORT, MathUtils.randomBoolean());
+            //AbstractDungeon.effectsQueue.add(new AdditiveSlashImpactEffect(this.tX, this.tY, this.color.cpy()));
+            //CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.MED, ScreenShake.ShakeDur.SHORT, MathUtils.randomBoolean());
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlurWaveAdditiveEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlurWaveAdditiveEffect.class
new file mode 100644
index 0000000..79f4112
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlurWaveAdditiveEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BlurWaveAdditiveEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlurWaveAdditiveEffect.java
index 744be30..a989f42 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BlurWaveAdditiveEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlurWaveAdditiveEffect.java
@@ -64,6 +64,7 @@ extends AbstractGameEffect {
                 this.color.a = Interpolation.fade.apply(0.0f, 0.7f, this.duration * 2.0f);
             }
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlurWaveChaoticEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlurWaveChaoticEffect.class
new file mode 100644
index 0000000..0e72258
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlurWaveChaoticEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BlurWaveChaoticEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlurWaveChaoticEffect.java
index c70455b..ff46ac1 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BlurWaveChaoticEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlurWaveChaoticEffect.java
@@ -62,6 +62,7 @@ extends AbstractGameEffect {
                 this.color.a = Interpolation.fade.apply(0.0f, 0.7f, this.duration * 2.0f);
             }
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlurWaveNormalEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlurWaveNormalEffect.class
new file mode 100644
index 0000000..ca36110
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlurWaveNormalEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BlurWaveNormalEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlurWaveNormalEffect.java
index 05b78f9..cbb7fb2 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BlurWaveNormalEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BlurWaveNormalEffect.java
@@ -64,6 +64,7 @@ extends AbstractGameEffect {
                 this.color.a = Interpolation.fade.apply(0.0f, 0.7f, this.duration * 2.0f);
             }
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BossCrystalImpactEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BossCrystalImpactEffect.class
new file mode 100644
index 0000000..6c6f4bd
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BossCrystalImpactEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BossCrystalImpactEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BossCrystalImpactEffect.java
index abef1b2..9e40c70 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BossCrystalImpactEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BossCrystalImpactEffect.java
@@ -41,6 +41,7 @@ extends AbstractGameEffect {
         }
         this.color.a = Interpolation.pow3Out.apply(0.0f, 1.0f, this.duration / 2.0f);
         this.scale += Gdx.graphics.getDeltaTime() * 8.0f;
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BuffParticleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BuffParticleEffect.class
new file mode 100644
index 0000000..dd5cf90
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BuffParticleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BuffParticleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BuffParticleEffect.java
index 2ec10f6..dcae183 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/BuffParticleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/BuffParticleEffect.java
@@ -59,6 +59,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/CardPoofParticle.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/CardPoofParticle.class
new file mode 100644
index 0000000..c283c4a
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/CardPoofParticle.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/CardPoofParticle.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/CardPoofParticle.java
index 75cefeb..7c1a190 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/CardPoofParticle.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/CardPoofParticle.java
@@ -58,6 +58,7 @@ extends AbstractGameEffect {
 
     @Override
     public void update() {
+        this.isDone = true;
         if (this.delay > 0.0f) {
             this.delay -= Gdx.graphics.getDeltaTime();
             return;
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ClashEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ClashEffect.class
new file mode 100644
index 0000000..7890f5d
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ClashEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ClashEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ClashEffect.java
index 980a66b..bedb5a9 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ClashEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ClashEffect.java
@@ -29,10 +29,10 @@ extends AbstractGameEffect {
         CardCrawlGame.sound.playA("ATTACK_WHIFF_1", 0.4f);
         CardCrawlGame.sound.playA("ATTACK_IRON_1", -0.1f);
         CardCrawlGame.sound.playA("ATTACK_IRON_3", -0.1f);
-        AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x, this.y - 30.0f * Settings.scale, -500.0f, -500.0f, 135.0f, 4.0f, Color.SCARLET, Color.GOLD));
-        AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x, this.y - 30.0f * Settings.scale, 500.0f, -500.0f, 225.0f, 4.0f, Color.SKY, Color.CYAN));
+        //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x, this.y - 30.0f * Settings.scale, -500.0f, -500.0f, 135.0f, 4.0f, Color.SCARLET, Color.GOLD));
+        //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x, this.y - 30.0f * Settings.scale, 500.0f, -500.0f, 225.0f, 4.0f, Color.SKY, Color.CYAN));
         for (int i = 0; i < 15; ++i) {
-            AbstractDungeon.effectsQueue.add(new UpgradeShineParticleEffect(this.x + MathUtils.random(-40.0f, 40.0f) * Settings.scale, this.y + MathUtils.random(-40.0f, 40.0f) * Settings.scale));
+            //AbstractDungeon.effectsQueue.add(new UpgradeShineParticleEffect(this.x + MathUtils.random(-40.0f, 40.0f) * Settings.scale, this.y + MathUtils.random(-40.0f, 40.0f) * Settings.scale));
         }
         this.isDone = true;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ClawEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ClawEffect.class
new file mode 100644
index 0000000..73b2691
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ClawEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ClawEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ClawEffect.java
index a030e42..2bb8156 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ClawEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ClawEffect.java
@@ -32,9 +32,9 @@ extends AbstractGameEffect {
         } else {
             CardCrawlGame.sound.playA("ATTACK_DAGGER_6", MathUtils.random(0.0f, -0.3f));
         }
-        AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + 35.0f, this.y + 35.0f, 150.0f, -150.0f, -135.0f, this.color, this.color2));
-        AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x, this.y, 150.0f, -150.0f, -135.0f, this.color, this.color2));
-        AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x - 35.0f, this.y - 35.0f, 150.0f, -150.0f, -135.0f, this.color, this.color2));
+        //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + 35.0f, this.y + 35.0f, 150.0f, -150.0f, -135.0f, this.color, this.color2));
+        //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x, this.y, 150.0f, -150.0f, -135.0f, this.color, this.color2));
+        //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x - 35.0f, this.y - 35.0f, 150.0f, -150.0f, -135.0f, this.color, this.color2));
         this.isDone = true;
     }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/CleaveEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/CleaveEffect.class
new file mode 100644
index 0000000..7a89b98
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/CleaveEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/CleaveEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/CleaveEffect.java
index 5d99daa..516ad0b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/CleaveEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/CleaveEffect.java
@@ -48,6 +48,7 @@ extends AbstractGameEffect {
 
     @Override
     public void update() {
+        this.isDone = true;
         if (this.stallTimer > 0.0f) {
             this.stallTimer -= Gdx.graphics.getDeltaTime();
             return;
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DaggerSprayEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DaggerSprayEffect.class
new file mode 100644
index 0000000..b36b527
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DaggerSprayEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DaggerSprayEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DaggerSprayEffect.java
index b4b8c42..8fb048c 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DaggerSprayEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DaggerSprayEffect.java
@@ -24,12 +24,12 @@ extends AbstractGameEffect {
         if (this.flipX) {
             for (int i = 12; i > 0; --i) {
                 float x = AbstractDungeon.player.hb.cX - MathUtils.random(0.0f, 450.0f) * Settings.scale;
-                AbstractDungeon.effectsQueue.add(new FlyingDaggerEffect(x, AbstractDungeon.player.hb.cY + 120.0f * Settings.scale + (float)i * -18.0f * Settings.scale, (float)(i * 4) - 30.0f, true));
+                //AbstractDungeon.effectsQueue.add(new FlyingDaggerEffect(x, AbstractDungeon.player.hb.cY + 120.0f * Settings.scale + (float)i * -18.0f * Settings.scale, (float)(i * 4) - 30.0f, true));
             }
         } else {
             for (int i = 0; i < 12; ++i) {
                 float x = AbstractDungeon.player.hb.cX + MathUtils.random(0.0f, 450.0f) * Settings.scale;
-                AbstractDungeon.effectsQueue.add(new FlyingDaggerEffect(x, AbstractDungeon.player.hb.cY - 100.0f * Settings.scale + (float)i * 18.0f * Settings.scale, (float)(i * 4) - 20.0f, false));
+                //AbstractDungeon.effectsQueue.add(new FlyingDaggerEffect(x, AbstractDungeon.player.hb.cY - 100.0f * Settings.scale + (float)i * 18.0f * Settings.scale, (float)(i * 4) - 20.0f, false));
             }
         }
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageImpactBlurEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageImpactBlurEffect.class
new file mode 100644
index 0000000..e13567f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageImpactBlurEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DamageImpactBlurEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageImpactBlurEffect.java
index a0e1d42..8f4c37f 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DamageImpactBlurEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageImpactBlurEffect.java
@@ -46,6 +46,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageImpactCurvyEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageImpactCurvyEffect.class
new file mode 100644
index 0000000..01b76bb
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageImpactCurvyEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DamageImpactCurvyEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageImpactCurvyEffect.java
index 35a36bf..e3407bb 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DamageImpactCurvyEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageImpactCurvyEffect.java
@@ -57,6 +57,7 @@ extends AbstractGameEffect {
         this.rotation += MathUtils.cos(this.duration * this.waveSpeed) * this.waveIntensity * Gdx.graphics.getDeltaTime() * 60.0f;
         this.scale = Settings.scale * this.duration / this.startingDuration * 0.75f;
         super.update();
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageImpactLineEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageImpactLineEffect.class
new file mode 100644
index 0000000..360f6c3
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageImpactLineEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DamageImpactLineEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageImpactLineEffect.java
index 3bf6d88..ddbc9ba 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DamageImpactLineEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageImpactLineEffect.java
@@ -47,6 +47,7 @@ extends AbstractGameEffect {
         this.y += this.speedVector.y;
         this.scale = Settings.scale * this.duration / 0.5f;
         super.update();
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageNumberEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageNumberEffect.class
new file mode 100644
index 0000000..37b3b45
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageNumberEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DamageNumberEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageNumberEffect.java
index dda838e..4d15182 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DamageNumberEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DamageNumberEffect.java
@@ -53,7 +53,7 @@ extends AbstractGameEffect {
         if (!isSumDamageAvailable) {
             for (AbstractGameEffect e : AbstractDungeon.effectList) {
                 if (!(e instanceof DamageNumberEffect) || e == this || ((DamageNumberEffect)e).target != target) continue;
-                AbstractDungeon.effectsQueue.add(new SumDamageEffect(target, x, y, ((DamageNumberEffect)e).amt + amt));
+                //AbstractDungeon.effectsQueue.add(new SumDamageEffect(target, x, y, ((DamageNumberEffect)e).amt + amt));
             }
         }
     }
@@ -77,6 +77,7 @@ extends AbstractGameEffect {
             }
         }
         this.scale = Interpolation.pow4Out.apply(6.0f, 1.2f, 1.0f - this.duration / 1.2f) * Settings.scale;
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DarkOrbActivateEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DarkOrbActivateEffect.class
new file mode 100644
index 0000000..7a8c6e7
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DarkOrbActivateEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DarkOrbActivateEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DarkOrbActivateEffect.java
index e975b90..4c2ac68 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DarkOrbActivateEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DarkOrbActivateEffect.java
@@ -21,7 +21,7 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         for (int i = 0; i < 4; ++i) {
-            AbstractDungeon.effectsQueue.add(new DarkOrbActivateParticle(this.x, this.y));
+            //AbstractDungeon.effectsQueue.add(new DarkOrbActivateParticle(this.x, this.y));
         }
         this.isDone = true;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DarkOrbActivateParticle.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DarkOrbActivateParticle.class
new file mode 100644
index 0000000..eb33073
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DarkOrbActivateParticle.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DarkOrbActivateParticle.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DarkOrbActivateParticle.java
index 35b8902..3115806 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DarkOrbActivateParticle.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DarkOrbActivateParticle.java
@@ -48,6 +48,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DarkOrbPassiveEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DarkOrbPassiveEffect.class
new file mode 100644
index 0000000..ad2b66c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DarkOrbPassiveEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DarkOrbPassiveEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DarkOrbPassiveEffect.java
index 31e92bc..3d8d5f0 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DarkOrbPassiveEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DarkOrbPassiveEffect.java
@@ -57,6 +57,7 @@ extends AbstractGameEffect {
         if (this.scale < 0.0f || this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DeckPoofEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DeckPoofEffect.class
new file mode 100644
index 0000000..ee32114
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DeckPoofEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DeckPoofEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DeckPoofEffect.java
index 34dbd27..158074a 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DeckPoofEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DeckPoofEffect.java
@@ -12,7 +12,7 @@ public class DeckPoofEffect
 extends AbstractGameEffect {
     public DeckPoofEffect(float x, float y, boolean isDeck) {
         for (int i = 0; i < 70; ++i) {
-            AbstractDungeon.effectsQueue.add(new DeckPoofParticle(x, y, isDeck));
+            //AbstractDungeon.effectsQueue.add(new DeckPoofParticle(x, y, isDeck));
         }
     }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DeckPoofParticle.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DeckPoofParticle.class
new file mode 100644
index 0000000..3c3ec11
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DeckPoofParticle.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DeckPoofParticle.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DeckPoofParticle.java
index 96b2032..1f82246 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DeckPoofParticle.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DeckPoofParticle.java
@@ -63,6 +63,7 @@ extends AbstractGameEffect {
 
     @Override
     public void update() {
+        this.isDone = true;
         if (this.delay > 0.0f) {
             this.delay -= Gdx.graphics.getDeltaTime();
             return;
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DevotionEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DevotionEffect.class
new file mode 100644
index 0000000..2b17fa7
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DevotionEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DevotionEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DevotionEffect.java
index a8e8b9b..17d53c5 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DevotionEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DevotionEffect.java
@@ -20,7 +20,7 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         if (this.count == 0) {
-            AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(Color.SKY, true));
+            //AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(Color.SKY, true));
         }
         this.duration -= Gdx.graphics.getDeltaTime();
         if (this.duration < 0.0f) {
@@ -29,12 +29,13 @@ extends AbstractGameEffect {
             float x = (float)(Settings.WIDTH * this.count) / 7.0f;
             float y = MathUtils.random(AbstractDungeon.floorY - 80.0f * Settings.scale, AbstractDungeon.floorY + 50.0f * Settings.scale);
             for (int i = 0; i < 5; ++i) {
-                AbstractDungeon.effectsQueue.add(new TorchParticleXLEffect(x, y, MathUtils.random(1.1f, 1.6f)));
+                //AbstractDungeon.effectsQueue.add(new TorchParticleXLEffect(x, y, MathUtils.random(1.1f, 1.6f)));
             }
         }
         if (this.count >= 6) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DieDieDieEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DieDieDieEffect.class
new file mode 100644
index 0000000..a9a3c17
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DieDieDieEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DieDieDieEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DieDieDieEffect.java
index a7d0ff7..56ab3c8 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/DieDieDieEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/DieDieDieEffect.java
@@ -26,13 +26,14 @@ extends AbstractGameEffect {
             this.interval = MathUtils.random(0.02f, 0.05f);
             int derp = MathUtils.random(1, 4);
             for (int i = 0; i < derp; ++i) {
-                AbstractDungeon.effectsQueue.add(new ThrowShivEffect(MathUtils.random(1200.0f, 2000.0f) * Settings.scale, AbstractDungeon.floorY + MathUtils.random(-100.0f, 500.0f) * Settings.scale));
+                //AbstractDungeon.effectsQueue.add(new ThrowShivEffect(MathUtils.random(1200.0f, 2000.0f) * Settings.scale, AbstractDungeon.floorY + MathUtils.random(-100.0f, 500.0f) * Settings.scale));
             }
         }
         this.duration -= Gdx.graphics.getDeltaTime();
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EmpowerCircleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EmpowerCircleEffect.class
new file mode 100644
index 0000000..62b8160
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EmpowerCircleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/EmpowerCircleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EmpowerCircleEffect.java
index c2c324a..1ba8e4b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/EmpowerCircleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EmpowerCircleEffect.java
@@ -42,6 +42,7 @@ extends AbstractGameEffect {
         this.vY = MathHelper.fadeLerpSnap(this.vY, 0.0f);
         this.scale = Settings.scale * this.duration / this.startingDuration;
         super.update();
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EmptyStanceEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EmptyStanceEffect.class
new file mode 100644
index 0000000..ab52241
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EmptyStanceEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/EmptyStanceEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EmptyStanceEffect.java
index 28696ce..00f9008 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/EmptyStanceEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EmptyStanceEffect.java
@@ -28,16 +28,17 @@ extends AbstractGameEffect {
         this.duration -= Gdx.graphics.getDeltaTime();
         if (this.duration < 0.0f) {
             if (this.numParticles == 10) {
-                AbstractDungeon.effectsQueue.add(new BorderFlashEffect(Color.SKY, true));
+                //AbstractDungeon.effectsQueue.add(new BorderFlashEffect(Color.SKY, true));
             }
-            AbstractDungeon.effectsQueue.add(new EmptyStanceParticleEffect(this.x, this.y));
-            AbstractDungeon.effectsQueue.add(new EmptyStanceParticleEffect(this.x, this.y));
-            AbstractDungeon.effectsQueue.add(new EmptyStanceParticleEffect(this.x, this.y));
+            //AbstractDungeon.effectsQueue.add(new EmptyStanceParticleEffect(this.x, this.y));
+            //AbstractDungeon.effectsQueue.add(new EmptyStanceParticleEffect(this.x, this.y));
+            //AbstractDungeon.effectsQueue.add(new EmptyStanceParticleEffect(this.x, this.y));
             --this.numParticles;
             if (this.numParticles <= 0) {
                 this.isDone = true;
             }
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EmptyStanceParticleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EmptyStanceParticleEffect.class
new file mode 100644
index 0000000..5e4c1d2
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EmptyStanceParticleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/EmptyStanceParticleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EmptyStanceParticleEffect.java
index 7ca554c..4bd104a 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/EmptyStanceParticleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EmptyStanceParticleEffect.java
@@ -48,6 +48,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EntangleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EntangleEffect.class
new file mode 100644
index 0000000..f583aa5
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EntangleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/EntangleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EntangleEffect.java
index 9497b82..5f3b484 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/EntangleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/EntangleEffect.java
@@ -43,6 +43,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ExplosionSmallEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ExplosionSmallEffect.class
new file mode 100644
index 0000000..47c3f98
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ExplosionSmallEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ExplosionSmallEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ExplosionSmallEffect.java
index f2dece4..484f167 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ExplosionSmallEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ExplosionSmallEffect.java
@@ -25,9 +25,9 @@ extends AbstractGameEffect {
 
     @Override
     public void update() {
-        AbstractDungeon.effectsQueue.add(new DarkSmokePuffEffect(this.x, this.y));
+        //AbstractDungeon.effectsQueue.add(new DarkSmokePuffEffect(this.x, this.y));
         for (int i = 0; i < 12; ++i) {
-            AbstractDungeon.effectsQueue.add(new SmokingEmberEffect(this.x + MathUtils.random(-50.0f, 50.0f) * Settings.scale, this.y + MathUtils.random(-50.0f, 50.0f) * Settings.scale));
+            //AbstractDungeon.effectsQueue.add(new SmokingEmberEffect(this.x + MathUtils.random(-50.0f, 50.0f) * Settings.scale, this.y + MathUtils.random(-50.0f, 50.0f) * Settings.scale));
         }
         CardCrawlGame.sound.playA("ATTACK_FIRE", MathUtils.random(-0.2f, -0.1f));
         this.isDone = true;
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FallingIceEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FallingIceEffect.class
new file mode 100644
index 0000000..5665a80
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FallingIceEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FallingIceEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FallingIceEffect.java
index 07d55b2..2d65d65 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FallingIceEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FallingIceEffect.java
@@ -71,6 +71,7 @@ extends AbstractGameEffect {
 
     @Override
     public void update() {
+        this.isDone = true;
         this.waitTimer -= Gdx.graphics.getDeltaTime();
         if (this.waitTimer > 0.0f) {
             return;
@@ -82,7 +83,7 @@ extends AbstractGameEffect {
             pitch -= (float)this.frostCount * 0.025f;
             CardCrawlGame.sound.playA("ORB_FROST_EVOKE", pitch += MathUtils.random(-0.2f, 0.2f));
             for (int i = 0; i < 4; ++i) {
-                AbstractDungeon.effectsQueue.add(new IceShatterEffect(this.x, this.y));
+                //AbstractDungeon.effectsQueue.add(new IceShatterEffect(this.x, this.y));
             }
             this.isDone = true;
         }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FastingEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FastingEffect.class
new file mode 100644
index 0000000..ab0bbfb
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FastingEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FastingEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FastingEffect.java
index 5361eb6..6979f95 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FastingEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FastingEffect.java
@@ -46,6 +46,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FireballEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FireballEffect.class
new file mode 100644
index 0000000..59f9c9c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FireballEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FireballEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FireballEffect.java
index 0f9840b..2ce4062 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FireballEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FireballEffect.java
@@ -45,15 +45,16 @@ extends AbstractGameEffect {
         this.vfxTimer -= Gdx.graphics.getDeltaTime();
         if (this.vfxTimer < 0.0f) {
             this.vfxTimer = 0.016f;
-            AbstractDungeon.effectsQueue.add(new LightFlareParticleEffect(this.x, this.y, Color.CHARTREUSE));
-            AbstractDungeon.effectsQueue.add(new FireBurstParticleEffect(this.x, this.y));
+            //AbstractDungeon.effectsQueue.add(new LightFlareParticleEffect(this.x, this.y, Color.CHARTREUSE));
+            //AbstractDungeon.effectsQueue.add(new FireBurstParticleEffect(this.x, this.y));
         }
         this.duration -= Gdx.graphics.getDeltaTime();
         if (this.duration < 0.0f) {
             this.isDone = true;
-            AbstractDungeon.effectsQueue.add(new GhostIgniteEffect(this.x, this.y));
-            AbstractDungeon.effectsQueue.add(new GhostlyWeakFireEffect(this.x, this.y));
+            //AbstractDungeon.effectsQueue.add(new GhostIgniteEffect(this.x, this.y));
+            //AbstractDungeon.effectsQueue.add(new GhostlyWeakFireEffect(this.x, this.y));
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlameBarrierEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlameBarrierEffect.class
new file mode 100644
index 0000000..3dac8fb
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlameBarrierEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlameBarrierEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlameBarrierEffect.java
index b0ad29f..445db40 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlameBarrierEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlameBarrierEffect.java
@@ -39,20 +39,21 @@ extends AbstractGameEffect {
         if (this.flashedBorder) {
             CardCrawlGame.sound.play("ATTACK_FLAME_BARRIER", 0.05f);
             this.flashedBorder = false;
-            AbstractDungeon.effectsQueue.add(new BorderFlashEffect(new Color(1.0f, 1.0f, 0.1f, 1.0f)));
-            AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(new Color(1.0f, 0.4f, 0.1f, 1.0f)));
+            //AbstractDungeon.effectsQueue.add(new BorderFlashEffect(new Color(1.0f, 1.0f, 0.1f, 1.0f)));
+            //AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(new Color(1.0f, 0.4f, 0.1f, 1.0f)));
         }
         float tmp = Interpolation.fade.apply(-209.0f, 30.0f, this.duration / 0.5f) * ((float)Math.PI / 180);
         this.v.x = MathUtils.cos(tmp) * X_RADIUS;
         this.v.y = -MathUtils.sin(tmp) * Y_RADIUS;
-        AbstractDungeon.effectsQueue.add(new TorchParticleXLEffect(this.x + this.v.x + MathUtils.random(-30.0f, 30.0f) * Settings.scale, this.y + this.v.y + MathUtils.random(-10.0f, 10.0f) * Settings.scale));
-        AbstractDungeon.effectsQueue.add(new TorchParticleXLEffect(this.x + this.v.x + MathUtils.random(-30.0f, 30.0f) * Settings.scale, this.y + this.v.y + MathUtils.random(-10.0f, 10.0f) * Settings.scale));
-        AbstractDungeon.effectsQueue.add(new TorchParticleXLEffect(this.x + this.v.x + MathUtils.random(-30.0f, 30.0f) * Settings.scale, this.y + this.v.y + MathUtils.random(-10.0f, 10.0f) * Settings.scale));
-        AbstractDungeon.effectsQueue.add(new ExhaustEmberEffect(this.x + this.v.x, this.y + this.v.y));
+        //AbstractDungeon.effectsQueue.add(new TorchParticleXLEffect(this.x + this.v.x + MathUtils.random(-30.0f, 30.0f) * Settings.scale, this.y + this.v.y + MathUtils.random(-10.0f, 10.0f) * Settings.scale));
+        //AbstractDungeon.effectsQueue.add(new TorchParticleXLEffect(this.x + this.v.x + MathUtils.random(-30.0f, 30.0f) * Settings.scale, this.y + this.v.y + MathUtils.random(-10.0f, 10.0f) * Settings.scale));
+        //AbstractDungeon.effectsQueue.add(new TorchParticleXLEffect(this.x + this.v.x + MathUtils.random(-30.0f, 30.0f) * Settings.scale, this.y + this.v.y + MathUtils.random(-10.0f, 10.0f) * Settings.scale));
+        //AbstractDungeon.effectsQueue.add(new ExhaustEmberEffect(this.x + this.v.x, this.y + this.v.y));
         this.duration -= Gdx.graphics.getDeltaTime();
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlameParticleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlameParticleEffect.class
new file mode 100644
index 0000000..eea234f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlameParticleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlameParticleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlameParticleEffect.java
index 13f913a..1e9935f 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlameParticleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlameParticleEffect.java
@@ -47,6 +47,7 @@ extends AbstractGameEffect {
 
     @Override
     public void update() {
+        this.isDone = true;
         if (this.delayTimer > 0.0f) {
             this.delayTimer -= Gdx.graphics.getDeltaTime();
             return;
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashAtkImgEffect$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashAtkImgEffect$1.class
new file mode 100644
index 0000000..52895f2
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashAtkImgEffect$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashAtkImgEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashAtkImgEffect.class
new file mode 100644
index 0000000..9e09374
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashAtkImgEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlashAtkImgEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashAtkImgEffect.java
index df48f81..b6b170d 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlashAtkImgEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashAtkImgEffect.java
@@ -147,6 +147,7 @@ extends AbstractGameEffect {
 
     @Override
     public void update() {
+        this.isDone = true;
         switch (this.effect) {
             case SHIELD: {
                 this.duration -= Gdx.graphics.getDeltaTime();
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashIntentEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashIntentEffect.class
new file mode 100644
index 0000000..9ca4fdb
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashIntentEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlashIntentEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashIntentEffect.java
index e86b288..dcdfb37 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlashIntentEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashIntentEffect.java
@@ -30,12 +30,13 @@ extends AbstractGameEffect {
         this.intervalTimer -= Gdx.graphics.getDeltaTime();
         if (this.intervalTimer < 0.0f && !this.m.isDying) {
             this.intervalTimer = 0.17f;
-            AbstractDungeon.effectsQueue.add(new FlashIntentParticle(this.img, this.m));
+            //AbstractDungeon.effectsQueue.add(new FlashIntentParticle(this.img, this.m));
         }
         this.duration -= Gdx.graphics.getDeltaTime();
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashIntentParticle.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashIntentParticle.class
new file mode 100644
index 0000000..14b60d4
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashIntentParticle.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlashIntentParticle.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashIntentParticle.java
index 5bf7c58..898bcd8 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlashIntentParticle.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashIntentParticle.java
@@ -39,6 +39,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashPowerEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashPowerEffect.class
new file mode 100644
index 0000000..c6d5968
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashPowerEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlashPowerEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashPowerEffect.java
index 9e68227..0ed6e28 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlashPowerEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlashPowerEffect.java
@@ -42,6 +42,7 @@ extends AbstractGameEffect {
     public void update() {
         super.update();
         this.scale = Interpolation.exp5In.apply(Settings.scale, Settings.scale * 0.3f, this.duration / this.startingDuration);
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlickCoinEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlickCoinEffect.class
new file mode 100644
index 0000000..3f9703c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlickCoinEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlickCoinEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlickCoinEffect.java
index 21165f6..b1811e3 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlickCoinEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlickCoinEffect.java
@@ -57,7 +57,7 @@ extends AbstractGameEffect {
         this.sparkleTimer -= Gdx.graphics.getDeltaTime();
         if (this.duration < 0.4f && this.sparkleTimer < 0.0f) {
             for (int i = 0; i < MathUtils.random(2, 5); ++i) {
-                AbstractDungeon.effectsQueue.add(new ShineSparkleEffect(this.cX, this.cY + this.yOffset));
+                //AbstractDungeon.effectsQueue.add(new ShineSparkleEffect(this.cX, this.cY + this.yOffset));
             }
             this.sparkleTimer = MathUtils.random(0.05f, 0.1f);
         }
@@ -74,8 +74,9 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
             CardCrawlGame.sound.playA("GOLD_GAIN", MathUtils.random(0.0f, 0.1f));
-            AbstractDungeon.effectsQueue.add(new AdditiveSlashImpactEffect(this.dX, this.dY + 100.0f * Settings.scale, Color.GOLD.cpy()));
+            //AbstractDungeon.effectsQueue.add(new AdditiveSlashImpactEffect(this.dX, this.dY + 100.0f * Settings.scale, Color.GOLD.cpy()));
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlyingDaggerEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlyingDaggerEffect.class
new file mode 100644
index 0000000..e8f8ff0
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlyingDaggerEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlyingDaggerEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlyingDaggerEffect.java
index d48435c..df11233 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlyingDaggerEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlyingDaggerEffect.java
@@ -82,6 +82,7 @@ extends AbstractGameEffect {
         }
         this.color.a = this.duration > 0.25f ? Interpolation.pow5In.apply(1.0f, 0.0f, (this.duration - 0.25f) * 4.0f) : Interpolation.fade.apply(0.0f, 1.0f, this.duration * 4.0f);
         this.scale += Gdx.graphics.getDeltaTime() * this.scaleMultiplier;
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlyingOrbEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlyingOrbEffect.class
new file mode 100644
index 0000000..2e36ccd
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlyingOrbEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlyingOrbEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlyingOrbEffect.java
index 68ef16d..4acb16e 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlyingOrbEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlyingOrbEffect.java
@@ -53,6 +53,7 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         this.updateMovement();
+        this.isDone = true;
     }
 
     private void updateMovement() {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlyingSpikeEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlyingSpikeEffect.class
new file mode 100644
index 0000000..ffdc010
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlyingSpikeEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlyingSpikeEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlyingSpikeEffect.java
index 55cc8f2..3ad4a20 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FlyingSpikeEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FlyingSpikeEffect.java
@@ -44,6 +44,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FrostOrbActivateEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FrostOrbActivateEffect.class
new file mode 100644
index 0000000..a363303
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FrostOrbActivateEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FrostOrbActivateEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FrostOrbActivateEffect.java
index 7f7a76f..b64b2e6 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FrostOrbActivateEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FrostOrbActivateEffect.java
@@ -20,9 +20,9 @@ extends AbstractGameEffect {
 
     @Override
     public void update() {
-        AbstractDungeon.effectsQueue.add(new FrostOrbActivateParticle(0, this.x, this.y));
-        AbstractDungeon.effectsQueue.add(new FrostOrbActivateParticle(1, this.x, this.y));
-        AbstractDungeon.effectsQueue.add(new FrostOrbActivateParticle(2, this.x, this.y));
+        //AbstractDungeon.effectsQueue.add(new FrostOrbActivateParticle(0, this.x, this.y));
+        //AbstractDungeon.effectsQueue.add(new FrostOrbActivateParticle(1, this.x, this.y));
+        //AbstractDungeon.effectsQueue.add(new FrostOrbActivateParticle(2, this.x, this.y));
         this.isDone = true;
     }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FrostOrbActivateParticle.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FrostOrbActivateParticle.class
new file mode 100644
index 0000000..5b05600
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FrostOrbActivateParticle.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FrostOrbActivateParticle.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FrostOrbActivateParticle.java
index 10d9948..29e6a42 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FrostOrbActivateParticle.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FrostOrbActivateParticle.java
@@ -73,6 +73,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FrostOrbPassiveEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FrostOrbPassiveEffect.class
new file mode 100644
index 0000000..6ac3d8a
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FrostOrbPassiveEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FrostOrbPassiveEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FrostOrbPassiveEffect.java
index 7e4ee83..a26f263 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/FrostOrbPassiveEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/FrostOrbPassiveEffect.java
@@ -52,6 +52,7 @@ extends AbstractGameEffect {
         } else if (this.duration < this.effectDuration / 2.0f) {
             this.color.a = Interpolation.exp5In.apply(0.0f, this.alpha, this.duration / (this.effectDuration / 2.0f));
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GainPowerEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GainPowerEffect.class
new file mode 100644
index 0000000..43b6eb1
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GainPowerEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/GainPowerEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GainPowerEffect.java
index 500068d..78b7c4c 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/GainPowerEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GainPowerEffect.java
@@ -37,6 +37,7 @@ extends AbstractGameEffect {
         } else {
             this.color.a = Interpolation.fade.apply(0.5f, 0.0f, 1.0f - this.duration);
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GhostIgniteEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GhostIgniteEffect.class
new file mode 100644
index 0000000..dd34225
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GhostIgniteEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/GhostIgniteEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GhostIgniteEffect.java
index db989eb..df630ab 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/GhostIgniteEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GhostIgniteEffect.java
@@ -24,8 +24,8 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         for (int i = 0; i < 25; ++i) {
-            AbstractDungeon.effectsQueue.add(new FireBurstParticleEffect(this.x, this.y));
-            AbstractDungeon.effectsQueue.add(new LightFlareParticleEffect(this.x, this.y, Color.CHARTREUSE));
+            //AbstractDungeon.effectsQueue.add(new FireBurstParticleEffect(this.x, this.y));
+            //AbstractDungeon.effectsQueue.add(new LightFlareParticleEffect(this.x, this.y, Color.CHARTREUSE));
         }
         this.isDone = true;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GiantEyeEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GiantEyeEffect.class
new file mode 100644
index 0000000..3293a27
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GiantEyeEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/GiantEyeEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GiantEyeEffect.java
index 3721c6a..ead1bf2 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/GiantEyeEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GiantEyeEffect.java
@@ -52,6 +52,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GiantFireEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GiantFireEffect.class
new file mode 100644
index 0000000..11b05f9
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GiantFireEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/GiantFireEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GiantFireEffect.java
index 3a088f2..261ea4b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/GiantFireEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GiantFireEffect.java
@@ -57,6 +57,7 @@ extends AbstractGameEffect {
         } else if (this.duration < 1.0f) {
             this.color.a = Interpolation.fade.apply(0.0f, this.brightness, this.duration / 1.0f);
         }
+        this.isDone = true;
     }
 
     private void setImg() {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GiantTextEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GiantTextEffect.class
new file mode 100644
index 0000000..b3c876d
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GiantTextEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/GiantTextEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GiantTextEffect.java
index 500e03b..e1f8adc 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/GiantTextEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GiantTextEffect.java
@@ -44,6 +44,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GoldenSlashEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GoldenSlashEffect.class
new file mode 100644
index 0000000..953f327
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GoldenSlashEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/GoldenSlashEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GoldenSlashEffect.java
index 5f4291b..855c45e 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/GoldenSlashEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GoldenSlashEffect.java
@@ -29,9 +29,9 @@ extends AbstractGameEffect {
         CardCrawlGame.sound.playA("ATTACK_IRON_2", -0.4f);
         CardCrawlGame.sound.playA("ATTACK_HEAVY", -0.4f);
         if (this.isVertical) {
-            AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x, this.y - 30.0f * Settings.scale, 0.0f, -500.0f, 180.0f, 5.0f, Color.GOLD, Color.GOLD));
+            //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x, this.y - 30.0f * Settings.scale, 0.0f, -500.0f, 180.0f, 5.0f, Color.GOLD, Color.GOLD));
         } else {
-            AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x, this.y - 30.0f * Settings.scale, -500.0f, -500.0f, 135.0f, 4.0f, Color.GOLD, Color.GOLD));
+            //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x, this.y - 30.0f * Settings.scale, -500.0f, -500.0f, 135.0f, 4.0f, Color.GOLD, Color.GOLD));
         }
         this.isDone = true;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GrandFinalEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GrandFinalEffect.class
new file mode 100644
index 0000000..6d7e5ac
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GrandFinalEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/GrandFinalEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GrandFinalEffect.java
index 2361a46..6af2235 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/GrandFinalEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/GrandFinalEffect.java
@@ -21,18 +21,19 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         if (this.duration == 2.0f) {
-            AbstractDungeon.effectsQueue.add(new SpotlightEffect());
+            //AbstractDungeon.effectsQueue.add(new SpotlightEffect());
         }
         this.duration -= Gdx.graphics.getDeltaTime();
         this.timer -= Gdx.graphics.getDeltaTime();
         if (this.timer < 0.0f) {
             this.timer += 0.1f;
-            AbstractDungeon.effectsQueue.add(new PetalEffect());
-            AbstractDungeon.effectsQueue.add(new PetalEffect());
+            //AbstractDungeon.effectsQueue.add(new PetalEffect());
+            //AbstractDungeon.effectsQueue.add(new PetalEffect());
         }
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HbBlockBrokenEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HbBlockBrokenEffect.class
new file mode 100644
index 0000000..8a4c280
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HbBlockBrokenEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HbBlockBrokenEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HbBlockBrokenEffect.java
index 4a25590..cfa04c6 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HbBlockBrokenEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HbBlockBrokenEffect.java
@@ -49,6 +49,7 @@ extends AbstractGameEffect {
             this.offsetX -= Gdx.graphics.getDeltaTime() * INITIAL_VX;
             this.offsetAngle += Gdx.graphics.getDeltaTime() * 5.0f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealEffect.class
new file mode 100644
index 0000000..860ba55
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HealEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealEffect.java
index 668fd34..055e46b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HealEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealEffect.java
@@ -27,9 +27,9 @@ extends AbstractGameEffect {
         } else {
             CardCrawlGame.sound.play("HEAL_3");
         }
-        AbstractDungeon.effectsQueue.add(new HealNumberEffect(x, y, amount));
+        //AbstractDungeon.effectsQueue.add(new HealNumberEffect(x, y, amount));
         for (int i = 0; i < 18; ++i) {
-            AbstractDungeon.effectsQueue.add(new HealVerticalLineEffect(x + MathUtils.random(-X_JITTER * 1.5f, X_JITTER * 1.5f), y + OFFSET_Y + MathUtils.random(-Y_JITTER, Y_JITTER)));
+            //AbstractDungeon.effectsQueue.add(new HealVerticalLineEffect(x + MathUtils.random(-X_JITTER * 1.5f, X_JITTER * 1.5f), y + OFFSET_Y + MathUtils.random(-Y_JITTER, Y_JITTER)));
         }
     }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealNumberEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealNumberEffect.class
new file mode 100644
index 0000000..2980eda
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealNumberEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HealNumberEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealNumberEffect.java
index 094384a..6535fea 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HealNumberEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealNumberEffect.java
@@ -47,6 +47,7 @@ extends AbstractGameEffect {
         if (this.scale <= 0.0f) {
             this.scale = 0.01f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealPanelEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealPanelEffect.class
new file mode 100644
index 0000000..e2afac8
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealPanelEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HealPanelEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealPanelEffect.java
index 6369534..efd5a46 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HealPanelEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealPanelEffect.java
@@ -36,6 +36,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealVerticalLineEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealVerticalLineEffect.class
new file mode 100644
index 0000000..ef552e6
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealVerticalLineEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HealVerticalLineEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealVerticalLineEffect.java
index c9c5e0f..7daa7a0 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HealVerticalLineEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HealVerticalLineEffect.java
@@ -54,6 +54,7 @@ extends AbstractGameEffect {
             this.isDone = true;
             this.color.a = 0.0f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HeartBuffEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HeartBuffEffect.class
new file mode 100644
index 0000000..9472ebe
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HeartBuffEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HeartBuffEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HeartBuffEffect.java
index 6ce8998..b0250f6 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HeartBuffEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HeartBuffEffect.java
@@ -32,13 +32,14 @@ extends AbstractGameEffect {
         this.scale -= Gdx.graphics.getDeltaTime();
         if (this.scale < 0.0f) {
             this.scale = 0.05f;
-            AbstractDungeon.effectsQueue.add(new SwirlyBloodEffect(this.x + MathUtils.random(-150.0f, 150.0f) * Settings.scale, this.y + MathUtils.random(-150.0f, 150.0f) * Settings.scale));
-            AbstractDungeon.effectsQueue.add(new SwirlyBloodEffect(this.x + MathUtils.random(-150.0f, 150.0f) * Settings.scale, this.y + MathUtils.random(-150.0f, 150.0f) * Settings.scale));
+            //AbstractDungeon.effectsQueue.add(new SwirlyBloodEffect(this.x + MathUtils.random(-150.0f, 150.0f) * Settings.scale, this.y + MathUtils.random(-150.0f, 150.0f) * Settings.scale));
+            //AbstractDungeon.effectsQueue.add(new SwirlyBloodEffect(this.x + MathUtils.random(-150.0f, 150.0f) * Settings.scale, this.y + MathUtils.random(-150.0f, 150.0f) * Settings.scale));
         }
         this.duration -= Gdx.graphics.getDeltaTime();
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HeartMegaDebuffEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HeartMegaDebuffEffect.class
new file mode 100644
index 0000000..4e7fa0d
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HeartMegaDebuffEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HeartMegaDebuffEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HeartMegaDebuffEffect.java
index 7ddf899..628a028 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HeartMegaDebuffEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HeartMegaDebuffEffect.java
@@ -30,6 +30,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HemokinesisEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HemokinesisEffect.class
new file mode 100644
index 0000000..ee9782b
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HemokinesisEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HemokinesisEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HemokinesisEffect.java
index 3ee4ba8..ee4c596 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HemokinesisEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HemokinesisEffect.java
@@ -31,13 +31,14 @@ extends AbstractGameEffect {
     public void update() {
         this.scale -= Gdx.graphics.getDeltaTime();
         if (this.scale < 0.0f) {
-            AbstractDungeon.effectsQueue.add(new HemokinesisParticle(this.x + MathUtils.random(60.0f, -60.0f) * Settings.scale, this.y + MathUtils.random(60.0f, -60.0f) * Settings.scale, this.tX, this.tY, AbstractDungeon.player.flipHorizontal));
+            //AbstractDungeon.effectsQueue.add(new HemokinesisParticle(this.x + MathUtils.random(60.0f, -60.0f) * Settings.scale, this.y + MathUtils.random(60.0f, -60.0f) * Settings.scale, this.tX, this.tY, AbstractDungeon.player.flipHorizontal));
             this.scale = 0.04f;
         }
         this.duration -= Gdx.graphics.getDeltaTime();
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HemokinesisParticle.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HemokinesisParticle.class
new file mode 100644
index 0000000..306ac43
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HemokinesisParticle.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HemokinesisParticle.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HemokinesisParticle.java
index 17c0983..40bc5ff 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/HemokinesisParticle.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/HemokinesisParticle.java
@@ -58,6 +58,7 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         this.updateMovement();
+        this.isDone = true;
     }
 
     private void updateMovement() {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IceShatterEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IceShatterEffect.class
new file mode 100644
index 0000000..5f0c449
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IceShatterEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/IceShatterEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IceShatterEffect.java
index 4b3daea..87ee17d 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/IceShatterEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IceShatterEffect.java
@@ -44,6 +44,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ImpactSparkEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ImpactSparkEffect.class
new file mode 100644
index 0000000..b0be4ac
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ImpactSparkEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ImpactSparkEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ImpactSparkEffect.java
index f68e3d4..d39430b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ImpactSparkEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ImpactSparkEffect.java
@@ -54,6 +54,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/InflameEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/InflameEffect.class
new file mode 100644
index 0000000..559f6bf
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/InflameEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/InflameEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/InflameEffect.java
index 2b321e6..c3e71d6 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/InflameEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/InflameEffect.java
@@ -26,10 +26,10 @@ extends AbstractGameEffect {
         int i;
         CardCrawlGame.sound.play("ATTACK_FIRE");
         for (i = 0; i < 75; ++i) {
-            AbstractDungeon.effectsQueue.add(new FlameParticleEffect(this.x, this.y));
+            //AbstractDungeon.effectsQueue.add(new FlameParticleEffect(this.x, this.y));
         }
         for (i = 0; i < 20; ++i) {
-            AbstractDungeon.effectsQueue.add(new ExhaustEmberEffect(this.x, this.y));
+            //AbstractDungeon.effectsQueue.add(new ExhaustEmberEffect(this.x, this.y));
         }
         this.isDone = true;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IntenseZoomEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IntenseZoomEffect.class
new file mode 100644
index 0000000..c200836
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IntenseZoomEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/IntenseZoomEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IntenseZoomEffect.java
index b0c53e2..347bd99 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/IntenseZoomEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IntenseZoomEffect.java
@@ -27,12 +27,12 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         if (this.isBlack) {
-            AbstractDungeon.effectsQueue.add(new BorderFlashEffect(Color.BLACK, this.isBlack));
+            //AbstractDungeon.effectsQueue.add(new BorderFlashEffect(Color.BLACK, this.isBlack));
         } else {
-            AbstractDungeon.effectsQueue.add(new BorderFlashEffect(Settings.GOLD_COLOR, this.isBlack));
+            //AbstractDungeon.effectsQueue.add(new BorderFlashEffect(Settings.GOLD_COLOR, this.isBlack));
         }
         for (int i = 0; i < 10; ++i) {
-            AbstractDungeon.effectsQueue.add(new IntenseZoomParticle(this.x, this.y, this.isBlack));
+            //AbstractDungeon.effectsQueue.add(new IntenseZoomParticle(this.x, this.y, this.isBlack));
         }
         this.isDone = true;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IntenseZoomParticle.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IntenseZoomParticle.class
new file mode 100644
index 0000000..0a705db
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IntenseZoomParticle.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/IntenseZoomParticle.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IntenseZoomParticle.java
index 23437f1..37c6f88 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/IntenseZoomParticle.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IntenseZoomParticle.java
@@ -47,6 +47,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     public void randomize() {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IntimidateEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IntimidateEffect.class
new file mode 100644
index 0000000..28e1d03
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IntimidateEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/IntimidateEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IntimidateEffect.java
index 8f41ee2..10589e4 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/IntimidateEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IntimidateEffect.java
@@ -30,11 +30,12 @@ extends AbstractGameEffect {
         this.vfxTimer -= Gdx.graphics.getDeltaTime();
         if (this.vfxTimer < 0.0f) {
             this.vfxTimer = 0.016f;
-            AbstractDungeon.effectsQueue.add(new WobblyLineEffect(this.x, this.y, Settings.CREAM_COLOR.cpy()));
+            //AbstractDungeon.effectsQueue.add(new WobblyLineEffect(this.x, this.y, Settings.CREAM_COLOR.cpy()));
         }
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/InversionBeamEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/InversionBeamEffect.class
new file mode 100644
index 0000000..6030cbc
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/InversionBeamEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/InversionBeamEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/InversionBeamEffect.java
index 98b574d..2c9ff13 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/InversionBeamEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/InversionBeamEffect.java
@@ -32,6 +32,7 @@ extends AbstractGameEffect {
             this.y = this.duration < this.startingDuration / 2.0f ? Interpolation.fade.apply(0.01f, 50.0f, this.duration / (this.startingDuration / 2.0f)) * Settings.scale : Interpolation.fade.apply(50.0f, 0.01f, (this.duration - this.startingDuration / 2.0f) / (this.startingDuration / 2.0f)) * Settings.scale;
         }
         this.scale = Interpolation.bounce.apply(0.01f, 5.0f, this.duration / this.startingDuration);
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IronWaveEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IronWaveEffect.class
new file mode 100644
index 0000000..2fe2272
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IronWaveEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/IronWaveEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IronWaveEffect.java
index 74e0fbd..683c2d2 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/IronWaveEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IronWaveEffect.java
@@ -32,12 +32,13 @@ extends AbstractGameEffect {
             this.waveTimer = 0.03f;
             this.x += 160.0f * Settings.scale;
             this.y -= 15.0f * Settings.scale;
-            AbstractDungeon.effectsQueue.add(new IronWaveParticle(this.x, this.y));
+            //AbstractDungeon.effectsQueue.add(new IronWaveParticle(this.x, this.y));
             if (this.x > this.cX) {
                 this.isDone = true;
                 CardCrawlGame.sound.playA("ATTACK_DAGGER_6", -0.3f);
             }
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IronWaveParticle.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IronWaveParticle.class
new file mode 100644
index 0000000..f6d4df8
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IronWaveParticle.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/IronWaveParticle.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IronWaveParticle.java
index fd8add4..40f2a13 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/IronWaveParticle.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/IronWaveParticle.java
@@ -47,12 +47,13 @@ extends AbstractGameEffect {
         } else if (this.duration < 0.2f) {
             if (!this.impactHook) {
                 this.impactHook = true;
-                CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.LOW, ScreenShake.ShakeDur.SHORT, false);
+                //CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.LOW, ScreenShake.ShakeDur.SHORT, false);
             }
             this.color.a = Interpolation.pow2Out.apply(0.0f, 1.0f, this.duration * 5.0f);
         } else {
             this.color.a = Interpolation.fade.apply(1.0f, 0.0f, this.duration / 0.5f);
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LaserBeamEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LaserBeamEffect.class
new file mode 100644
index 0000000..427f5a3
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LaserBeamEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LaserBeamEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LaserBeamEffect.java
index 5ea6fe9..b1a5927 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LaserBeamEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LaserBeamEffect.java
@@ -37,16 +37,17 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         if (!this.playedSfx) {
-            AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(Color.SKY));
+            //AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(Color.SKY));
             this.playedSfx = true;
             CardCrawlGame.sound.play("ATTACK_MAGIC_BEAM");
-            CardCrawlGame.screenShake.rumble(2.0f);
+            //CardCrawlGame.screenShake.rumble(2.0f);
         }
         this.duration -= Gdx.graphics.getDeltaTime();
         this.color.a = this.duration > this.startingDuration / 2.0f ? Interpolation.pow2In.apply(1.0f, 0.0f, this.duration - 1.0f) : Interpolation.pow2Out.apply(0.0f, 1.0f, this.duration);
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightBulbEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightBulbEffect.class
new file mode 100644
index 0000000..0f4f857
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightBulbEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LightBulbEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightBulbEffect.java
index 03042c0..2678347 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LightBulbEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightBulbEffect.java
@@ -40,6 +40,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightFlareParticleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightFlareParticleEffect.class
new file mode 100644
index 0000000..3f3115f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightFlareParticleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LightFlareParticleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightFlareParticleEffect.java
index 7532f5f..2f67505 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LightFlareParticleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightFlareParticleEffect.java
@@ -51,6 +51,7 @@ extends AbstractGameEffect {
         this.rotation += MathUtils.cos(this.duration * this.waveSpeed) * this.waveIntensity;
         this.color.a = this.duration < 0.5f ? Interpolation.fade.apply(0.0f, 1.0f, this.duration * 2.0f) : 1.0f;
         super.update();
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightRayFlyOutEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightRayFlyOutEffect.class
new file mode 100644
index 0000000..cf191f2
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightRayFlyOutEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LightRayFlyOutEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightRayFlyOutEffect.java
index db318b6..82ad499 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LightRayFlyOutEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightRayFlyOutEffect.java
@@ -61,6 +61,7 @@ extends AbstractGameEffect {
         } else if (this.duration < 0.5f) {
             this.color.a = Interpolation.fade.apply(0.0f, 0.7f, this.duration * 2.0f);
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightningEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightningEffect.class
new file mode 100644
index 0000000..4cf8ad1
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightningEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LightningEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightningEffect.java
index 203b0e4..1d1af4c 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LightningEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightningEffect.java
@@ -37,9 +37,9 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         if (this.duration == this.startingDuration) {
-            CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.LOW, ScreenShake.ShakeDur.MED, false);
+            //CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.LOW, ScreenShake.ShakeDur.MED, false);
             for (int i = 0; i < 15; ++i) {
-                AbstractDungeon.topLevelEffectsQueue.add(new ImpactSparkEffect(this.x + MathUtils.random(-20.0f, 20.0f) * Settings.scale + 150.0f * Settings.scale, this.y + MathUtils.random(-20.0f, 20.0f) * Settings.scale));
+                //AbstractDungeon.topLevelEffectsQueue.add(new ImpactSparkEffect(this.x + MathUtils.random(-20.0f, 20.0f) * Settings.scale + 150.0f * Settings.scale, this.y + MathUtils.random(-20.0f, 20.0f) * Settings.scale));
             }
         }
         this.duration -= Gdx.graphics.getDeltaTime();
@@ -47,6 +47,7 @@ extends AbstractGameEffect {
             this.isDone = true;
         }
         this.color.a = Interpolation.bounceIn.apply(this.duration * 2.0f);
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightningOrbActivateEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightningOrbActivateEffect.class
new file mode 100644
index 0000000..6d915e2
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightningOrbActivateEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LightningOrbActivateEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightningOrbActivateEffect.java
index 532e600..1935cfd 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LightningOrbActivateEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightningOrbActivateEffect.java
@@ -54,6 +54,7 @@ extends AbstractGameEffect {
         if (this.color.a < 0.0f) {
             this.color.a = 0.0f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightningOrbPassiveEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightningOrbPassiveEffect.class
new file mode 100644
index 0000000..b11c37d
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightningOrbPassiveEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LightningOrbPassiveEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightningOrbPassiveEffect.java
index aea0115..1ad0606 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LightningOrbPassiveEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LightningOrbPassiveEffect.java
@@ -49,6 +49,7 @@ extends AbstractGameEffect {
             this.img = ImageMaster.LIGHTNING_PASSIVE_VFX.get(this.index);
             this.duration = this.intervalDuration;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LoseHPEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LoseHPEffect.class
new file mode 100644
index 0000000..b82e9cc
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LoseHPEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LoseHPEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LoseHPEffect.java
index ec9fddc..3b5864d 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LoseHPEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LoseHPEffect.java
@@ -14,8 +14,8 @@ import com.megacrit.cardcrawl.vfx.combat.DamageNumberEffect;
 public class LoseHPEffect
 extends AbstractGameEffect {
     public LoseHPEffect(AbstractCreature target, float x, float y, int number) {
-        AbstractDungeon.effectList.add(new DamageNumberEffect(target, x, y, number));
-        CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.MED, ScreenShake.ShakeDur.SHORT, false);
+        //AbstractDungeon.effectList.add(new DamageNumberEffect(target, x, y, number));
+        //CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.MED, ScreenShake.ShakeDur.SHORT, false);
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LosePowerEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LosePowerEffect.class
new file mode 100644
index 0000000..4d97064
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LosePowerEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LosePowerEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LosePowerEffect.java
index 2a57c95..964c694 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/LosePowerEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/LosePowerEffect.java
@@ -75,6 +75,7 @@ extends AbstractGameEffect {
             this.isDone = true;
             this.color.a = 0.0f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/MindblastEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/MindblastEffect.class
new file mode 100644
index 0000000..7b275d2
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/MindblastEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/MindblastEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/MindblastEffect.java
index 817f672..c435cf4 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/MindblastEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/MindblastEffect.java
@@ -39,16 +39,17 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         if (!this.playedSfx) {
-            AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(Color.SKY));
+            //AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(Color.SKY));
             this.playedSfx = true;
             CardCrawlGame.sound.play("ATTACK_MAGIC_BEAM_SHORT");
-            CardCrawlGame.screenShake.rumble(2.0f);
+            //CardCrawlGame.screenShake.rumble(2.0f);
         }
         this.duration -= Gdx.graphics.getDeltaTime();
         this.color.a = this.duration > this.startingDuration / 2.0f ? Interpolation.pow2In.apply(1.0f, 0.0f, this.duration - 0.5f) : Interpolation.pow2Out.apply(0.0f, 1.0f, this.duration);
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/MiracleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/MiracleEffect.class
new file mode 100644
index 0000000..10185c9
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/MiracleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/MiracleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/MiracleEffect.java
index 7c15bc8..a176f54 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/MiracleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/MiracleEffect.java
@@ -62,6 +62,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/MoveNameEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/MoveNameEffect.class
new file mode 100644
index 0000000..6486d5f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/MoveNameEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/MoveNameEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/MoveNameEffect.java
index 9706a52..128bc1d 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/MoveNameEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/MoveNameEffect.java
@@ -52,6 +52,7 @@ extends AbstractGameEffect {
             this.color.a = 1.0f;
             this.color2.a = 1.0f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OfferingEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OfferingEffect.class
new file mode 100644
index 0000000..ae0e5db
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OfferingEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/OfferingEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OfferingEffect.java
index 185a8e0..26e044d 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/OfferingEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OfferingEffect.java
@@ -27,24 +27,24 @@ extends AbstractGameEffect {
                 case 0: {
                     CardCrawlGame.sound.playA("ATTACK_FIRE", -0.5f);
                     CardCrawlGame.sound.playA("BLOOD_SPLAT", -0.75f);
-                    AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(new Color(1.0f, 0.1f, 0.1f, 1.0f)));
-                    AbstractDungeon.effectsQueue.add(new WaterDropEffect(AbstractDungeon.player.hb.cX, AbstractDungeon.player.hb.cY + 250.0f * Settings.scale));
+                    //AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(new Color(1.0f, 0.1f, 0.1f, 1.0f)));
+                    //AbstractDungeon.effectsQueue.add(new WaterDropEffect(AbstractDungeon.player.hb.cX, AbstractDungeon.player.hb.cY + 250.0f * Settings.scale));
                     break;
                 }
                 case 1: {
-                    AbstractDungeon.effectsQueue.add(new WaterDropEffect(AbstractDungeon.player.hb.cX + 150.0f * Settings.scale, AbstractDungeon.player.hb.cY - 80.0f * Settings.scale));
+                    //AbstractDungeon.effectsQueue.add(new WaterDropEffect(AbstractDungeon.player.hb.cX + 150.0f * Settings.scale, AbstractDungeon.player.hb.cY - 80.0f * Settings.scale));
                     break;
                 }
                 case 2: {
-                    AbstractDungeon.effectsQueue.add(new WaterDropEffect(AbstractDungeon.player.hb.cX - 200.0f * Settings.scale, AbstractDungeon.player.hb.cY + 50.0f * Settings.scale));
+                    //AbstractDungeon.effectsQueue.add(new WaterDropEffect(AbstractDungeon.player.hb.cX - 200.0f * Settings.scale, AbstractDungeon.player.hb.cY + 50.0f * Settings.scale));
                     break;
                 }
                 case 3: {
-                    AbstractDungeon.effectsQueue.add(new WaterDropEffect(AbstractDungeon.player.hb.cX + 200.0f * Settings.scale, AbstractDungeon.player.hb.cY + 50.0f * Settings.scale));
+                    //AbstractDungeon.effectsQueue.add(new WaterDropEffect(AbstractDungeon.player.hb.cX + 200.0f * Settings.scale, AbstractDungeon.player.hb.cY + 50.0f * Settings.scale));
                     break;
                 }
                 case 4: {
-                    AbstractDungeon.effectsQueue.add(new WaterDropEffect(AbstractDungeon.player.hb.cX - 150.0f * Settings.scale, AbstractDungeon.player.hb.cY - 80.0f * Settings.scale));
+                    //AbstractDungeon.effectsQueue.add(new WaterDropEffect(AbstractDungeon.player.hb.cX - 150.0f * Settings.scale, AbstractDungeon.player.hb.cY - 80.0f * Settings.scale));
                     break;
                 }
             }
@@ -53,6 +53,7 @@ extends AbstractGameEffect {
                 this.isDone = true;
             }
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OmegaFlashEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OmegaFlashEffect.class
new file mode 100644
index 0000000..94bf697
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OmegaFlashEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/OmegaFlashEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OmegaFlashEffect.java
index 1ae0f9a..fd9c0dd 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/OmegaFlashEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OmegaFlashEffect.java
@@ -32,6 +32,7 @@ extends AbstractGameEffect {
             this.playedSound = true;
         }
         super.update();
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OrbFlareEffect$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OrbFlareEffect$1.class
new file mode 100644
index 0000000..cfe6537
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OrbFlareEffect$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OrbFlareEffect$OrbFlareColor.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OrbFlareEffect$OrbFlareColor.class
new file mode 100644
index 0000000..794f278
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OrbFlareEffect$OrbFlareColor.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OrbFlareEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OrbFlareEffect.class
new file mode 100644
index 0000000..659905c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OrbFlareEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/OrbFlareEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OrbFlareEffect.java
index e5e62b8..deb293f 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/OrbFlareEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/OrbFlareEffect.java
@@ -74,6 +74,7 @@ extends AbstractGameEffect {
         this.scaleY = Interpolation.elasticIn.apply(2.2f, 0.8f, this.duration * 2.0f);
         this.scale = Interpolation.elasticIn.apply(2.1f, 1.9f, this.duration * 2.0f);
         this.color2.a = this.color.a = Interpolation.pow2Out.apply(0.0f, 0.6f, this.duration * 2.0f);
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PingHpEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PingHpEffect.class
new file mode 100644
index 0000000..3f31d1f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PingHpEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PingHpEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PingHpEffect.java
index 23cebc3..22668ff 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PingHpEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PingHpEffect.java
@@ -29,6 +29,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbActivateEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbActivateEffect.class
new file mode 100644
index 0000000..984c357
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbActivateEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbActivateEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbActivateEffect.java
index 6504344..383bda6 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbActivateEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbActivateEffect.java
@@ -21,7 +21,7 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         for (int i = 0; i < 12; ++i) {
-            AbstractDungeon.effectsQueue.add(new PlasmaOrbActivateParticle(this.x, this.y));
+            //AbstractDungeon.effectsQueue.add(new PlasmaOrbActivateParticle(this.x, this.y));
         }
         this.isDone = true;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbActivateParticle.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbActivateParticle.class
new file mode 100644
index 0000000..deb2d1e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbActivateParticle.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbActivateParticle.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbActivateParticle.java
index c93892e..3c3594f 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbActivateParticle.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbActivateParticle.java
@@ -43,6 +43,7 @@ extends AbstractGameEffect {
         this.x = Interpolation.swing.apply(this.sX, this.tX, this.duration);
         this.y = Interpolation.swing.apply(this.sY, this.tY, this.duration);
         super.update();
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbPassiveEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbPassiveEffect.class
new file mode 100644
index 0000000..ff64954
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbPassiveEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbPassiveEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbPassiveEffect.java
index 706e675..1c3a1ac 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbPassiveEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PlasmaOrbPassiveEffect.java
@@ -43,6 +43,7 @@ extends AbstractGameEffect {
         this.x = Interpolation.swingOut.apply(this.tX, this.sX, this.duration);
         this.y = Interpolation.swingOut.apply(this.tY, this.sY, this.duration);
         super.update();
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PotionBounceEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PotionBounceEffect.class
new file mode 100644
index 0000000..4b1d8d9
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PotionBounceEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PotionBounceEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PotionBounceEffect.java
index 054f219..ecf00b2 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PotionBounceEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PotionBounceEffect.java
@@ -79,6 +79,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerBuffEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerBuffEffect.class
new file mode 100644
index 0000000..88d506a
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerBuffEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PowerBuffEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerBuffEffect.java
index 1a96bb8..6aea1be 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PowerBuffEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerBuffEffect.java
@@ -41,10 +41,10 @@ extends AbstractGameEffect {
         if (this.duration == this.startingDuration && !Settings.DISABLE_EFFECTS) {
             int i;
             for (i = 0; i < 10; ++i) {
-                AbstractDungeon.effectsQueue.add(new FlyingSpikeEffect(this.x - MathUtils.random(-120.0f, 120.0f) * Settings.scale, this.y + MathUtils.random(90.0f, 110.0f) * Settings.scale, -90.0f, 0.0f, MathUtils.random(-200.0f, -50.0f) * Settings.scale, Settings.GREEN_TEXT_COLOR));
+                //AbstractDungeon.effectsQueue.add(new FlyingSpikeEffect(this.x - MathUtils.random(-120.0f, 120.0f) * Settings.scale, this.y + MathUtils.random(90.0f, 110.0f) * Settings.scale, -90.0f, 0.0f, MathUtils.random(-200.0f, -50.0f) * Settings.scale, Settings.GREEN_TEXT_COLOR));
             }
             for (i = 0; i < 10; ++i) {
-                AbstractDungeon.effectsQueue.add(new FlyingSpikeEffect(this.x - MathUtils.random(-120.0f, 120.0f) * Settings.scale, this.y + MathUtils.random(90.0f, 110.0f) * Settings.scale, 90.0f, 0.0f, MathUtils.random(200.0f, 50.0f) * Settings.scale, Settings.GREEN_TEXT_COLOR));
+                //AbstractDungeon.effectsQueue.add(new FlyingSpikeEffect(this.x - MathUtils.random(-120.0f, 120.0f) * Settings.scale, this.y + MathUtils.random(90.0f, 110.0f) * Settings.scale, 90.0f, 0.0f, MathUtils.random(200.0f, 50.0f) * Settings.scale, Settings.GREEN_TEXT_COLOR));
             }
         }
         this.offsetY = Interpolation.exp10In.apply(TARGET_OFFSET_Y, STARTING_OFFSET_Y, this.duration / 2.0f);
@@ -57,6 +57,7 @@ extends AbstractGameEffect {
             this.isDone = true;
             this.duration = 0.0f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerDebuffEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerDebuffEffect.class
new file mode 100644
index 0000000..7b24a21
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerDebuffEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PowerDebuffEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerDebuffEffect.java
index fff3d37..8367271 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PowerDebuffEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerDebuffEffect.java
@@ -42,10 +42,10 @@ extends AbstractGameEffect {
         if (this.duration == this.startingDuration && !Settings.DISABLE_EFFECTS) {
             int i;
             for (i = 0; i < 10; ++i) {
-                AbstractDungeon.effectsQueue.add(new FlyingSpikeEffect(this.x - MathUtils.random(20.0f) * Settings.scale, this.y + MathUtils.random(40.0f, 160.0f) * Settings.scale, MathUtils.random(360.0f), MathUtils.random(50.0f, 400.0f) * Settings.scale, 0.0f, Settings.RED_TEXT_COLOR));
+                //AbstractDungeon.effectsQueue.add(new FlyingSpikeEffect(this.x - MathUtils.random(20.0f) * Settings.scale, this.y + MathUtils.random(40.0f, 160.0f) * Settings.scale, MathUtils.random(360.0f), MathUtils.random(50.0f, 400.0f) * Settings.scale, 0.0f, Settings.RED_TEXT_COLOR));
             }
             for (i = 0; i < 10; ++i) {
-                AbstractDungeon.effectsQueue.add(new FlyingSpikeEffect(this.x + MathUtils.random(20.0f) * Settings.scale, this.y + MathUtils.random(40.0f, 160.0f) * Settings.scale, MathUtils.random(360.0f), MathUtils.random(-400.0f, -50.0f) * Settings.scale, 0.0f, Settings.RED_TEXT_COLOR));
+                //AbstractDungeon.effectsQueue.add(new FlyingSpikeEffect(this.x + MathUtils.random(20.0f) * Settings.scale, this.y + MathUtils.random(40.0f, 160.0f) * Settings.scale, MathUtils.random(360.0f), MathUtils.random(-400.0f, -50.0f) * Settings.scale, 0.0f, Settings.RED_TEXT_COLOR));
             }
         }
         this.offsetY = Interpolation.exp10In.apply(TARGET_OFFSET_Y, STARTING_OFFSET_Y, this.duration / 2.0f);
@@ -58,6 +58,7 @@ extends AbstractGameEffect {
             this.isDone = true;
             this.duration = 0.0f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerExpireTextEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerExpireTextEffect.class
new file mode 100644
index 0000000..509e1e6
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerExpireTextEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PowerExpireTextEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerExpireTextEffect.java
index f8b2d61..d1b68a4 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PowerExpireTextEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerExpireTextEffect.java
@@ -50,10 +50,10 @@ extends AbstractGameEffect {
             int i;
             this.spikeEffectTriggered = true;
             for (i = 0; i < 10; ++i) {
-                AbstractDungeon.effectsQueue.add(new FlyingSpikeEffect(this.x - MathUtils.random(20.0f) * Settings.scale + 70.0f * Settings.scale, this.y + MathUtils.random(STARTING_OFFSET_Y, TARGET_OFFSET_Y) * Settings.scale, 0.0f, MathUtils.random(50.0f, 400.0f) * Settings.scale, 0.0f, Settings.BLUE_TEXT_COLOR));
+                //AbstractDungeon.effectsQueue.add(new FlyingSpikeEffect(this.x - MathUtils.random(20.0f) * Settings.scale + 70.0f * Settings.scale, this.y + MathUtils.random(STARTING_OFFSET_Y, TARGET_OFFSET_Y) * Settings.scale, 0.0f, MathUtils.random(50.0f, 400.0f) * Settings.scale, 0.0f, Settings.BLUE_TEXT_COLOR));
             }
             for (i = 0; i < 10; ++i) {
-                AbstractDungeon.effectsQueue.add(new FlyingSpikeEffect(this.x + MathUtils.random(20.0f) * Settings.scale, this.y + MathUtils.random(STARTING_OFFSET_Y, TARGET_OFFSET_Y) * Settings.scale, 0.0f, MathUtils.random(-400.0f, -50.0f) * Settings.scale, 0.0f, Settings.BLUE_TEXT_COLOR));
+                //AbstractDungeon.effectsQueue.add(new FlyingSpikeEffect(this.x + MathUtils.random(20.0f) * Settings.scale, this.y + MathUtils.random(STARTING_OFFSET_Y, TARGET_OFFSET_Y) * Settings.scale, 0.0f, MathUtils.random(-400.0f, -50.0f) * Settings.scale, 0.0f, Settings.BLUE_TEXT_COLOR));
             }
         }
         this.offsetY = Interpolation.exp10In.apply(TARGET_OFFSET_Y, STARTING_OFFSET_Y, this.duration / 2.0f);
@@ -63,6 +63,7 @@ extends AbstractGameEffect {
             this.isDone = true;
             this.duration = 0.0f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerIconShowEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerIconShowEffect.class
new file mode 100644
index 0000000..4b727e2
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerIconShowEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PowerIconShowEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerIconShowEffect.java
index 9fb7cd2..474aafd 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PowerIconShowEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PowerIconShowEffect.java
@@ -43,6 +43,7 @@ extends AbstractGameEffect {
         super.update();
         this.offsetY = MathUtils.lerp(this.offsetY, TARGET_OFFSET_Y, Gdx.graphics.getDeltaTime() * 5.0f);
         this.y += Gdx.graphics.getDeltaTime() * 12.0f * Settings.scale;
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PressurePointEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PressurePointEffect.class
new file mode 100644
index 0000000..b9348c9
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PressurePointEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PressurePointEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PressurePointEffect.java
index 67c844b..3967833 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/PressurePointEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/PressurePointEffect.java
@@ -46,6 +46,7 @@ extends AbstractGameEffect {
         }
         this.color.a = 1.0f - this.duration;
         this.scale = this.duration * Settings.scale + this.scaleMultiplier;
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ReaperEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ReaperEffect.class
new file mode 100644
index 0000000..f24cba7
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ReaperEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ReaperEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ReaperEffect.java
index 7c13a98..b3de94b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ReaperEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ReaperEffect.java
@@ -18,7 +18,7 @@ extends AbstractGameEffect {
         CardCrawlGame.sound.playA("ORB_LIGHTNING_PASSIVE", -0.3f);
         for (AbstractMonster m : AbstractDungeon.getMonsters().monsters) {
             if (m.isDeadOrEscaped()) continue;
-            AbstractDungeon.effectsQueue.add(new LightningEffect(m.hb.cX, m.hb.cY));
+            //AbstractDungeon.effectsQueue.add(new LightningEffect(m.hb.cX, m.hb.cY));
         }
         this.isDone = true;
     }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RedFireBurstParticleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RedFireBurstParticleEffect.class
new file mode 100644
index 0000000..8386b36
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RedFireBurstParticleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/RedFireBurstParticleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RedFireBurstParticleEffect.java
index fc800e5..3ed4d6e 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/RedFireBurstParticleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RedFireBurstParticleEffect.java
@@ -59,6 +59,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RedFireballEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RedFireballEffect.class
new file mode 100644
index 0000000..af18e61
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RedFireballEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/RedFireballEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RedFireballEffect.java
index dc415a0..edd8f96 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/RedFireballEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RedFireballEffect.java
@@ -41,13 +41,14 @@ extends AbstractGameEffect {
         this.vfxTimer -= Gdx.graphics.getDeltaTime();
         if (this.vfxTimer < 0.0f) {
             this.vfxTimer += 0.016f;
-            AbstractDungeon.effectsQueue.add(new RedFireBurstParticleEffect(this.x, this.y, this.timesUpgraded));
-            AbstractDungeon.effectsQueue.add(new RedFireBurstParticleEffect(this.x, this.y, this.timesUpgraded));
+            //AbstractDungeon.effectsQueue.add(new RedFireBurstParticleEffect(this.x, this.y, this.timesUpgraded));
+            //AbstractDungeon.effectsQueue.add(new RedFireBurstParticleEffect(this.x, this.y, this.timesUpgraded));
         }
         this.duration -= Gdx.graphics.getDeltaTime();
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RipAndTearEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RipAndTearEffect.class
new file mode 100644
index 0000000..c43b2b3
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RipAndTearEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/RipAndTearEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RipAndTearEffect.java
index 94b1880..fa463b2 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/RipAndTearEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RipAndTearEffect.java
@@ -35,14 +35,14 @@ extends AbstractGameEffect {
         }
         if (!flipped) {
             float baseAngle = 135.0f;
-            AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x - 45.0f, this.y + 45.0f, -150.0f, -150.0f, baseAngle + MathUtils.random(-10.0f, 10.0f), this.color, this.color2));
-            AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x, this.y, -150.0f, -150.0f, baseAngle + MathUtils.random(-10.0f, 10.0f), this.color, this.color2));
-            AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + 45.0f, this.y - 45.0f, -150.0f, -150.0f, baseAngle + MathUtils.random(-10.0f, 10.0f), this.color, this.color2));
+            //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x - 45.0f, this.y + 45.0f, -150.0f, -150.0f, baseAngle + MathUtils.random(-10.0f, 10.0f), this.color, this.color2));
+            //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x, this.y, -150.0f, -150.0f, baseAngle + MathUtils.random(-10.0f, 10.0f), this.color, this.color2));
+            //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + 45.0f, this.y - 45.0f, -150.0f, -150.0f, baseAngle + MathUtils.random(-10.0f, 10.0f), this.color, this.color2));
         } else {
             float baseAngle = -135.0f;
-            AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x - 45.0f, this.y - 45.0f, 150.0f, -150.0f, baseAngle + MathUtils.random(-10.0f, 10.0f), this.color, this.color2));
-            AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x, this.y, 150.0f, -150.0f, baseAngle + MathUtils.random(-10.0f, 10.0f), this.color, this.color2));
-            AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + 40.0f, this.y + 40.0f, 150.0f, -150.0f, baseAngle + MathUtils.random(-10.0f, 10.0f), this.color, this.color2));
+            //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x - 45.0f, this.y - 45.0f, 150.0f, -150.0f, baseAngle + MathUtils.random(-10.0f, 10.0f), this.color, this.color2));
+            //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x, this.y, 150.0f, -150.0f, baseAngle + MathUtils.random(-10.0f, 10.0f), this.color, this.color2));
+            //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + 40.0f, this.y + 40.0f, 150.0f, -150.0f, baseAngle + MathUtils.random(-10.0f, 10.0f), this.color, this.color2));
         }
         flipped = !flipped;
         this.isDone = true;
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RoomTintEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RoomTintEffect.class
new file mode 100644
index 0000000..a8a79cd
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RoomTintEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/RoomTintEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RoomTintEffect.java
index 09fa21a..927040e 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/RoomTintEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/RoomTintEffect.java
@@ -40,6 +40,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SanctityEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SanctityEffect.class
new file mode 100644
index 0000000..756ee34
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SanctityEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SanctityEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SanctityEffect.java
index 832b089..c644e96 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SanctityEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SanctityEffect.java
@@ -30,12 +30,13 @@ extends AbstractGameEffect {
             --this.count;
             this.vfxTimer = MathUtils.random(0.0f, 0.02f);
             for (int i = 0; i < 3; ++i) {
-                AbstractDungeon.effectsQueue.add(new LightRayFlyOutEffect(this.x, this.y, new Color(1.0f, 0.9f, 0.7f, 0.0f)));
+                //AbstractDungeon.effectsQueue.add(new LightRayFlyOutEffect(this.x, this.y, new Color(1.0f, 0.9f, 0.7f, 0.0f)));
             }
         }
         if (this.count <= 0) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ScrapeEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ScrapeEffect.class
new file mode 100644
index 0000000..0f4c96e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ScrapeEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ScrapeEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ScrapeEffect.java
index bfc72b4..5019f73 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ScrapeEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ScrapeEffect.java
@@ -40,10 +40,10 @@ extends AbstractGameEffect {
         float dX = -150.0f;
         float dY = -400.0f;
         float angle = 155.0f;
-        AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + sX * 1.5f + oX, this.y + sY * 1.5f + oY, dX, dY, angle, this.color, this.color2));
-        AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + sX * 0.5f + oX, this.y + sY * 0.5f + oY, dX, dY, angle, this.color, this.color2));
-        AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x - sX * 0.5f + oX, this.y - sY * 0.5f + oY, dX, dY, angle, this.color, this.color2));
-        AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x - sX * 1.5f + oX, this.y - sY * 1.5f + oY, dX, dY, angle, this.color, this.color2));
+        //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + sX * 1.5f + oX, this.y + sY * 1.5f + oY, dX, dY, angle, this.color, this.color2));
+        //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + sX * 0.5f + oX, this.y + sY * 0.5f + oY, dX, dY, angle, this.color, this.color2));
+        //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x - sX * 0.5f + oX, this.y - sY * 0.5f + oY, dX, dY, angle, this.color, this.color2));
+        //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x - sX * 1.5f + oX, this.y - sY * 1.5f + oY, dX, dY, angle, this.color, this.color2));
         oX = 50.0f * Settings.scale;
         oY = 20.0f * Settings.scale;
         sX = 35.0f * Settings.scale;
@@ -51,10 +51,10 @@ extends AbstractGameEffect {
         dX = 150.0f;
         dY = -400.0f;
         angle = -155.0f;
-        AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + sX * 1.5f + oX, this.y + sY * 1.5f + oY, dX, dY, angle, this.color, this.color2));
-        AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + sX * 0.5f + oX, this.y + sY * 0.5f + oY, dX, dY, angle, this.color, this.color2));
-        AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x - sX * 0.5f + oX, this.y - sY * 0.5f + oY, dX, dY, angle, this.color, this.color2));
-        AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x - sX * 1.5f + oX, this.y - sY * 1.5f + oY, dX, dY, angle, this.color, this.color2));
+        //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + sX * 1.5f + oX, this.y + sY * 1.5f + oY, dX, dY, angle, this.color, this.color2));
+        //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + sX * 0.5f + oX, this.y + sY * 0.5f + oY, dX, dY, angle, this.color, this.color2));
+        //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x - sX * 0.5f + oX, this.y - sY * 0.5f + oY, dX, dY, angle, this.color, this.color2));
+        //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x - sX * 1.5f + oX, this.y - sY * 1.5f + oY, dX, dY, angle, this.color, this.color2));
         this.isDone = true;
     }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ScreenOnFireEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ScreenOnFireEffect.class
new file mode 100644
index 0000000..b162e53
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ScreenOnFireEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ScreenOnFireEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ScreenOnFireEffect.java
index 468dcc8..92dd1d3 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ScreenOnFireEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ScreenOnFireEffect.java
@@ -25,24 +25,25 @@ extends AbstractGameEffect {
     public void update() {
         if (this.duration == this.startingDuration) {
             CardCrawlGame.sound.play("GHOST_FLAMES");
-            AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(Color.FIREBRICK));
+            //AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(Color.FIREBRICK));
         }
         this.duration -= Gdx.graphics.getDeltaTime();
         this.timer -= Gdx.graphics.getDeltaTime();
         if (this.timer < 0.0f) {
-            AbstractDungeon.effectsQueue.add(new GiantFireEffect());
-            AbstractDungeon.effectsQueue.add(new GiantFireEffect());
-            AbstractDungeon.effectsQueue.add(new GiantFireEffect());
-            AbstractDungeon.effectsQueue.add(new GiantFireEffect());
-            AbstractDungeon.effectsQueue.add(new GiantFireEffect());
-            AbstractDungeon.effectsQueue.add(new GiantFireEffect());
-            AbstractDungeon.effectsQueue.add(new GiantFireEffect());
-            AbstractDungeon.effectsQueue.add(new GiantFireEffect());
+            //AbstractDungeon.effectsQueue.add(new GiantFireEffect());
+            //AbstractDungeon.effectsQueue.add(new GiantFireEffect());
+            //AbstractDungeon.effectsQueue.add(new GiantFireEffect());
+            //AbstractDungeon.effectsQueue.add(new GiantFireEffect());
+            //AbstractDungeon.effectsQueue.add(new GiantFireEffect());
+            //AbstractDungeon.effectsQueue.add(new GiantFireEffect());
+            //AbstractDungeon.effectsQueue.add(new GiantFireEffect());
+            //AbstractDungeon.effectsQueue.add(new GiantFireEffect());
             this.timer = 0.05f;
         }
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SearingBlowEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SearingBlowEffect.class
new file mode 100644
index 0000000..b6ccdc0
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SearingBlowEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SearingBlowEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SearingBlowEffect.java
index e8dcc39..ba2b9de 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SearingBlowEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SearingBlowEffect.java
@@ -21,7 +21,7 @@ extends AbstractGameEffect {
         this.x = x;
         this.y = y;
         this.timesUpgraded = timesUpgraded;
-        CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.HIGH, ScreenShake.ShakeDur.SHORT, true);
+        //CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.HIGH, ScreenShake.ShakeDur.SHORT, true);
     }
 
     @Override
@@ -29,7 +29,7 @@ extends AbstractGameEffect {
         CardCrawlGame.sound.playA("ATTACK_FIRE", 0.3f);
         CardCrawlGame.sound.playA("ATTACK_HEAVY", -0.3f);
         float dst = 180.0f + (float)this.timesUpgraded * 3.0f;
-        AbstractDungeon.effectsQueue.add(new RedFireballEffect(this.x - dst * Settings.scale, this.y, this.x + dst * Settings.scale, this.y - 50.0f * Settings.scale, this.timesUpgraded));
+        //AbstractDungeon.effectsQueue.add(new RedFireballEffect(this.x - dst * Settings.scale, this.y, this.x + dst * Settings.scale, this.y - 50.0f * Settings.scale, this.timesUpgraded));
         this.isDone = true;
     }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ShockWaveEffect$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ShockWaveEffect$1.class
new file mode 100644
index 0000000..3fea1b1
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ShockWaveEffect$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ShockWaveEffect$ShockWaveType.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ShockWaveEffect$ShockWaveType.class
new file mode 100644
index 0000000..9e31069
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ShockWaveEffect$ShockWaveType.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ShockWaveEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ShockWaveEffect.class
new file mode 100644
index 0000000..adc1621
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ShockWaveEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ShockWaveEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ShockWaveEffect.java
index 175478c..9000df8 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ShockWaveEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ShockWaveEffect.java
@@ -35,20 +35,20 @@ extends AbstractGameEffect {
         switch (this.type) {
             case ADDITIVE: {
                 for (int i = 0; i < 40; ++i) {
-                    AbstractDungeon.effectsQueue.add(new BlurWaveAdditiveEffect(this.x, this.y, this.color.cpy(), speed));
+                    //AbstractDungeon.effectsQueue.add(new BlurWaveAdditiveEffect(this.x, this.y, this.color.cpy(), speed));
                 }
                 break;
             }
             case NORMAL: {
                 for (int i = 0; i < 40; ++i) {
-                    AbstractDungeon.effectsQueue.add(new BlurWaveNormalEffect(this.x, this.y, this.color.cpy(), speed));
+                    //AbstractDungeon.effectsQueue.add(new BlurWaveNormalEffect(this.x, this.y, this.color.cpy(), speed));
                 }
                 break;
             }
             case CHAOTIC: {
                 CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.HIGH, ScreenShake.ShakeDur.SHORT, false);
                 for (int i = 0; i < 40; ++i) {
-                    AbstractDungeon.effectsQueue.add(new BlurWaveChaoticEffect(this.x, this.y, this.color.cpy(), speed));
+                    //AbstractDungeon.effectsQueue.add(new BlurWaveChaoticEffect(this.x, this.y, this.color.cpy(), speed));
                 }
                 break;
             }
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SilentGainPowerEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SilentGainPowerEffect.class
new file mode 100644
index 0000000..171097d
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SilentGainPowerEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SilentGainPowerEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SilentGainPowerEffect.java
index a54fcc8..904060d 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SilentGainPowerEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SilentGainPowerEffect.java
@@ -36,6 +36,7 @@ extends AbstractGameEffect {
         } else {
             this.color.a = Interpolation.fade.apply(0.5f, 0.0f, 1.0f - this.duration);
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmallLaserEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmallLaserEffect.class
new file mode 100644
index 0000000..647a284
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmallLaserEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SmallLaserEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmallLaserEffect.java
index 494f183..817ab94 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SmallLaserEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmallLaserEffect.java
@@ -48,6 +48,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmokeBlurEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmokeBlurEffect.class
new file mode 100644
index 0000000..54f783e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmokeBlurEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SmokeBlurEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmokeBlurEffect.java
index aea4e6c..b717363 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SmokeBlurEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmokeBlurEffect.java
@@ -61,6 +61,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.33f) {
             this.color.a = this.duration * 3.0f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmokeBombEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmokeBombEffect.class
new file mode 100644
index 0000000..750128c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmokeBombEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SmokeBombEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmokeBombEffect.java
index 1d8622f..349b3bc 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SmokeBombEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmokeBombEffect.java
@@ -26,7 +26,7 @@ extends AbstractGameEffect {
         if (this.duration == 0.2f) {
             CardCrawlGame.sound.play("ATTACK_WHIFF_2");
             for (int i = 0; i < 90; ++i) {
-                AbstractDungeon.effectsQueue.add(new SmokeBlurEffect(this.x, this.y));
+                //AbstractDungeon.effectsQueue.add(new SmokeBlurEffect(this.x, this.y));
             }
         }
         this.duration -= Gdx.graphics.getDeltaTime();
@@ -34,6 +34,7 @@ extends AbstractGameEffect {
             CardCrawlGame.sound.play("APPEAR");
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmokingEmberEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmokingEmberEffect.class
new file mode 100644
index 0000000..8650fe0
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmokingEmberEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SmokingEmberEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmokingEmberEffect.java
index e58b698..5005832 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SmokingEmberEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SmokingEmberEffect.java
@@ -39,12 +39,13 @@ extends AbstractGameEffect {
         this.smokeTimer -= Gdx.graphics.getDeltaTime();
         if (this.smokeTimer < 0.0f) {
             this.smokeTimer = 0.01f;
-            AbstractDungeon.effectsQueue.add(new FastSmokeParticle(this.x, this.y));
+            //AbstractDungeon.effectsQueue.add(new FastSmokeParticle(this.x, this.y));
         }
         this.duration -= Gdx.graphics.getDeltaTime();
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/StrikeEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/StrikeEffect.class
new file mode 100644
index 0000000..f2979fc
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/StrikeEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/StrikeEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/StrikeEffect.java
index f1bcda3..e421fde 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/StrikeEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/StrikeEffect.java
@@ -19,28 +19,28 @@ public class StrikeEffect
 extends AbstractGameEffect {
     public StrikeEffect(AbstractCreature target, float x, float y, int number) {
         int i;
-        AbstractDungeon.effectsQueue.add(new DamageNumberEffect(target, x, y, number));
+        //AbstractDungeon.effectsQueue.add(new DamageNumberEffect(target, x, y, number));
         for (i = 0; i < 18; ++i) {
-            AbstractDungeon.effectsQueue.add(new DamageImpactLineEffect(x, y));
+            //AbstractDungeon.effectsQueue.add(new DamageImpactLineEffect(x, y));
         }
         for (i = 0; i < 5; ++i) {
-            AbstractDungeon.effectsQueue.add(new DamageImpactCurvyEffect(x, y));
+            //AbstractDungeon.effectsQueue.add(new DamageImpactCurvyEffect(x, y));
         }
         if (number < 5) {
-            CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.LOW, ScreenShake.ShakeDur.SHORT, false);
+            //CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.LOW, ScreenShake.ShakeDur.SHORT, false);
         } else if (number < 20) {
-            CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.MED, ScreenShake.ShakeDur.SHORT, false);
+            //CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.MED, ScreenShake.ShakeDur.SHORT, false);
         } else {
-            CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.HIGH, ScreenShake.ShakeDur.SHORT, false);
+            //CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.HIGH, ScreenShake.ShakeDur.SHORT, false);
         }
     }
 
     public StrikeEffect(AbstractCreature target, float x, float y, String msg) {
-        AbstractDungeon.effectsQueue.add(new BlockedWordEffect(target, x, y, msg));
+        //AbstractDungeon.effectsQueue.add(new BlockedWordEffect(target, x, y, msg));
         for (int i = 0; i < 18; ++i) {
-            AbstractDungeon.effectsQueue.add(new BlockImpactLineEffect(x, y));
+            //AbstractDungeon.effectsQueue.add(new BlockImpactLineEffect(x, y));
         }
-        CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.MED, ScreenShake.ShakeDur.SHORT, false);
+        //CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.MED, ScreenShake.ShakeDur.SHORT, false);
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/StunStarEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/StunStarEffect.class
new file mode 100644
index 0000000..1406c00
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/StunStarEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/StunStarEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/StunStarEffect.java
index 4c2ee88..78dba10 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/StunStarEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/StunStarEffect.java
@@ -54,6 +54,7 @@ extends AbstractGameEffect {
             this.color.g = Interpolation.pow4Out.apply(1.0f - (this.duration - 1.0f)) * 0.9f;
             this.color.b = Interpolation.pow4Out.apply(1.0f - (this.duration - 1.0f)) * 0.3f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SweepingBeamEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SweepingBeamEffect.class
new file mode 100644
index 0000000..9355bf7
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SweepingBeamEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SweepingBeamEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SweepingBeamEffect.java
index 607c40c..56b6796 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SweepingBeamEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SweepingBeamEffect.java
@@ -61,6 +61,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SwirlyBloodEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SwirlyBloodEffect.class
new file mode 100644
index 0000000..071b48f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SwirlyBloodEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SwirlyBloodEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SwirlyBloodEffect.java
index f12c30d..ce019de 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/SwirlyBloodEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/SwirlyBloodEffect.java
@@ -51,6 +51,7 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         this.updateMovement();
+        this.isDone = true;
     }
 
     private void updateMovement() {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThirdEyeEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThirdEyeEffect.class
new file mode 100644
index 0000000..7af08d8
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThirdEyeEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ThirdEyeEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThirdEyeEffect.java
index 7020830..9d566d9 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ThirdEyeEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThirdEyeEffect.java
@@ -20,14 +20,14 @@ extends AbstractGameEffect {
 
     @Override
     public void update() {
-        AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, 800.0f, 0.0f));
-        AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, -800.0f, 0.0f));
-        AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, 0.0f, 500.0f));
-        AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, 0.0f, -500.0f));
-        AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, 600.0f, 0.0f));
-        AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, -600.0f, 0.0f));
-        AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, 0.0f, 400.0f));
-        AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, 0.0f, -400.0f));
+        //AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, 800.0f, 0.0f));
+        //AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, -800.0f, 0.0f));
+        //AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, 0.0f, 500.0f));
+        //AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, 0.0f, -500.0f));
+        //AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, 600.0f, 0.0f));
+        //AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, -600.0f, 0.0f));
+        //AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, 0.0f, 400.0f));
+        //AbstractDungeon.effectsQueue.add(new ThirdEyeParticleEffect(this.x, this.y, 0.0f, -400.0f));
         this.isDone = true;
     }
 
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThirdEyeParticleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThirdEyeParticleEffect.class
new file mode 100644
index 0000000..b828007
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThirdEyeParticleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ThirdEyeParticleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThirdEyeParticleEffect.java
index ce118a8..756265f 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ThirdEyeParticleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThirdEyeParticleEffect.java
@@ -51,6 +51,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThrowDaggerEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThrowDaggerEffect.class
new file mode 100644
index 0000000..97af522
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThrowDaggerEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ThrowDaggerEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThrowDaggerEffect.java
index 0c51050..2ee2a78 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ThrowDaggerEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThrowDaggerEffect.java
@@ -88,6 +88,7 @@ extends AbstractGameEffect {
         }
         this.color.a = this.duration > 0.2f ? Interpolation.fade.apply(1.0f, 0.0f, (this.duration - 0.2f) * 5.0f) : Interpolation.fade.apply(0.0f, 1.0f, this.duration * 5.0f);
         this.scale = Interpolation.bounceIn.apply(Settings.scale * 0.5f, Settings.scale * 1.5f, this.duration / 0.4f);
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThrowShivEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThrowShivEffect.class
new file mode 100644
index 0000000..50ebc64
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThrowShivEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ThrowShivEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThrowShivEffect.java
index 17927bb..4bd73fe 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ThrowShivEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ThrowShivEffect.java
@@ -76,6 +76,7 @@ extends AbstractGameEffect {
         }
         this.color.a = this.duration > 0.2f ? Interpolation.fade.apply(1.0f, 0.0f, (this.duration - 0.2f) * 5.0f) : Interpolation.fade.apply(0.0f, 1.0f, this.duration * 5.0f);
         this.scale = Interpolation.bounceIn.apply(Settings.scale * 0.5f, Settings.scale * 1.5f, this.duration / 0.4f);
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/TimeWarpTurnEndEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/TimeWarpTurnEndEffect.class
new file mode 100644
index 0000000..33a9c17
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/TimeWarpTurnEndEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/TimeWarpTurnEndEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/TimeWarpTurnEndEffect.java
index 19aafe2..686c381 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/TimeWarpTurnEndEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/TimeWarpTurnEndEffect.java
@@ -40,6 +40,7 @@ extends AbstractGameEffect {
         } else {
             this.y = Interpolation.swingIn.apply((float)Settings.HEIGHT * 0.7f - (float)TimeWarpTurnEndEffect.img.packedHeight / 2.0f, (float)(-TimeWarpTurnEndEffect.img.packedHeight) / 2.0f, this.duration - 1.0f);
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/UnknownParticleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/UnknownParticleEffect.class
new file mode 100644
index 0000000..fcc20bd
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/UnknownParticleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/UnknownParticleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/UnknownParticleEffect.java
index bb4f346..71a14ef 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/UnknownParticleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/UnknownParticleEffect.java
@@ -66,6 +66,7 @@ extends AbstractGameEffect {
         } else if (this.duration < 0.5f) {
             this.color.a = this.duration * 2.0f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/VerticalAuraEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/VerticalAuraEffect.class
new file mode 100644
index 0000000..a022212
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/VerticalAuraEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/VerticalAuraEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/VerticalAuraEffect.java
index e1c0da8..24dc93b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/VerticalAuraEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/VerticalAuraEffect.java
@@ -25,7 +25,7 @@ extends AbstractGameEffect {
     public void update() {
         int i = 0;
         while ((float)i < 20.0f) {
-            AbstractDungeon.effectsQueue.add(new VerticalAuraParticle(this.color, this.x, this.y));
+            //AbstractDungeon.effectsQueue.add(new VerticalAuraParticle(this.color, this.x, this.y));
             ++i;
         }
         this.isDone = true;
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/VerticalAuraParticle.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/VerticalAuraParticle.class
new file mode 100644
index 0000000..3b01d48
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/VerticalAuraParticle.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/VerticalAuraParticle.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/VerticalAuraParticle.java
index c39f476..613e78e 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/VerticalAuraParticle.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/VerticalAuraParticle.java
@@ -59,6 +59,7 @@ extends AbstractGameEffect {
         } else {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     private void randomizeColor(Color c, float amt) {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/VerticalImpactEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/VerticalImpactEffect.class
new file mode 100644
index 0000000..2b1e415
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/VerticalImpactEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/VerticalImpactEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/VerticalImpactEffect.java
index da144a9..f974918 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/VerticalImpactEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/VerticalImpactEffect.java
@@ -34,7 +34,7 @@ extends AbstractGameEffect {
         this.color = Color.SCARLET.cpy();
         this.renderBehind = false;
         for (int i = 0; i < 50; ++i) {
-            AbstractDungeon.effectsQueue.add(new GenericSmokeEffect(x + MathUtils.random(-280.0f, 250.0f) * Settings.scale, y - 80.0f * Settings.scale));
+            //AbstractDungeon.effectsQueue.add(new GenericSmokeEffect(x + MathUtils.random(-280.0f, 250.0f) * Settings.scale, y - 80.0f * Settings.scale));
         }
     }
 
@@ -54,6 +54,7 @@ extends AbstractGameEffect {
         }
         this.color.a = this.duration > 0.2f ? Interpolation.fade.apply(0.5f, 0.0f, (this.duration - 0.34f) * 5.0f) : Interpolation.fade.apply(0.0f, 0.5f, this.duration * 5.0f);
         this.scale = Interpolation.fade.apply(Settings.scale * 1.1f, Settings.scale * 1.05f, this.duration / 0.6f);
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ViceCrushEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ViceCrushEffect.class
new file mode 100644
index 0000000..186d1f4
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ViceCrushEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ViceCrushEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ViceCrushEffect.java
index 64c057a..73ae326 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ViceCrushEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ViceCrushEffect.java
@@ -58,8 +58,8 @@ extends AbstractGameEffect {
         } else if (this.duration < 0.2f) {
             if (!this.impactHook) {
                 this.impactHook = true;
-                AbstractDungeon.effectsQueue.add(new BorderFlashEffect(Color.PURPLE));
-                CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.HIGH, ScreenShake.ShakeDur.MED, true);
+                //AbstractDungeon.effectsQueue.add(new BorderFlashEffect(Color.PURPLE));
+                //CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.HIGH, ScreenShake.ShakeDur.MED, true);
             }
             this.color.a = Interpolation.fade.apply(0.0f, 1.0f, this.duration * 5.0f);
         } else {
@@ -68,6 +68,7 @@ extends AbstractGameEffect {
         this.scale += 1.1f * Gdx.graphics.getDeltaTime();
         this.x = Interpolation.fade.apply(this.targetX, this.startX, this.duration / this.startingDuration);
         this.x2 = Interpolation.fade.apply(this.targetX2, this.startX2, this.duration / this.startingDuration);
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ViolentAttackEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ViolentAttackEffect.class
new file mode 100644
index 0000000..9a18ab9
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ViolentAttackEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ViolentAttackEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ViolentAttackEffect.java
index fd972e2..c4faa42 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/ViolentAttackEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/ViolentAttackEffect.java
@@ -27,7 +27,7 @@ extends AbstractGameEffect {
         this.y = y;
         this.duration = 0.0f;
         this.color = setColor;
-        CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.MED, ScreenShake.ShakeDur.SHORT, false);
+        //CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.MED, ScreenShake.ShakeDur.SHORT, false);
     }
 
     @Override
@@ -35,11 +35,11 @@ extends AbstractGameEffect {
         this.duration -= Gdx.graphics.getDeltaTime();
         if (this.duration < 0.0f) {
             CardCrawlGame.sound.playA("ATTACK_HEAVY", MathUtils.random(0.2f, 0.5f));
-            AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + MathUtils.random(-100.0f, 100.0f) * Settings.scale, this.y + MathUtils.random(-100.0f, 100.0f) * Settings.scale, 0.0f, 0.0f, MathUtils.random(360.0f), MathUtils.random(2.5f, 4.0f), this.color, this.color));
+            //AbstractDungeon.effectsQueue.add(new AnimatedSlashEffect(this.x + MathUtils.random(-100.0f, 100.0f) * Settings.scale, this.y + MathUtils.random(-100.0f, 100.0f) * Settings.scale, 0.0f, 0.0f, MathUtils.random(360.0f), MathUtils.random(2.5f, 4.0f), this.color, this.color));
             if (MathUtils.randomBoolean()) {
-                AbstractDungeon.effectsQueue.add(new FlashAtkImgEffect(this.x + MathUtils.random(-150.0f, 150.0f) * Settings.scale, this.y + MathUtils.random(-150.0f, 150.0f) * Settings.scale, AbstractGameAction.AttackEffect.BLUNT_HEAVY));
+                //AbstractDungeon.effectsQueue.add(new FlashAtkImgEffect(this.x + MathUtils.random(-150.0f, 150.0f) * Settings.scale, this.y + MathUtils.random(-150.0f, 150.0f) * Settings.scale, AbstractGameAction.AttackEffect.BLUNT_HEAVY));
             } else {
-                AbstractDungeon.effectsQueue.add(new FlashAtkImgEffect(this.x + MathUtils.random(-150.0f, 150.0f) * Settings.scale, this.y + MathUtils.random(-150.0f, 150.0f) * Settings.scale, AbstractGameAction.AttackEffect.BLUNT_LIGHT));
+                //AbstractDungeon.effectsQueue.add(new FlashAtkImgEffect(this.x + MathUtils.random(-150.0f, 150.0f) * Settings.scale, this.y + MathUtils.random(-150.0f, 150.0f) * Settings.scale, AbstractGameAction.AttackEffect.BLUNT_LIGHT));
             }
             this.duration = MathUtils.random(0.05f, 0.1f);
             --this.count;
@@ -47,6 +47,7 @@ extends AbstractGameEffect {
         if (this.count == 0) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WaterDropEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WaterDropEffect.class
new file mode 100644
index 0000000..d96c02e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WaterDropEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WaterDropEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WaterDropEffect.java
index f8fa9cc..84d23fe 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WaterDropEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WaterDropEffect.java
@@ -41,7 +41,7 @@ extends AbstractGameEffect {
             ++this.frame;
             if (this.frame == 3) {
                 for (int i = 0; i < 3; ++i) {
-                    AbstractDungeon.effectsQueue.add(new WaterSplashParticleEffect(this.x, this.y));
+                    //AbstractDungeon.effectsQueue.add(new WaterSplashParticleEffect(this.x, this.y));
                 }
             }
             if (this.frame > 5) {
@@ -49,6 +49,7 @@ extends AbstractGameEffect {
                 this.isDone = true;
             }
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WaterSplashParticleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WaterSplashParticleEffect.class
new file mode 100644
index 0000000..cebceb9
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WaterSplashParticleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WaterSplashParticleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WaterSplashParticleEffect.java
index 17c46e4..894ca49 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WaterSplashParticleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WaterSplashParticleEffect.java
@@ -51,6 +51,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WeakParticleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WeakParticleEffect.class
new file mode 100644
index 0000000..24d175a
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WeakParticleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WeakParticleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WeakParticleEffect.java
index 8065711..e73540b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WeakParticleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WeakParticleEffect.java
@@ -14,6 +14,7 @@ extends AbstractGameEffect {
     @Override
     public void update() {
         super.update();
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WebEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WebEffect.class
new file mode 100644
index 0000000..af45af2
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WebEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WebEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WebEffect.java
index d5f15e9..5552906 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WebEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WebEffect.java
@@ -35,27 +35,27 @@ extends AbstractGameEffect {
             this.timer += 0.1f;
             switch (this.count) {
                 case 0: {
-                    AbstractDungeon.effectsQueue.add(new WebLineEffect(this.srcX, this.srcY, true));
-                    AbstractDungeon.effectsQueue.add(new WebLineEffect(this.srcX, this.srcY, true));
-                    AbstractDungeon.effectsQueue.add(new WebParticleEffect(this.target.hb.cX - 90.0f * Settings.scale, this.target.hb.cY - 10.0f * Settings.scale));
+                    //AbstractDungeon.effectsQueue.add(new WebLineEffect(this.srcX, this.srcY, true));
+                    //AbstractDungeon.effectsQueue.add(new WebLineEffect(this.srcX, this.srcY, true));
+                    //AbstractDungeon.effectsQueue.add(new WebParticleEffect(this.target.hb.cX - 90.0f * Settings.scale, this.target.hb.cY - 10.0f * Settings.scale));
                     break;
                 }
                 case 1: {
-                    AbstractDungeon.effectsQueue.add(new WebLineEffect(this.srcX, this.srcY, true));
-                    AbstractDungeon.effectsQueue.add(new WebLineEffect(this.srcX, this.srcY, true));
+                    //AbstractDungeon.effectsQueue.add(new WebLineEffect(this.srcX, this.srcY, true));
+                    //AbstractDungeon.effectsQueue.add(new WebLineEffect(this.srcX, this.srcY, true));
                     break;
                 }
                 case 2: {
-                    AbstractDungeon.effectsQueue.add(new WebLineEffect(this.srcX, this.srcY, true));
-                    AbstractDungeon.effectsQueue.add(new WebLineEffect(this.srcX, this.srcY, true));
-                    AbstractDungeon.effectsQueue.add(new WebParticleEffect(this.target.hb.cX + 70.0f * Settings.scale, this.target.hb.cY + 80.0f * Settings.scale));
+                    //AbstractDungeon.effectsQueue.add(new WebLineEffect(this.srcX, this.srcY, true));
+                    //AbstractDungeon.effectsQueue.add(new WebLineEffect(this.srcX, this.srcY, true));
+                    //AbstractDungeon.effectsQueue.add(new WebParticleEffect(this.target.hb.cX + 70.0f * Settings.scale, this.target.hb.cY + 80.0f * Settings.scale));
                     break;
                 }
                 case 3: {
                     break;
                 }
                 case 4: {
-                    AbstractDungeon.effectsQueue.add(new WebParticleEffect(this.target.hb.cX + 30.0f * Settings.scale, this.target.hb.cY - 100.0f * Settings.scale));
+                    //AbstractDungeon.effectsQueue.add(new WebParticleEffect(this.target.hb.cX + 30.0f * Settings.scale, this.target.hb.cY - 100.0f * Settings.scale));
                     break;
                 }
             }
@@ -64,6 +64,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WebLineEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WebLineEffect.class
new file mode 100644
index 0000000..b57f85b
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WebLineEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WebLineEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WebLineEffect.java
index 289f683..ea14fdd 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WebLineEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WebLineEffect.java
@@ -38,6 +38,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WebParticleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WebParticleEffect.class
new file mode 100644
index 0000000..56f40b1
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WebParticleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WebParticleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WebParticleEffect.java
index 1040f15..3be977c 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WebParticleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WebParticleEffect.java
@@ -33,6 +33,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WeightyImpactEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WeightyImpactEffect.class
new file mode 100644
index 0000000..d890309
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WeightyImpactEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WeightyImpactEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WeightyImpactEffect.java
index d17c757..c99ee12 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WeightyImpactEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WeightyImpactEffect.java
@@ -57,19 +57,20 @@ extends AbstractGameEffect {
             if (!this.impactHook) {
                 int i;
                 this.impactHook = true;
-                AbstractDungeon.effectsQueue.add(new BorderFlashEffect(Color.ORANGE));
-                CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.HIGH, ScreenShake.ShakeDur.MED, true);
+                //AbstractDungeon.effectsQueue.add(new BorderFlashEffect(Color.ORANGE));
+                //CardCrawlGame.screenShake.shake(ScreenShake.ShakeIntensity.HIGH, ScreenShake.ShakeDur.MED, true);
                 for (i = 0; i < 5; ++i) {
-                    AbstractDungeon.effectsQueue.add(new DamageImpactCurvyEffect(this.x + (float)WeightyImpactEffect.img.packedWidth / 2.0f, this.y + (float)WeightyImpactEffect.img.packedWidth / 2.0f));
+                    //AbstractDungeon.effectsQueue.add(new DamageImpactCurvyEffect(this.x + (float)WeightyImpactEffect.img.packedWidth / 2.0f, this.y + (float)WeightyImpactEffect.img.packedWidth / 2.0f));
                 }
                 for (i = 0; i < 30; ++i) {
-                    AbstractDungeon.effectsQueue.add(new UpgradeShineParticleEffect(this.x + MathUtils.random(-100.0f, 100.0f) * Settings.scale + (float)WeightyImpactEffect.img.packedWidth / 2.0f, this.y + MathUtils.random(-50.0f, 120.0f) * Settings.scale + (float)WeightyImpactEffect.img.packedHeight / 2.0f));
+                    //AbstractDungeon.effectsQueue.add(new UpgradeShineParticleEffect(this.x + MathUtils.random(-100.0f, 100.0f) * Settings.scale + (float)WeightyImpactEffect.img.packedWidth / 2.0f, this.y + MathUtils.random(-50.0f, 120.0f) * Settings.scale + (float)WeightyImpactEffect.img.packedHeight / 2.0f));
                 }
             }
             this.color.a = Interpolation.fade.apply(0.0f, 0.5f, 0.2f / this.duration);
         } else {
             this.color.a = Interpolation.pow2Out.apply(0.6f, 0.0f, this.duration / 1.0f);
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WhirlwindEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WhirlwindEffect.class
new file mode 100644
index 0000000..715a180
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WhirlwindEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WhirlwindEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WhirlwindEffect.java
index a9540d4..889f669 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WhirlwindEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WhirlwindEffect.java
@@ -32,14 +32,15 @@ extends AbstractGameEffect {
         if (this.timer < 0.0f) {
             this.timer += 0.05f;
             if (this.count == 0) {
-                AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(this.color.cpy()));
+                //AbstractDungeon.effectsQueue.add(new BorderLongFlashEffect(this.color.cpy()));
             }
-            AbstractDungeon.effectsQueue.add(new WindyParticleEffect(this.color, this.reverse));
+            //AbstractDungeon.effectsQueue.add(new WindyParticleEffect(this.color, this.reverse));
             ++this.count;
             if (this.count == 18) {
                 this.isDone = true;
             }
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WindyParticleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WindyParticleEffect.class
new file mode 100644
index 0000000..f9ff14a
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WindyParticleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WindyParticleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WindyParticleEffect.java
index ff8fbdd..9153c62 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WindyParticleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WindyParticleEffect.java
@@ -65,6 +65,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WobblyLineEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WobblyLineEffect.class
new file mode 100644
index 0000000..c95e2f0
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WobblyLineEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WobblyLineEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WobblyLineEffect.java
index 1f11618..60b95b8 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/combat/WobblyLineEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/combat/WobblyLineEffect.java
@@ -59,6 +59,7 @@ extends AbstractGameEffect {
         } else if (this.duration < 0.5f) {
             this.color.a = Interpolation.fade.apply(0.0f, 0.7f, this.duration * 2.0f);
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/BonfireParticleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/BonfireParticleEffect.class
new file mode 100644
index 0000000..12c0f29
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/BonfireParticleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/BonfireParticleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/BonfireParticleEffect.java
index f23b607..ee80325 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/BonfireParticleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/BonfireParticleEffect.java
@@ -59,9 +59,7 @@ extends AbstractGameEffect {
         this.vX *= 0.995f;
         this.duration -= Gdx.graphics.getDeltaTime();
         this.color.a = this.duration > this.startingDuration / 2.0f ? Interpolation.exp10In.apply(0.4f, 0.0f, (this.duration - this.startingDuration / 2.0f) / (this.startingDuration / 2.0f)) : Interpolation.pow2In.apply(0.0f, 0.4f, this.duration / (this.startingDuration / 2.0f));
-        if (this.duration < 0.0f) {
             this.isDone = true;
-        }
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/BottomFogEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/BottomFogEffect.class
new file mode 100644
index 0000000..d612eb7
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/BottomFogEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/BottomFogEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/BottomFogEffect.java
index 2f92158..b1ae1a6 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/BottomFogEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/BottomFogEffect.java
@@ -62,9 +62,7 @@ extends AbstractGameEffect {
         }
         this.duration -= Gdx.graphics.getDeltaTime();
         this.scale += Gdx.graphics.getDeltaTime() / 3.0f;
-        if (this.duration < 0.0f) {
             this.isDone = true;
-        }
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/CampfireSmokeEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/CampfireSmokeEffect.class
new file mode 100644
index 0000000..d33e512
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/CampfireSmokeEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/CampfireSmokeEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/CampfireSmokeEffect.java
index 51b6a95..d23eabc 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/CampfireSmokeEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/CampfireSmokeEffect.java
@@ -65,9 +65,7 @@ extends AbstractGameEffect {
         }
         this.duration -= Gdx.graphics.getDeltaTime();
         this.scale += Gdx.graphics.getDeltaTime() / 3.0f;
-        if (this.duration < 0.0f) {
             this.isDone = true;
-        }
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/CeilingDustCloudEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/CeilingDustCloudEffect.class
new file mode 100644
index 0000000..714977e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/CeilingDustCloudEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/CeilingDustCloudEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/CeilingDustCloudEffect.java
index 2783a2b..89d933a 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/CeilingDustCloudEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/CeilingDustCloudEffect.java
@@ -56,9 +56,7 @@ extends AbstractGameEffect {
             this.color.a = Interpolation.fade.apply(this.startingAlpha, 0.0f, 1.0f - this.duration / 3.0f);
         }
         this.duration -= Gdx.graphics.getDeltaTime();
-        if (this.duration < 0.0f) {
             this.isDone = true;
-        }
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/CeilingDustEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/CeilingDustEffect.class
new file mode 100644
index 0000000..0834f74
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/CeilingDustEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/CeilingDustEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/CeilingDustEffect.java
index 8a5c289..7a7210e 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/CeilingDustEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/CeilingDustEffect.java
@@ -30,14 +30,15 @@ extends AbstractGameEffect {
             int num = MathUtils.random(0, 8);
             this.count -= num;
             for (int i = 0; i < num; ++i) {
-                AbstractDungeon.effectsQueue.add(new FallingDustEffect(this.x, AbstractDungeon.floorY + 640.0f * Settings.scale));
+                //AbstractDungeon.effectsQueue.add(new FallingDustEffect(this.x, AbstractDungeon.floorY + 640.0f * Settings.scale));
                 if (!MathUtils.randomBoolean(0.8f)) continue;
-                AbstractDungeon.effectsQueue.add(new CeilingDustCloudEffect(this.x, AbstractDungeon.floorY + 640.0f * Settings.scale));
+                //AbstractDungeon.effectsQueue.add(new CeilingDustCloudEffect(this.x, AbstractDungeon.floorY + 640.0f * Settings.scale));
             }
             if (this.count <= 0) {
                 this.isDone = true;
             }
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/DefectVictoryEyesEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/DefectVictoryEyesEffect.class
new file mode 100644
index 0000000..2c62751
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/DefectVictoryEyesEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/DefectVictoryEyesEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/DefectVictoryEyesEffect.java
index f78eb83..e71fcf8 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/DefectVictoryEyesEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/DefectVictoryEyesEffect.java
@@ -34,6 +34,7 @@ extends AbstractGameEffect {
     public void update() {
         this.color.a = MathHelper.slowColorLerpSnap(this.color.a, 0.5f);
         this.duration += Gdx.graphics.getDeltaTime();
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/DefectVictoryNumberEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/DefectVictoryNumberEffect.class
new file mode 100644
index 0000000..1c4dcdc
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/DefectVictoryNumberEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/DefectVictoryNumberEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/DefectVictoryNumberEffect.java
index 9e997db..f1c1340 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/DefectVictoryNumberEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/DefectVictoryNumberEffect.java
@@ -63,6 +63,7 @@ extends AbstractGameEffect {
             return;
         }
         this.color.a = this.duration < 1.0f ? Interpolation.bounceOut.apply(0.0f, 0.5f, this.duration) : MathHelper.slowColorLerpSnap(this.color.a, 0.5f);
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/DustEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/DustEffect.class
new file mode 100644
index 0000000..5d8b24c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/DustEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/DustEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/DustEffect.java
index 6e37fb9..b193519 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/DustEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/DustEffect.java
@@ -76,6 +76,7 @@ extends AbstractGameEffect {
         } else {
             this.color.a = Interpolation.fade.apply(0.0f, 1.0f, this.duration / (this.startingDuration / 2.0f)) * this.baseAlpha;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/EventBgParticle.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/EventBgParticle.class
new file mode 100644
index 0000000..6765b2c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/EventBgParticle.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/EventBgParticle.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/EventBgParticle.java
index 3847159..5875b7e 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/EventBgParticle.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/EventBgParticle.java
@@ -55,6 +55,7 @@ extends AbstractGameEffect {
         } else if (this.duration < 4.0f) {
             this.color.a = Interpolation.fade.apply(0.0f, 0.3f, this.duration / 4.0f);
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/FireFlyEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/FireFlyEffect.class
new file mode 100644
index 0000000..be5c9f6
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/FireFlyEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/FireFlyEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/FireFlyEffect.java
index 384172a..c3563c1 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/FireFlyEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/FireFlyEffect.java
@@ -78,6 +78,7 @@ extends AbstractGameEffect {
         } else {
             this.color.a = Interpolation.fade.apply(0.0f, 1.0f, this.duration / (this.startingDuration / 2.0f)) * this.baseAlpha;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/InteractableTorchEffect$1.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/InteractableTorchEffect$1.class
new file mode 100644
index 0000000..fd3fa9e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/InteractableTorchEffect$1.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/InteractableTorchEffect$TorchSize.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/InteractableTorchEffect$TorchSize.class
new file mode 100644
index 0000000..d54311c
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/InteractableTorchEffect$TorchSize.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/InteractableTorchEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/InteractableTorchEffect.class
new file mode 100644
index 0000000..adeaafd
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/InteractableTorchEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/InteractableTorchEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/InteractableTorchEffect.java
index 3e098ea..911b7f0 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/InteractableTorchEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/InteractableTorchEffect.java
@@ -82,23 +82,24 @@ extends AbstractGameEffect {
                 this.particleTimer1 = 0.1f;
                 switch (this.size) {
                     case S: {
-                        AbstractDungeon.effectsQueue.add(new TorchParticleSEffect(this.x, this.y - 10.0f * Settings.scale));
-                        AbstractDungeon.effectsQueue.add(new LightFlareSEffect(this.x, this.y - 10.0f * Settings.scale));
+                        //AbstractDungeon.effectsQueue.add(new TorchParticleSEffect(this.x, this.y - 10.0f * Settings.scale));
+                        //AbstractDungeon.effectsQueue.add(new LightFlareSEffect(this.x, this.y - 10.0f * Settings.scale));
                         break;
                     }
                     case M: {
-                        AbstractDungeon.effectsQueue.add(new TorchParticleMEffect(this.x, this.y));
-                        AbstractDungeon.effectsQueue.add(new LightFlareMEffect(this.x, this.y));
+                        //AbstractDungeon.effectsQueue.add(new TorchParticleMEffect(this.x, this.y));
+                        //AbstractDungeon.effectsQueue.add(new LightFlareMEffect(this.x, this.y));
                         break;
                     }
                     case L: {
-                        AbstractDungeon.effectsQueue.add(new TorchParticleLEffect(this.x, this.y + 14.0f * Settings.scale));
-                        AbstractDungeon.effectsQueue.add(new LightFlareLEffect(this.x, this.y + 14.0f * Settings.scale));
+                        //AbstractDungeon.effectsQueue.add(new TorchParticleLEffect(this.x, this.y + 14.0f * Settings.scale));
+                        //AbstractDungeon.effectsQueue.add(new LightFlareLEffect(this.x, this.y + 14.0f * Settings.scale));
                         break;
                     }
                 }
             }
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/IroncladVictoryFlameEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/IroncladVictoryFlameEffect.class
new file mode 100644
index 0000000..6eb8759
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/IroncladVictoryFlameEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/IroncladVictoryFlameEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/IroncladVictoryFlameEffect.java
index 278dba6..f768ff4 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/IroncladVictoryFlameEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/IroncladVictoryFlameEffect.java
@@ -54,9 +54,7 @@ extends AbstractGameEffect {
         this.color.a = Interpolation.pow3Out.apply(0.0f, 0.8f, this.duration / this.startingDuration);
         this.duration -= Gdx.graphics.getDeltaTime();
         this.scale += Gdx.graphics.getDeltaTime();
-        if (this.duration < 0.0f) {
             this.isDone = true;
-        }
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LevelTransitionTextOverlayEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LevelTransitionTextOverlayEffect.class
new file mode 100644
index 0000000..60bff07
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LevelTransitionTextOverlayEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/LevelTransitionTextOverlayEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LevelTransitionTextOverlayEffect.java
index 6281d17..ec0cea4 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/LevelTransitionTextOverlayEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LevelTransitionTextOverlayEffect.java
@@ -49,6 +49,7 @@ extends AbstractGameEffect {
         }
         this.c1.a = this.alpha;
         this.c2.a = this.alpha;
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LightFlareLEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LightFlareLEffect.class
new file mode 100644
index 0000000..c2583ae
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LightFlareLEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/LightFlareLEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LightFlareLEffect.java
index 6727cc6..3572326 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/LightFlareLEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LightFlareLEffect.java
@@ -43,6 +43,7 @@ extends AbstractGameEffect {
             this.isDone = true;
         }
         this.color.a = this.startingDuration - this.duration < 1.0f ? Interpolation.fade.apply(0.2f, 0.0f, this.duration / this.startingDuration) : Interpolation.fade.apply(0.0f, 0.2f, this.duration / this.startingDuration);
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LightFlareMEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LightFlareMEffect.class
new file mode 100644
index 0000000..6352ba6
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LightFlareMEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/LightFlareMEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LightFlareMEffect.java
index eff69f2..3f417dc 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/LightFlareMEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LightFlareMEffect.java
@@ -43,6 +43,7 @@ extends AbstractGameEffect {
             this.isDone = true;
         }
         this.color.a = this.startingDuration - this.duration < 1.0f ? Interpolation.fade.apply(0.2f, 0.0f, this.duration / this.startingDuration) : Interpolation.fade.apply(0.0f, 0.2f, this.duration / this.startingDuration);
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LightFlareSEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LightFlareSEffect.class
new file mode 100644
index 0000000..caec438
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LightFlareSEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/LightFlareSEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LightFlareSEffect.java
index 1bca873..f80accd 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/LightFlareSEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LightFlareSEffect.java
@@ -43,6 +43,7 @@ extends AbstractGameEffect {
             this.isDone = true;
         }
         this.color.a = this.startingDuration - this.duration < 1.0f ? Interpolation.fade.apply(0.2f, 0.0f, this.duration / this.startingDuration) : Interpolation.fade.apply(0.0f, 0.2f, this.duration / this.startingDuration);
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LogoFlameEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LogoFlameEffect.class
new file mode 100644
index 0000000..6362520
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LogoFlameEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/LogoFlameEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LogoFlameEffect.java
index ba28e53..75b2721 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/LogoFlameEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/LogoFlameEffect.java
@@ -59,6 +59,7 @@ extends AbstractGameEffect {
         } else {
             this.color.a = this.startingDuration - this.duration < 0.5f ? this.startingDuration - this.duration : 0.5f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/ShinySparkleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/ShinySparkleEffect.class
new file mode 100644
index 0000000..b2307f8
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/ShinySparkleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/ShinySparkleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/ShinySparkleEffect.java
index 977c7fb..bb66085 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/ShinySparkleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/ShinySparkleEffect.java
@@ -50,6 +50,7 @@ extends AbstractGameEffect {
         } else {
             this.color.a = Interpolation.fade.apply(0.0f, 1.0f, this.duration / (this.startingDuration / 2.0f)) / 4.0f;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SilentVictoryStarEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SilentVictoryStarEffect.class
new file mode 100644
index 0000000..d1d0abf
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SilentVictoryStarEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/SilentVictoryStarEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SilentVictoryStarEffect.java
index d1f508d..7b9a7f6 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/SilentVictoryStarEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SilentVictoryStarEffect.java
@@ -48,6 +48,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SlowFireParticleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SlowFireParticleEffect.class
new file mode 100644
index 0000000..cabf50b
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SlowFireParticleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/SlowFireParticleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SlowFireParticleEffect.java
index caf500c..644d136 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/SlowFireParticleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SlowFireParticleEffect.java
@@ -47,6 +47,7 @@ extends AbstractGameEffect {
         } else {
             this.color.a = Interpolation.pow2Out.apply(0.0f, 0.7f, this.duration);
         }
+        this.isDone = true;
     }
 
     private void setImg() {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SpookierChestEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SpookierChestEffect.class
new file mode 100644
index 0000000..538212d
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SpookierChestEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/SpookierChestEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SpookierChestEffect.java
index 1568dbb..a774e62 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/SpookierChestEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SpookierChestEffect.java
@@ -69,6 +69,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SpookyChestEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SpookyChestEffect.class
new file mode 100644
index 0000000..33b10cf
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SpookyChestEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/SpookyChestEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SpookyChestEffect.java
index 27399e4..a5e1c67 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/SpookyChestEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/SpookyChestEffect.java
@@ -70,6 +70,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TitleDustEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TitleDustEffect.class
new file mode 100644
index 0000000..6580141
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TitleDustEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/TitleDustEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TitleDustEffect.java
index 5625a19..2831878 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/TitleDustEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TitleDustEffect.java
@@ -69,6 +69,7 @@ extends AbstractGameEffect {
         if (this.duration < 0.0f) {
             this.isDone = true;
         }
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleLEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleLEffect.class
new file mode 100644
index 0000000..0ffb150
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleLEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/TorchParticleLEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleLEffect.java
index 8f9cf69..310e062 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/TorchParticleLEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleLEffect.java
@@ -54,6 +54,7 @@ extends AbstractGameEffect {
         }
         this.color.a = Interpolation.fade.apply(0.0f, 0.75f, this.duration / this.startingDuration);
         this.y += this.vY * Gdx.graphics.getDeltaTime();
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleMEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleMEffect.class
new file mode 100644
index 0000000..1c13a6f
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleMEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/TorchParticleMEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleMEffect.java
index aaf2dc7..e41003b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/TorchParticleMEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleMEffect.java
@@ -54,6 +54,7 @@ extends AbstractGameEffect {
         }
         this.color.a = Interpolation.fade.apply(0.0f, 0.75f, this.duration / this.startingDuration);
         this.y += this.vY * Gdx.graphics.getDeltaTime();
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleSEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleSEffect.class
new file mode 100644
index 0000000..7a5603e
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleSEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/TorchParticleSEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleSEffect.java
index 39d6e8e..aa94f59 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/TorchParticleSEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleSEffect.java
@@ -54,6 +54,7 @@ extends AbstractGameEffect {
         }
         this.color.a = Interpolation.fade.apply(0.0f, 0.75f, this.duration / this.startingDuration);
         this.y += this.vY * Gdx.graphics.getDeltaTime();
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleXLEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleXLEffect.class
new file mode 100644
index 0000000..a5c580d
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleXLEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/TorchParticleXLEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleXLEffect.java
index eca3f66..6c58f1b 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/TorchParticleXLEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/TorchParticleXLEffect.java
@@ -66,6 +66,7 @@ extends AbstractGameEffect {
         }
         this.color.a = Interpolation.fade.apply(0.0f, 1.0f, this.duration / this.startingDuration);
         this.y += this.vY * Gdx.graphics.getDeltaTime() * 2.0f;
+        this.isDone = true;
     }
 
     @Override
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/WatcherVictoryEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/WatcherVictoryEffect.class
new file mode 100644
index 0000000..a92f076
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/WatcherVictoryEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/WatcherVictoryEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/WatcherVictoryEffect.java
index 2765707..f955275 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/WatcherVictoryEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/WatcherVictoryEffect.java
@@ -32,6 +32,7 @@ extends AbstractGameEffect {
         this.color.a = MathHelper.slowColorLerpSnap(this.color.a, 1.0f);
         this.duration += Gdx.graphics.getDeltaTime();
         this.rotation += 5.0f * Gdx.graphics.getDeltaTime();
+        this.isDone = true;
     }
 
     private void renderHelper(SpriteBatch sb, float offsetX, float offsetY, float rotation, Color color, float scaleMod) {
diff --git a/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/WobblyCircleEffect.class b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/WobblyCircleEffect.class
new file mode 100644
index 0000000..87da418
Binary files /dev/null and b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/WobblyCircleEffect.class differ
diff --git a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/WobblyCircleEffect.java b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/WobblyCircleEffect.java
index d9ef135..b705d79 100644
--- a/6661e72999ce8b0e2b6f62809e8b2737-original/com/megacrit/cardcrawl/vfx/scene/WobblyCircleEffect.java
+++ b/6661e72999ce8b0e2b6f62809e8b2737/com/megacrit/cardcrawl/vfx/scene/WobblyCircleEffect.java
@@ -52,6 +52,7 @@ extends AbstractGameEffect {
         } else {
             this.color.a = Interpolation.fade.apply(0.0f, 1.0f, this.duration / (this.startingDuration / 2.0f)) * this.aV;
         }
+        this.isDone = true;
     }
 
     @Override
